
byggernV5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d8  00800100  000008b2  00000946  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001d8  008001d8  00000a1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000103a  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b29  00000000  00000000  00001bea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000756  00000000  00000000  00002713  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00002e6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000058e  00000000  00000000  00003080  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000580  00000000  00000000  0000360e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003b8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 eb       	ldi	r30, 0xB2	; 178
  84:	f8 e0       	ldi	r31, 0x08	; 8
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 3d       	cpi	r26, 0xD8	; 216
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a8 ed       	ldi	r26, 0xD8	; 216
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ae 3d       	cpi	r26, 0xDE	; 222
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <main>
  a6:	0c 94 57 04 	jmp	0x8ae	; 0x8ae <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <convert>:
#define adc_adr (0x1400)

int16_t convert(int16_t adr){
	int16_t gain = 1;
	int16_t offset = -9352;
	int16_t value = adr*gain+offset;
  ae:	bc 01       	movw	r22, r24
  b0:	68 58       	subi	r22, 0x88	; 136
  b2:	74 42       	sbci	r23, 0x24	; 36
	int16_t normalized = value;
	
	if(value > 3){
  b4:	64 30       	cpi	r22, 0x04	; 4
  b6:	71 05       	cpc	r23, r1
  b8:	5c f0       	brlt	.+22     	; 0xd0 <convert+0x22>
		normalized = value * 100 / 119;
  ba:	24 e6       	ldi	r18, 0x64	; 100
  bc:	26 9f       	mul	r18, r22
  be:	c0 01       	movw	r24, r0
  c0:	27 9f       	mul	r18, r23
  c2:	90 0d       	add	r25, r0
  c4:	11 24       	eor	r1, r1
  c6:	67 e7       	ldi	r22, 0x77	; 119
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
  ce:	0e c0       	rjmp	.+28     	; 0xec <convert+0x3e>
	} else if (value < -3){
  d0:	6d 3f       	cpi	r22, 0xFD	; 253
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	78 07       	cpc	r23, r24
  d6:	54 f4       	brge	.+20     	; 0xec <convert+0x3e>
		normalized = value * 100 / 136;
  d8:	24 e6       	ldi	r18, 0x64	; 100
  da:	26 9f       	mul	r18, r22
  dc:	c0 01       	movw	r24, r0
  de:	27 9f       	mul	r18, r23
  e0:	90 0d       	add	r25, r0
  e2:	11 24       	eor	r1, r1
  e4:	68 e8       	ldi	r22, 0x88	; 136
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	0e 94 4a 01 	call	0x294	; 0x294 <__divmodhi4>
	}
	
	return normalized;
}
  ec:	cb 01       	movw	r24, r22
  ee:	08 95       	ret

000000f0 <setStates>:

void setStates(IO* io){
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	ec 01       	movw	r28, r24
	xmem_write(16, adc_adr);
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	74 e1       	ldi	r23, 0x14	; 20
  fa:	80 e1       	ldi	r24, 0x10	; 16
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 42 01 	call	0x284	; 0x284 <xmem_write>
	
	io->joy_x = convert(xmem_read(adc_adr));
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	94 e1       	ldi	r25, 0x14	; 20
 106:	0e 94 46 01 	call	0x28c	; 0x28c <xmem_read>
 10a:	0e 94 57 00 	call	0xae	; 0xae <convert>
 10e:	99 83       	std	Y+1, r25	; 0x01
 110:	88 83       	st	Y, r24
	io->joy_y = convert(xmem_read(adc_adr));
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	94 e1       	ldi	r25, 0x14	; 20
 116:	0e 94 46 01 	call	0x28c	; 0x28c <xmem_read>
 11a:	0e 94 57 00 	call	0xae	; 0xae <convert>
 11e:	9b 83       	std	Y+3, r25	; 0x03
 120:	8a 83       	std	Y+2, r24	; 0x02
	io->slider_l = xmem_read(adc_adr)-9216;
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	94 e1       	ldi	r25, 0x14	; 20
 126:	0e 94 46 01 	call	0x28c	; 0x28c <xmem_read>
 12a:	94 52       	subi	r25, 0x24	; 36
 12c:	9d 83       	std	Y+5, r25	; 0x05
 12e:	8c 83       	std	Y+4, r24	; 0x04
	io->slider_r = xmem_read(adc_adr)-9216;
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	94 e1       	ldi	r25, 0x14	; 20
 134:	0e 94 46 01 	call	0x28c	; 0x28c <xmem_read>
 138:	94 52       	subi	r25, 0x24	; 36
 13a:	9f 83       	std	Y+7, r25	; 0x07
 13c:	8e 83       	std	Y+6, r24	; 0x06
}
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	08 95       	ret

00000144 <getStates>:

void getStates(IO* io){
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	ec 01       	movw	r28, r24
	printf("Joystick x: %d %% \n", io->joy_x);
 14a:	88 81       	ld	r24, Y
 14c:	99 81       	ldd	r25, Y+1	; 0x01
 14e:	9f 93       	push	r25
 150:	8f 93       	push	r24
 152:	8e e0       	ldi	r24, 0x0E	; 14
 154:	91 e0       	ldi	r25, 0x01	; 1
 156:	9f 93       	push	r25
 158:	8f 93       	push	r24
 15a:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	printf("Joystick y: %d %% \n", io->joy_y);
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	9b 81       	ldd	r25, Y+3	; 0x03
 162:	9f 93       	push	r25
 164:	8f 93       	push	r24
 166:	82 e2       	ldi	r24, 0x22	; 34
 168:	91 e0       	ldi	r25, 0x01	; 1
 16a:	9f 93       	push	r25
 16c:	8f 93       	push	r24
 16e:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	printf("Slider left: %d %% \n", io->slider_l);
 172:	8c 81       	ldd	r24, Y+4	; 0x04
 174:	9d 81       	ldd	r25, Y+5	; 0x05
 176:	9f 93       	push	r25
 178:	8f 93       	push	r24
 17a:	86 e3       	ldi	r24, 0x36	; 54
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	9f 93       	push	r25
 180:	8f 93       	push	r24
 182:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	printf("Slider right: %d %% \n", io->slider_r);
 186:	8e 81       	ldd	r24, Y+6	; 0x06
 188:	9f 81       	ldd	r25, Y+7	; 0x07
 18a:	9f 93       	push	r25
 18c:	8f 93       	push	r24
 18e:	8b e4       	ldi	r24, 0x4B	; 75
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
	printf("\n");
 19a:	8a e0       	ldi	r24, 0x0A	; 10
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 88 01 	call	0x310	; 0x310 <putchar>
}
 1a2:	8d b7       	in	r24, 0x3d	; 61
 1a4:	9e b7       	in	r25, 0x3e	; 62
 1a6:	40 96       	adiw	r24, 0x10	; 16
 1a8:	0f b6       	in	r0, 0x3f	; 63
 1aa:	f8 94       	cli
 1ac:	9e bf       	out	0x3e, r25	; 62
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	8d bf       	out	0x3d, r24	; 61
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <pwm_init>:
		TCCR3B = (0<<WGM33) | (1<<WGM32) |(1<<CS30);
		OCR3B = 0;
		};
		
void pwm_init(void) {
		DDRD |=(1<<DDD4);
 1b8:	81 b3       	in	r24, 0x11	; 17
 1ba:	80 61       	ori	r24, 0x10	; 16
 1bc:	81 bb       	out	0x11, r24	; 17
		TCCR3A = (0<<COM3A0) | (1<<COM3A1) | (0<<WGM31) | (1<<WGM30);
 1be:	81 e8       	ldi	r24, 0x81	; 129
 1c0:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
		TCCR3B = (0<<ICES3) | (1<<WGM32) |(1<<CS30);
 1c4:	89 e0       	ldi	r24, 0x09	; 9
 1c6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
		OCR3B = 0;
 1ca:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
 1ce:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
 1d2:	08 95       	ret

000001d4 <main>:
	};
	
int main(void)
{
 1d4:	cf 93       	push	r28
 1d6:	df 93       	push	r29
 1d8:	cd b7       	in	r28, 0x3d	; 61
 1da:	de b7       	in	r29, 0x3e	; 62
 1dc:	28 97       	sbiw	r28, 0x08	; 8
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	f8 94       	cli
 1e2:	de bf       	out	0x3e, r29	; 62
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	cd bf       	out	0x3d, r28	; 61
	pwm_init();
 1e8:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <pwm_init>
	USART_Init(MYUBRR);
 1ec:	8f e1       	ldi	r24, 0x1F	; 31
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	0e 94 18 01 	call	0x230	; 0x230 <USART_Init>
	init_printf();
 1f4:	0e 94 31 01 	call	0x262	; 0x262 <init_printf>
	xmem_init();
 1f8:	0e 94 38 01 	call	0x270	; 0x270 <xmem_init>
	printf("Hei");
 1fc:	83 ed       	ldi	r24, 0xD3	; 211
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	9f 93       	push	r25
 202:	8f 93       	push	r24
 204:	0e 94 72 01 	call	0x2e4	; 0x2e4 <printf>
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
		_delay_ms(10);
		uint16_t value=adc[0];
		printf("Adc-verdi: %u\n\n",value);
		_delay_ms(10);*/
		
		setStates(&io);
 20c:	ce 01       	movw	r24, r28
 20e:	01 96       	adiw	r24, 0x01	; 1
 210:	0e 94 78 00 	call	0xf0	; 0xf0 <setStates>
		getStates(&io);
 214:	ce 01       	movw	r24, r28
 216:	01 96       	adiw	r24, 0x01	; 1
 218:	0e 94 a2 00 	call	0x144	; 0x144 <getStates>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	8f ef       	ldi	r24, 0xFF	; 255
 220:	92 e0       	ldi	r25, 0x02	; 2
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 22e:	ee cf       	rjmp	.-36     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>

00000230 <USART_Init>:
 230:	90 bd       	out	0x20, r25	; 32
 232:	89 b9       	out	0x09, r24	; 9
 234:	88 e1       	ldi	r24, 0x18	; 24
 236:	8a b9       	out	0x0a, r24	; 10
 238:	8e e8       	ldi	r24, 0x8E	; 142
 23a:	80 bd       	out	0x20, r24	; 32
 23c:	08 95       	ret

0000023e <USART_Transmit>:
 23e:	5d 9b       	sbis	0x0b, 5	; 11
 240:	fe cf       	rjmp	.-4      	; 0x23e <USART_Transmit>
 242:	8c b9       	out	0x0c, r24	; 12
 244:	08 95       	ret

00000246 <uart_putchar>:
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	8a 30       	cpi	r24, 0x0A	; 10
 24c:	19 f4       	brne	.+6      	; 0x254 <uart_putchar+0xe>
 24e:	8d e0       	ldi	r24, 0x0D	; 13
 250:	0e 94 1f 01 	call	0x23e	; 0x23e <USART_Transmit>
 254:	8c 2f       	mov	r24, r28
 256:	0e 94 1f 01 	call	0x23e	; 0x23e <USART_Transmit>
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	cf 91       	pop	r28
 260:	08 95       	ret

00000262 <init_printf>:
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <__data_end+0x3>
 26a:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <__data_end+0x2>
 26e:	08 95       	ret

00000270 <xmem_init>:
 270:	85 b7       	in	r24, 0x35	; 53
 272:	80 68       	ori	r24, 0x80	; 128
 274:	85 bf       	out	0x35, r24	; 53
 276:	80 b7       	in	r24, 0x30	; 48
 278:	87 7e       	andi	r24, 0xE7	; 231
 27a:	80 bf       	out	0x30, r24	; 48
 27c:	80 b7       	in	r24, 0x30	; 48
 27e:	80 62       	ori	r24, 0x20	; 32
 280:	80 bf       	out	0x30, r24	; 48
 282:	08 95       	ret

00000284 <xmem_write>:
 284:	fb 01       	movw	r30, r22
 286:	f0 5f       	subi	r31, 0xF0	; 240
 288:	80 83       	st	Z, r24
 28a:	08 95       	ret

0000028c <xmem_read>:
 28c:	90 5f       	subi	r25, 0xF0	; 240
 28e:	fc 01       	movw	r30, r24
 290:	80 81       	ld	r24, Z
 292:	08 95       	ret

00000294 <__divmodhi4>:
 294:	97 fb       	bst	r25, 7
 296:	07 2e       	mov	r0, r23
 298:	16 f4       	brtc	.+4      	; 0x29e <__divmodhi4+0xa>
 29a:	00 94       	com	r0
 29c:	07 d0       	rcall	.+14     	; 0x2ac <__divmodhi4_neg1>
 29e:	77 fd       	sbrc	r23, 7
 2a0:	09 d0       	rcall	.+18     	; 0x2b4 <__divmodhi4_neg2>
 2a2:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__udivmodhi4>
 2a6:	07 fc       	sbrc	r0, 7
 2a8:	05 d0       	rcall	.+10     	; 0x2b4 <__divmodhi4_neg2>
 2aa:	3e f4       	brtc	.+14     	; 0x2ba <__divmodhi4_exit>

000002ac <__divmodhi4_neg1>:
 2ac:	90 95       	com	r25
 2ae:	81 95       	neg	r24
 2b0:	9f 4f       	sbci	r25, 0xFF	; 255
 2b2:	08 95       	ret

000002b4 <__divmodhi4_neg2>:
 2b4:	70 95       	com	r23
 2b6:	61 95       	neg	r22
 2b8:	7f 4f       	sbci	r23, 0xFF	; 255

000002ba <__divmodhi4_exit>:
 2ba:	08 95       	ret

000002bc <__udivmodhi4>:
 2bc:	aa 1b       	sub	r26, r26
 2be:	bb 1b       	sub	r27, r27
 2c0:	51 e1       	ldi	r21, 0x11	; 17
 2c2:	07 c0       	rjmp	.+14     	; 0x2d2 <__udivmodhi4_ep>

000002c4 <__udivmodhi4_loop>:
 2c4:	aa 1f       	adc	r26, r26
 2c6:	bb 1f       	adc	r27, r27
 2c8:	a6 17       	cp	r26, r22
 2ca:	b7 07       	cpc	r27, r23
 2cc:	10 f0       	brcs	.+4      	; 0x2d2 <__udivmodhi4_ep>
 2ce:	a6 1b       	sub	r26, r22
 2d0:	b7 0b       	sbc	r27, r23

000002d2 <__udivmodhi4_ep>:
 2d2:	88 1f       	adc	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	5a 95       	dec	r21
 2d8:	a9 f7       	brne	.-22     	; 0x2c4 <__udivmodhi4_loop>
 2da:	80 95       	com	r24
 2dc:	90 95       	com	r25
 2de:	bc 01       	movw	r22, r24
 2e0:	cd 01       	movw	r24, r26
 2e2:	08 95       	ret

000002e4 <printf>:
 2e4:	a0 e0       	ldi	r26, 0x00	; 0
 2e6:	b0 e0       	ldi	r27, 0x00	; 0
 2e8:	e8 e7       	ldi	r30, 0x78	; 120
 2ea:	f1 e0       	ldi	r31, 0x01	; 1
 2ec:	0c 94 30 04 	jmp	0x860	; 0x860 <__prologue_saves__+0x20>
 2f0:	ae 01       	movw	r20, r28
 2f2:	4b 5f       	subi	r20, 0xFB	; 251
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	fa 01       	movw	r30, r20
 2f8:	61 91       	ld	r22, Z+
 2fa:	71 91       	ld	r23, Z+
 2fc:	af 01       	movw	r20, r30
 2fe:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <__data_end+0x2>
 302:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <__data_end+0x3>
 306:	0e 94 8f 01 	call	0x31e	; 0x31e <vfprintf>
 30a:	e2 e0       	ldi	r30, 0x02	; 2
 30c:	0c 94 4c 04 	jmp	0x898	; 0x898 <__epilogue_restores__+0x20>

00000310 <putchar>:
 310:	60 91 da 01 	lds	r22, 0x01DA	; 0x8001da <__data_end+0x2>
 314:	70 91 db 01 	lds	r23, 0x01DB	; 0x8001db <__data_end+0x3>
 318:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 31c:	08 95       	ret

0000031e <vfprintf>:
 31e:	ab e0       	ldi	r26, 0x0B	; 11
 320:	b0 e0       	ldi	r27, 0x00	; 0
 322:	e5 e9       	ldi	r30, 0x95	; 149
 324:	f1 e0       	ldi	r31, 0x01	; 1
 326:	0c 94 20 04 	jmp	0x840	; 0x840 <__prologue_saves__>
 32a:	6c 01       	movw	r12, r24
 32c:	7b 01       	movw	r14, r22
 32e:	8a 01       	movw	r16, r20
 330:	fc 01       	movw	r30, r24
 332:	17 82       	std	Z+7, r1	; 0x07
 334:	16 82       	std	Z+6, r1	; 0x06
 336:	83 81       	ldd	r24, Z+3	; 0x03
 338:	81 ff       	sbrs	r24, 1
 33a:	cc c1       	rjmp	.+920    	; 0x6d4 <__stack+0x1d5>
 33c:	ce 01       	movw	r24, r28
 33e:	01 96       	adiw	r24, 0x01	; 1
 340:	3c 01       	movw	r6, r24
 342:	f6 01       	movw	r30, r12
 344:	93 81       	ldd	r25, Z+3	; 0x03
 346:	f7 01       	movw	r30, r14
 348:	93 fd       	sbrc	r25, 3
 34a:	85 91       	lpm	r24, Z+
 34c:	93 ff       	sbrs	r25, 3
 34e:	81 91       	ld	r24, Z+
 350:	7f 01       	movw	r14, r30
 352:	88 23       	and	r24, r24
 354:	09 f4       	brne	.+2      	; 0x358 <vfprintf+0x3a>
 356:	ba c1       	rjmp	.+884    	; 0x6cc <__stack+0x1cd>
 358:	85 32       	cpi	r24, 0x25	; 37
 35a:	39 f4       	brne	.+14     	; 0x36a <vfprintf+0x4c>
 35c:	93 fd       	sbrc	r25, 3
 35e:	85 91       	lpm	r24, Z+
 360:	93 ff       	sbrs	r25, 3
 362:	81 91       	ld	r24, Z+
 364:	7f 01       	movw	r14, r30
 366:	85 32       	cpi	r24, 0x25	; 37
 368:	29 f4       	brne	.+10     	; 0x374 <vfprintf+0x56>
 36a:	b6 01       	movw	r22, r12
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 372:	e7 cf       	rjmp	.-50     	; 0x342 <vfprintf+0x24>
 374:	91 2c       	mov	r9, r1
 376:	21 2c       	mov	r2, r1
 378:	31 2c       	mov	r3, r1
 37a:	ff e1       	ldi	r31, 0x1F	; 31
 37c:	f3 15       	cp	r31, r3
 37e:	d8 f0       	brcs	.+54     	; 0x3b6 <vfprintf+0x98>
 380:	8b 32       	cpi	r24, 0x2B	; 43
 382:	79 f0       	breq	.+30     	; 0x3a2 <vfprintf+0x84>
 384:	38 f4       	brcc	.+14     	; 0x394 <vfprintf+0x76>
 386:	80 32       	cpi	r24, 0x20	; 32
 388:	79 f0       	breq	.+30     	; 0x3a8 <vfprintf+0x8a>
 38a:	83 32       	cpi	r24, 0x23	; 35
 38c:	a1 f4       	brne	.+40     	; 0x3b6 <vfprintf+0x98>
 38e:	23 2d       	mov	r18, r3
 390:	20 61       	ori	r18, 0x10	; 16
 392:	1d c0       	rjmp	.+58     	; 0x3ce <vfprintf+0xb0>
 394:	8d 32       	cpi	r24, 0x2D	; 45
 396:	61 f0       	breq	.+24     	; 0x3b0 <vfprintf+0x92>
 398:	80 33       	cpi	r24, 0x30	; 48
 39a:	69 f4       	brne	.+26     	; 0x3b6 <vfprintf+0x98>
 39c:	23 2d       	mov	r18, r3
 39e:	21 60       	ori	r18, 0x01	; 1
 3a0:	16 c0       	rjmp	.+44     	; 0x3ce <vfprintf+0xb0>
 3a2:	83 2d       	mov	r24, r3
 3a4:	82 60       	ori	r24, 0x02	; 2
 3a6:	38 2e       	mov	r3, r24
 3a8:	e3 2d       	mov	r30, r3
 3aa:	e4 60       	ori	r30, 0x04	; 4
 3ac:	3e 2e       	mov	r3, r30
 3ae:	2a c0       	rjmp	.+84     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3b0:	f3 2d       	mov	r31, r3
 3b2:	f8 60       	ori	r31, 0x08	; 8
 3b4:	1d c0       	rjmp	.+58     	; 0x3f0 <vfprintf+0xd2>
 3b6:	37 fc       	sbrc	r3, 7
 3b8:	2d c0       	rjmp	.+90     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 3ba:	20 ed       	ldi	r18, 0xD0	; 208
 3bc:	28 0f       	add	r18, r24
 3be:	2a 30       	cpi	r18, 0x0A	; 10
 3c0:	40 f0       	brcs	.+16     	; 0x3d2 <vfprintf+0xb4>
 3c2:	8e 32       	cpi	r24, 0x2E	; 46
 3c4:	b9 f4       	brne	.+46     	; 0x3f4 <vfprintf+0xd6>
 3c6:	36 fc       	sbrc	r3, 6
 3c8:	81 c1       	rjmp	.+770    	; 0x6cc <__stack+0x1cd>
 3ca:	23 2d       	mov	r18, r3
 3cc:	20 64       	ori	r18, 0x40	; 64
 3ce:	32 2e       	mov	r3, r18
 3d0:	19 c0       	rjmp	.+50     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3d2:	36 fe       	sbrs	r3, 6
 3d4:	06 c0       	rjmp	.+12     	; 0x3e2 <vfprintf+0xc4>
 3d6:	8a e0       	ldi	r24, 0x0A	; 10
 3d8:	98 9e       	mul	r9, r24
 3da:	20 0d       	add	r18, r0
 3dc:	11 24       	eor	r1, r1
 3de:	92 2e       	mov	r9, r18
 3e0:	11 c0       	rjmp	.+34     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3e2:	ea e0       	ldi	r30, 0x0A	; 10
 3e4:	2e 9e       	mul	r2, r30
 3e6:	20 0d       	add	r18, r0
 3e8:	11 24       	eor	r1, r1
 3ea:	22 2e       	mov	r2, r18
 3ec:	f3 2d       	mov	r31, r3
 3ee:	f0 62       	ori	r31, 0x20	; 32
 3f0:	3f 2e       	mov	r3, r31
 3f2:	08 c0       	rjmp	.+16     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3f4:	8c 36       	cpi	r24, 0x6C	; 108
 3f6:	21 f4       	brne	.+8      	; 0x400 <__DATA_REGION_LENGTH__>
 3f8:	83 2d       	mov	r24, r3
 3fa:	80 68       	ori	r24, 0x80	; 128
 3fc:	38 2e       	mov	r3, r24
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 400:	88 36       	cpi	r24, 0x68	; 104
 402:	41 f4       	brne	.+16     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 404:	f7 01       	movw	r30, r14
 406:	93 fd       	sbrc	r25, 3
 408:	85 91       	lpm	r24, Z+
 40a:	93 ff       	sbrs	r25, 3
 40c:	81 91       	ld	r24, Z+
 40e:	7f 01       	movw	r14, r30
 410:	81 11       	cpse	r24, r1
 412:	b3 cf       	rjmp	.-154    	; 0x37a <vfprintf+0x5c>
 414:	98 2f       	mov	r25, r24
 416:	9f 7d       	andi	r25, 0xDF	; 223
 418:	95 54       	subi	r25, 0x45	; 69
 41a:	93 30       	cpi	r25, 0x03	; 3
 41c:	28 f4       	brcc	.+10     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 41e:	0c 5f       	subi	r16, 0xFC	; 252
 420:	1f 4f       	sbci	r17, 0xFF	; 255
 422:	9f e3       	ldi	r25, 0x3F	; 63
 424:	99 83       	std	Y+1, r25	; 0x01
 426:	0d c0       	rjmp	.+26     	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 428:	83 36       	cpi	r24, 0x63	; 99
 42a:	31 f0       	breq	.+12     	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 42c:	83 37       	cpi	r24, 0x73	; 115
 42e:	71 f0       	breq	.+28     	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 430:	83 35       	cpi	r24, 0x53	; 83
 432:	09 f0       	breq	.+2      	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 434:	59 c0       	rjmp	.+178    	; 0x4e8 <__DATA_REGION_LENGTH__+0xe8>
 436:	21 c0       	rjmp	.+66     	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
 438:	f8 01       	movw	r30, r16
 43a:	80 81       	ld	r24, Z
 43c:	89 83       	std	Y+1, r24	; 0x01
 43e:	0e 5f       	subi	r16, 0xFE	; 254
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	88 24       	eor	r8, r8
 444:	83 94       	inc	r8
 446:	91 2c       	mov	r9, r1
 448:	53 01       	movw	r10, r6
 44a:	13 c0       	rjmp	.+38     	; 0x472 <__DATA_REGION_LENGTH__+0x72>
 44c:	28 01       	movw	r4, r16
 44e:	f2 e0       	ldi	r31, 0x02	; 2
 450:	4f 0e       	add	r4, r31
 452:	51 1c       	adc	r5, r1
 454:	f8 01       	movw	r30, r16
 456:	a0 80       	ld	r10, Z
 458:	b1 80       	ldd	r11, Z+1	; 0x01
 45a:	36 fe       	sbrs	r3, 6
 45c:	03 c0       	rjmp	.+6      	; 0x464 <__DATA_REGION_LENGTH__+0x64>
 45e:	69 2d       	mov	r22, r9
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	02 c0       	rjmp	.+4      	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 464:	6f ef       	ldi	r22, 0xFF	; 255
 466:	7f ef       	ldi	r23, 0xFF	; 255
 468:	c5 01       	movw	r24, r10
 46a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <strnlen>
 46e:	4c 01       	movw	r8, r24
 470:	82 01       	movw	r16, r4
 472:	f3 2d       	mov	r31, r3
 474:	ff 77       	andi	r31, 0x7F	; 127
 476:	3f 2e       	mov	r3, r31
 478:	16 c0       	rjmp	.+44     	; 0x4a6 <__DATA_REGION_LENGTH__+0xa6>
 47a:	28 01       	movw	r4, r16
 47c:	22 e0       	ldi	r18, 0x02	; 2
 47e:	42 0e       	add	r4, r18
 480:	51 1c       	adc	r5, r1
 482:	f8 01       	movw	r30, r16
 484:	a0 80       	ld	r10, Z
 486:	b1 80       	ldd	r11, Z+1	; 0x01
 488:	36 fe       	sbrs	r3, 6
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 48c:	69 2d       	mov	r22, r9
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	02 c0       	rjmp	.+4      	; 0x496 <__DATA_REGION_LENGTH__+0x96>
 492:	6f ef       	ldi	r22, 0xFF	; 255
 494:	7f ef       	ldi	r23, 0xFF	; 255
 496:	c5 01       	movw	r24, r10
 498:	0e 94 70 03 	call	0x6e0	; 0x6e0 <strnlen_P>
 49c:	4c 01       	movw	r8, r24
 49e:	f3 2d       	mov	r31, r3
 4a0:	f0 68       	ori	r31, 0x80	; 128
 4a2:	3f 2e       	mov	r3, r31
 4a4:	82 01       	movw	r16, r4
 4a6:	33 fc       	sbrc	r3, 3
 4a8:	1b c0       	rjmp	.+54     	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4aa:	82 2d       	mov	r24, r2
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	88 16       	cp	r8, r24
 4b0:	99 06       	cpc	r9, r25
 4b2:	b0 f4       	brcc	.+44     	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4b4:	b6 01       	movw	r22, r12
 4b6:	80 e2       	ldi	r24, 0x20	; 32
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 4be:	2a 94       	dec	r2
 4c0:	f4 cf       	rjmp	.-24     	; 0x4aa <__DATA_REGION_LENGTH__+0xaa>
 4c2:	f5 01       	movw	r30, r10
 4c4:	37 fc       	sbrc	r3, 7
 4c6:	85 91       	lpm	r24, Z+
 4c8:	37 fe       	sbrs	r3, 7
 4ca:	81 91       	ld	r24, Z+
 4cc:	5f 01       	movw	r10, r30
 4ce:	b6 01       	movw	r22, r12
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 4d6:	21 10       	cpse	r2, r1
 4d8:	2a 94       	dec	r2
 4da:	21 e0       	ldi	r18, 0x01	; 1
 4dc:	82 1a       	sub	r8, r18
 4de:	91 08       	sbc	r9, r1
 4e0:	81 14       	cp	r8, r1
 4e2:	91 04       	cpc	r9, r1
 4e4:	71 f7       	brne	.-36     	; 0x4c2 <__DATA_REGION_LENGTH__+0xc2>
 4e6:	e8 c0       	rjmp	.+464    	; 0x6b8 <__stack+0x1b9>
 4e8:	84 36       	cpi	r24, 0x64	; 100
 4ea:	11 f0       	breq	.+4      	; 0x4f0 <__DATA_REGION_LENGTH__+0xf0>
 4ec:	89 36       	cpi	r24, 0x69	; 105
 4ee:	41 f5       	brne	.+80     	; 0x540 <__stack+0x41>
 4f0:	f8 01       	movw	r30, r16
 4f2:	37 fe       	sbrs	r3, 7
 4f4:	07 c0       	rjmp	.+14     	; 0x504 <__stack+0x5>
 4f6:	60 81       	ld	r22, Z
 4f8:	71 81       	ldd	r23, Z+1	; 0x01
 4fa:	82 81       	ldd	r24, Z+2	; 0x02
 4fc:	93 81       	ldd	r25, Z+3	; 0x03
 4fe:	0c 5f       	subi	r16, 0xFC	; 252
 500:	1f 4f       	sbci	r17, 0xFF	; 255
 502:	08 c0       	rjmp	.+16     	; 0x514 <__stack+0x15>
 504:	60 81       	ld	r22, Z
 506:	71 81       	ldd	r23, Z+1	; 0x01
 508:	07 2e       	mov	r0, r23
 50a:	00 0c       	add	r0, r0
 50c:	88 0b       	sbc	r24, r24
 50e:	99 0b       	sbc	r25, r25
 510:	0e 5f       	subi	r16, 0xFE	; 254
 512:	1f 4f       	sbci	r17, 0xFF	; 255
 514:	f3 2d       	mov	r31, r3
 516:	ff 76       	andi	r31, 0x6F	; 111
 518:	3f 2e       	mov	r3, r31
 51a:	97 ff       	sbrs	r25, 7
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__stack+0x31>
 51e:	90 95       	com	r25
 520:	80 95       	com	r24
 522:	70 95       	com	r23
 524:	61 95       	neg	r22
 526:	7f 4f       	sbci	r23, 0xFF	; 255
 528:	8f 4f       	sbci	r24, 0xFF	; 255
 52a:	9f 4f       	sbci	r25, 0xFF	; 255
 52c:	f0 68       	ori	r31, 0x80	; 128
 52e:	3f 2e       	mov	r3, r31
 530:	2a e0       	ldi	r18, 0x0A	; 10
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	a3 01       	movw	r20, r6
 536:	0e 94 c2 03 	call	0x784	; 0x784 <__ultoa_invert>
 53a:	88 2e       	mov	r8, r24
 53c:	86 18       	sub	r8, r6
 53e:	45 c0       	rjmp	.+138    	; 0x5ca <__stack+0xcb>
 540:	85 37       	cpi	r24, 0x75	; 117
 542:	31 f4       	brne	.+12     	; 0x550 <__stack+0x51>
 544:	23 2d       	mov	r18, r3
 546:	2f 7e       	andi	r18, 0xEF	; 239
 548:	b2 2e       	mov	r11, r18
 54a:	2a e0       	ldi	r18, 0x0A	; 10
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	25 c0       	rjmp	.+74     	; 0x59a <__stack+0x9b>
 550:	93 2d       	mov	r25, r3
 552:	99 7f       	andi	r25, 0xF9	; 249
 554:	b9 2e       	mov	r11, r25
 556:	8f 36       	cpi	r24, 0x6F	; 111
 558:	c1 f0       	breq	.+48     	; 0x58a <__stack+0x8b>
 55a:	18 f4       	brcc	.+6      	; 0x562 <__stack+0x63>
 55c:	88 35       	cpi	r24, 0x58	; 88
 55e:	79 f0       	breq	.+30     	; 0x57e <__stack+0x7f>
 560:	b5 c0       	rjmp	.+362    	; 0x6cc <__stack+0x1cd>
 562:	80 37       	cpi	r24, 0x70	; 112
 564:	19 f0       	breq	.+6      	; 0x56c <__stack+0x6d>
 566:	88 37       	cpi	r24, 0x78	; 120
 568:	21 f0       	breq	.+8      	; 0x572 <__stack+0x73>
 56a:	b0 c0       	rjmp	.+352    	; 0x6cc <__stack+0x1cd>
 56c:	e9 2f       	mov	r30, r25
 56e:	e0 61       	ori	r30, 0x10	; 16
 570:	be 2e       	mov	r11, r30
 572:	b4 fe       	sbrs	r11, 4
 574:	0d c0       	rjmp	.+26     	; 0x590 <__stack+0x91>
 576:	fb 2d       	mov	r31, r11
 578:	f4 60       	ori	r31, 0x04	; 4
 57a:	bf 2e       	mov	r11, r31
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__stack+0x91>
 57e:	34 fe       	sbrs	r3, 4
 580:	0a c0       	rjmp	.+20     	; 0x596 <__stack+0x97>
 582:	29 2f       	mov	r18, r25
 584:	26 60       	ori	r18, 0x06	; 6
 586:	b2 2e       	mov	r11, r18
 588:	06 c0       	rjmp	.+12     	; 0x596 <__stack+0x97>
 58a:	28 e0       	ldi	r18, 0x08	; 8
 58c:	30 e0       	ldi	r19, 0x00	; 0
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__stack+0x9b>
 590:	20 e1       	ldi	r18, 0x10	; 16
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	02 c0       	rjmp	.+4      	; 0x59a <__stack+0x9b>
 596:	20 e1       	ldi	r18, 0x10	; 16
 598:	32 e0       	ldi	r19, 0x02	; 2
 59a:	f8 01       	movw	r30, r16
 59c:	b7 fe       	sbrs	r11, 7
 59e:	07 c0       	rjmp	.+14     	; 0x5ae <__stack+0xaf>
 5a0:	60 81       	ld	r22, Z
 5a2:	71 81       	ldd	r23, Z+1	; 0x01
 5a4:	82 81       	ldd	r24, Z+2	; 0x02
 5a6:	93 81       	ldd	r25, Z+3	; 0x03
 5a8:	0c 5f       	subi	r16, 0xFC	; 252
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	06 c0       	rjmp	.+12     	; 0x5ba <__stack+0xbb>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	80 e0       	ldi	r24, 0x00	; 0
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 5f       	subi	r16, 0xFE	; 254
 5b8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ba:	a3 01       	movw	r20, r6
 5bc:	0e 94 c2 03 	call	0x784	; 0x784 <__ultoa_invert>
 5c0:	88 2e       	mov	r8, r24
 5c2:	86 18       	sub	r8, r6
 5c4:	fb 2d       	mov	r31, r11
 5c6:	ff 77       	andi	r31, 0x7F	; 127
 5c8:	3f 2e       	mov	r3, r31
 5ca:	36 fe       	sbrs	r3, 6
 5cc:	0d c0       	rjmp	.+26     	; 0x5e8 <__stack+0xe9>
 5ce:	23 2d       	mov	r18, r3
 5d0:	2e 7f       	andi	r18, 0xFE	; 254
 5d2:	a2 2e       	mov	r10, r18
 5d4:	89 14       	cp	r8, r9
 5d6:	58 f4       	brcc	.+22     	; 0x5ee <__stack+0xef>
 5d8:	34 fe       	sbrs	r3, 4
 5da:	0b c0       	rjmp	.+22     	; 0x5f2 <__stack+0xf3>
 5dc:	32 fc       	sbrc	r3, 2
 5de:	09 c0       	rjmp	.+18     	; 0x5f2 <__stack+0xf3>
 5e0:	83 2d       	mov	r24, r3
 5e2:	8e 7e       	andi	r24, 0xEE	; 238
 5e4:	a8 2e       	mov	r10, r24
 5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <__stack+0xf3>
 5e8:	b8 2c       	mov	r11, r8
 5ea:	a3 2c       	mov	r10, r3
 5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <__stack+0xf5>
 5ee:	b8 2c       	mov	r11, r8
 5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <__stack+0xf5>
 5f2:	b9 2c       	mov	r11, r9
 5f4:	a4 fe       	sbrs	r10, 4
 5f6:	0f c0       	rjmp	.+30     	; 0x616 <__stack+0x117>
 5f8:	fe 01       	movw	r30, r28
 5fa:	e8 0d       	add	r30, r8
 5fc:	f1 1d       	adc	r31, r1
 5fe:	80 81       	ld	r24, Z
 600:	80 33       	cpi	r24, 0x30	; 48
 602:	21 f4       	brne	.+8      	; 0x60c <__stack+0x10d>
 604:	9a 2d       	mov	r25, r10
 606:	99 7e       	andi	r25, 0xE9	; 233
 608:	a9 2e       	mov	r10, r25
 60a:	09 c0       	rjmp	.+18     	; 0x61e <__stack+0x11f>
 60c:	a2 fe       	sbrs	r10, 2
 60e:	06 c0       	rjmp	.+12     	; 0x61c <__stack+0x11d>
 610:	b3 94       	inc	r11
 612:	b3 94       	inc	r11
 614:	04 c0       	rjmp	.+8      	; 0x61e <__stack+0x11f>
 616:	8a 2d       	mov	r24, r10
 618:	86 78       	andi	r24, 0x86	; 134
 61a:	09 f0       	breq	.+2      	; 0x61e <__stack+0x11f>
 61c:	b3 94       	inc	r11
 61e:	a3 fc       	sbrc	r10, 3
 620:	11 c0       	rjmp	.+34     	; 0x644 <__stack+0x145>
 622:	a0 fe       	sbrs	r10, 0
 624:	06 c0       	rjmp	.+12     	; 0x632 <__stack+0x133>
 626:	b2 14       	cp	r11, r2
 628:	88 f4       	brcc	.+34     	; 0x64c <__stack+0x14d>
 62a:	28 0c       	add	r2, r8
 62c:	92 2c       	mov	r9, r2
 62e:	9b 18       	sub	r9, r11
 630:	0e c0       	rjmp	.+28     	; 0x64e <__stack+0x14f>
 632:	b2 14       	cp	r11, r2
 634:	60 f4       	brcc	.+24     	; 0x64e <__stack+0x14f>
 636:	b6 01       	movw	r22, r12
 638:	80 e2       	ldi	r24, 0x20	; 32
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 640:	b3 94       	inc	r11
 642:	f7 cf       	rjmp	.-18     	; 0x632 <__stack+0x133>
 644:	b2 14       	cp	r11, r2
 646:	18 f4       	brcc	.+6      	; 0x64e <__stack+0x14f>
 648:	2b 18       	sub	r2, r11
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__stack+0x151>
 64c:	98 2c       	mov	r9, r8
 64e:	21 2c       	mov	r2, r1
 650:	a4 fe       	sbrs	r10, 4
 652:	10 c0       	rjmp	.+32     	; 0x674 <__stack+0x175>
 654:	b6 01       	movw	r22, r12
 656:	80 e3       	ldi	r24, 0x30	; 48
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 65e:	a2 fe       	sbrs	r10, 2
 660:	17 c0       	rjmp	.+46     	; 0x690 <__stack+0x191>
 662:	a1 fc       	sbrc	r10, 1
 664:	03 c0       	rjmp	.+6      	; 0x66c <__stack+0x16d>
 666:	88 e7       	ldi	r24, 0x78	; 120
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__stack+0x171>
 66c:	88 e5       	ldi	r24, 0x58	; 88
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	b6 01       	movw	r22, r12
 672:	0c c0       	rjmp	.+24     	; 0x68c <__stack+0x18d>
 674:	8a 2d       	mov	r24, r10
 676:	86 78       	andi	r24, 0x86	; 134
 678:	59 f0       	breq	.+22     	; 0x690 <__stack+0x191>
 67a:	a1 fe       	sbrs	r10, 1
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__stack+0x183>
 67e:	8b e2       	ldi	r24, 0x2B	; 43
 680:	01 c0       	rjmp	.+2      	; 0x684 <__stack+0x185>
 682:	80 e2       	ldi	r24, 0x20	; 32
 684:	a7 fc       	sbrc	r10, 7
 686:	8d e2       	ldi	r24, 0x2D	; 45
 688:	b6 01       	movw	r22, r12
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 690:	89 14       	cp	r8, r9
 692:	38 f4       	brcc	.+14     	; 0x6a2 <__stack+0x1a3>
 694:	b6 01       	movw	r22, r12
 696:	80 e3       	ldi	r24, 0x30	; 48
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 69e:	9a 94       	dec	r9
 6a0:	f7 cf       	rjmp	.-18     	; 0x690 <__stack+0x191>
 6a2:	8a 94       	dec	r8
 6a4:	f3 01       	movw	r30, r6
 6a6:	e8 0d       	add	r30, r8
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	b6 01       	movw	r22, r12
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 6b4:	81 10       	cpse	r8, r1
 6b6:	f5 cf       	rjmp	.-22     	; 0x6a2 <__stack+0x1a3>
 6b8:	22 20       	and	r2, r2
 6ba:	09 f4       	brne	.+2      	; 0x6be <__stack+0x1bf>
 6bc:	42 ce       	rjmp	.-892    	; 0x342 <vfprintf+0x24>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 86 03 	call	0x70c	; 0x70c <fputc>
 6c8:	2a 94       	dec	r2
 6ca:	f6 cf       	rjmp	.-20     	; 0x6b8 <__stack+0x1b9>
 6cc:	f6 01       	movw	r30, r12
 6ce:	86 81       	ldd	r24, Z+6	; 0x06
 6d0:	97 81       	ldd	r25, Z+7	; 0x07
 6d2:	02 c0       	rjmp	.+4      	; 0x6d8 <__stack+0x1d9>
 6d4:	8f ef       	ldi	r24, 0xFF	; 255
 6d6:	9f ef       	ldi	r25, 0xFF	; 255
 6d8:	2b 96       	adiw	r28, 0x0b	; 11
 6da:	e2 e1       	ldi	r30, 0x12	; 18
 6dc:	0c 94 3c 04 	jmp	0x878	; 0x878 <__epilogue_restores__>

000006e0 <strnlen_P>:
 6e0:	fc 01       	movw	r30, r24
 6e2:	05 90       	lpm	r0, Z+
 6e4:	61 50       	subi	r22, 0x01	; 1
 6e6:	70 40       	sbci	r23, 0x00	; 0
 6e8:	01 10       	cpse	r0, r1
 6ea:	d8 f7       	brcc	.-10     	; 0x6e2 <strnlen_P+0x2>
 6ec:	80 95       	com	r24
 6ee:	90 95       	com	r25
 6f0:	8e 0f       	add	r24, r30
 6f2:	9f 1f       	adc	r25, r31
 6f4:	08 95       	ret

000006f6 <strnlen>:
 6f6:	fc 01       	movw	r30, r24
 6f8:	61 50       	subi	r22, 0x01	; 1
 6fa:	70 40       	sbci	r23, 0x00	; 0
 6fc:	01 90       	ld	r0, Z+
 6fe:	01 10       	cpse	r0, r1
 700:	d8 f7       	brcc	.-10     	; 0x6f8 <strnlen+0x2>
 702:	80 95       	com	r24
 704:	90 95       	com	r25
 706:	8e 0f       	add	r24, r30
 708:	9f 1f       	adc	r25, r31
 70a:	08 95       	ret

0000070c <fputc>:
 70c:	0f 93       	push	r16
 70e:	1f 93       	push	r17
 710:	cf 93       	push	r28
 712:	df 93       	push	r29
 714:	fb 01       	movw	r30, r22
 716:	23 81       	ldd	r18, Z+3	; 0x03
 718:	21 fd       	sbrc	r18, 1
 71a:	03 c0       	rjmp	.+6      	; 0x722 <fputc+0x16>
 71c:	8f ef       	ldi	r24, 0xFF	; 255
 71e:	9f ef       	ldi	r25, 0xFF	; 255
 720:	2c c0       	rjmp	.+88     	; 0x77a <fputc+0x6e>
 722:	22 ff       	sbrs	r18, 2
 724:	16 c0       	rjmp	.+44     	; 0x752 <fputc+0x46>
 726:	46 81       	ldd	r20, Z+6	; 0x06
 728:	57 81       	ldd	r21, Z+7	; 0x07
 72a:	24 81       	ldd	r18, Z+4	; 0x04
 72c:	35 81       	ldd	r19, Z+5	; 0x05
 72e:	42 17       	cp	r20, r18
 730:	53 07       	cpc	r21, r19
 732:	44 f4       	brge	.+16     	; 0x744 <fputc+0x38>
 734:	a0 81       	ld	r26, Z
 736:	b1 81       	ldd	r27, Z+1	; 0x01
 738:	9d 01       	movw	r18, r26
 73a:	2f 5f       	subi	r18, 0xFF	; 255
 73c:	3f 4f       	sbci	r19, 0xFF	; 255
 73e:	31 83       	std	Z+1, r19	; 0x01
 740:	20 83       	st	Z, r18
 742:	8c 93       	st	X, r24
 744:	26 81       	ldd	r18, Z+6	; 0x06
 746:	37 81       	ldd	r19, Z+7	; 0x07
 748:	2f 5f       	subi	r18, 0xFF	; 255
 74a:	3f 4f       	sbci	r19, 0xFF	; 255
 74c:	37 83       	std	Z+7, r19	; 0x07
 74e:	26 83       	std	Z+6, r18	; 0x06
 750:	14 c0       	rjmp	.+40     	; 0x77a <fputc+0x6e>
 752:	8b 01       	movw	r16, r22
 754:	ec 01       	movw	r28, r24
 756:	fb 01       	movw	r30, r22
 758:	00 84       	ldd	r0, Z+8	; 0x08
 75a:	f1 85       	ldd	r31, Z+9	; 0x09
 75c:	e0 2d       	mov	r30, r0
 75e:	09 95       	icall
 760:	89 2b       	or	r24, r25
 762:	e1 f6       	brne	.-72     	; 0x71c <fputc+0x10>
 764:	d8 01       	movw	r26, r16
 766:	16 96       	adiw	r26, 0x06	; 6
 768:	8d 91       	ld	r24, X+
 76a:	9c 91       	ld	r25, X
 76c:	17 97       	sbiw	r26, 0x07	; 7
 76e:	01 96       	adiw	r24, 0x01	; 1
 770:	17 96       	adiw	r26, 0x07	; 7
 772:	9c 93       	st	X, r25
 774:	8e 93       	st	-X, r24
 776:	16 97       	sbiw	r26, 0x06	; 6
 778:	ce 01       	movw	r24, r28
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	1f 91       	pop	r17
 780:	0f 91       	pop	r16
 782:	08 95       	ret

00000784 <__ultoa_invert>:
 784:	fa 01       	movw	r30, r20
 786:	aa 27       	eor	r26, r26
 788:	28 30       	cpi	r18, 0x08	; 8
 78a:	51 f1       	breq	.+84     	; 0x7e0 <__ultoa_invert+0x5c>
 78c:	20 31       	cpi	r18, 0x10	; 16
 78e:	81 f1       	breq	.+96     	; 0x7f0 <__ultoa_invert+0x6c>
 790:	e8 94       	clt
 792:	6f 93       	push	r22
 794:	6e 7f       	andi	r22, 0xFE	; 254
 796:	6e 5f       	subi	r22, 0xFE	; 254
 798:	7f 4f       	sbci	r23, 0xFF	; 255
 79a:	8f 4f       	sbci	r24, 0xFF	; 255
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	af 4f       	sbci	r26, 0xFF	; 255
 7a0:	b1 e0       	ldi	r27, 0x01	; 1
 7a2:	3e d0       	rcall	.+124    	; 0x820 <__ultoa_invert+0x9c>
 7a4:	b4 e0       	ldi	r27, 0x04	; 4
 7a6:	3c d0       	rcall	.+120    	; 0x820 <__ultoa_invert+0x9c>
 7a8:	67 0f       	add	r22, r23
 7aa:	78 1f       	adc	r23, r24
 7ac:	89 1f       	adc	r24, r25
 7ae:	9a 1f       	adc	r25, r26
 7b0:	a1 1d       	adc	r26, r1
 7b2:	68 0f       	add	r22, r24
 7b4:	79 1f       	adc	r23, r25
 7b6:	8a 1f       	adc	r24, r26
 7b8:	91 1d       	adc	r25, r1
 7ba:	a1 1d       	adc	r26, r1
 7bc:	6a 0f       	add	r22, r26
 7be:	71 1d       	adc	r23, r1
 7c0:	81 1d       	adc	r24, r1
 7c2:	91 1d       	adc	r25, r1
 7c4:	a1 1d       	adc	r26, r1
 7c6:	20 d0       	rcall	.+64     	; 0x808 <__ultoa_invert+0x84>
 7c8:	09 f4       	brne	.+2      	; 0x7cc <__ultoa_invert+0x48>
 7ca:	68 94       	set
 7cc:	3f 91       	pop	r19
 7ce:	2a e0       	ldi	r18, 0x0A	; 10
 7d0:	26 9f       	mul	r18, r22
 7d2:	11 24       	eor	r1, r1
 7d4:	30 19       	sub	r19, r0
 7d6:	30 5d       	subi	r19, 0xD0	; 208
 7d8:	31 93       	st	Z+, r19
 7da:	de f6       	brtc	.-74     	; 0x792 <__ultoa_invert+0xe>
 7dc:	cf 01       	movw	r24, r30
 7de:	08 95       	ret
 7e0:	46 2f       	mov	r20, r22
 7e2:	47 70       	andi	r20, 0x07	; 7
 7e4:	40 5d       	subi	r20, 0xD0	; 208
 7e6:	41 93       	st	Z+, r20
 7e8:	b3 e0       	ldi	r27, 0x03	; 3
 7ea:	0f d0       	rcall	.+30     	; 0x80a <__ultoa_invert+0x86>
 7ec:	c9 f7       	brne	.-14     	; 0x7e0 <__ultoa_invert+0x5c>
 7ee:	f6 cf       	rjmp	.-20     	; 0x7dc <__ultoa_invert+0x58>
 7f0:	46 2f       	mov	r20, r22
 7f2:	4f 70       	andi	r20, 0x0F	; 15
 7f4:	40 5d       	subi	r20, 0xD0	; 208
 7f6:	4a 33       	cpi	r20, 0x3A	; 58
 7f8:	18 f0       	brcs	.+6      	; 0x800 <__ultoa_invert+0x7c>
 7fa:	49 5d       	subi	r20, 0xD9	; 217
 7fc:	31 fd       	sbrc	r19, 1
 7fe:	40 52       	subi	r20, 0x20	; 32
 800:	41 93       	st	Z+, r20
 802:	02 d0       	rcall	.+4      	; 0x808 <__ultoa_invert+0x84>
 804:	a9 f7       	brne	.-22     	; 0x7f0 <__ultoa_invert+0x6c>
 806:	ea cf       	rjmp	.-44     	; 0x7dc <__ultoa_invert+0x58>
 808:	b4 e0       	ldi	r27, 0x04	; 4
 80a:	a6 95       	lsr	r26
 80c:	97 95       	ror	r25
 80e:	87 95       	ror	r24
 810:	77 95       	ror	r23
 812:	67 95       	ror	r22
 814:	ba 95       	dec	r27
 816:	c9 f7       	brne	.-14     	; 0x80a <__ultoa_invert+0x86>
 818:	00 97       	sbiw	r24, 0x00	; 0
 81a:	61 05       	cpc	r22, r1
 81c:	71 05       	cpc	r23, r1
 81e:	08 95       	ret
 820:	9b 01       	movw	r18, r22
 822:	ac 01       	movw	r20, r24
 824:	0a 2e       	mov	r0, r26
 826:	06 94       	lsr	r0
 828:	57 95       	ror	r21
 82a:	47 95       	ror	r20
 82c:	37 95       	ror	r19
 82e:	27 95       	ror	r18
 830:	ba 95       	dec	r27
 832:	c9 f7       	brne	.-14     	; 0x826 <__ultoa_invert+0xa2>
 834:	62 0f       	add	r22, r18
 836:	73 1f       	adc	r23, r19
 838:	84 1f       	adc	r24, r20
 83a:	95 1f       	adc	r25, r21
 83c:	a0 1d       	adc	r26, r0
 83e:	08 95       	ret

00000840 <__prologue_saves__>:
 840:	2f 92       	push	r2
 842:	3f 92       	push	r3
 844:	4f 92       	push	r4
 846:	5f 92       	push	r5
 848:	6f 92       	push	r6
 84a:	7f 92       	push	r7
 84c:	8f 92       	push	r8
 84e:	9f 92       	push	r9
 850:	af 92       	push	r10
 852:	bf 92       	push	r11
 854:	cf 92       	push	r12
 856:	df 92       	push	r13
 858:	ef 92       	push	r14
 85a:	ff 92       	push	r15
 85c:	0f 93       	push	r16
 85e:	1f 93       	push	r17
 860:	cf 93       	push	r28
 862:	df 93       	push	r29
 864:	cd b7       	in	r28, 0x3d	; 61
 866:	de b7       	in	r29, 0x3e	; 62
 868:	ca 1b       	sub	r28, r26
 86a:	db 0b       	sbc	r29, r27
 86c:	0f b6       	in	r0, 0x3f	; 63
 86e:	f8 94       	cli
 870:	de bf       	out	0x3e, r29	; 62
 872:	0f be       	out	0x3f, r0	; 63
 874:	cd bf       	out	0x3d, r28	; 61
 876:	09 94       	ijmp

00000878 <__epilogue_restores__>:
 878:	2a 88       	ldd	r2, Y+18	; 0x12
 87a:	39 88       	ldd	r3, Y+17	; 0x11
 87c:	48 88       	ldd	r4, Y+16	; 0x10
 87e:	5f 84       	ldd	r5, Y+15	; 0x0f
 880:	6e 84       	ldd	r6, Y+14	; 0x0e
 882:	7d 84       	ldd	r7, Y+13	; 0x0d
 884:	8c 84       	ldd	r8, Y+12	; 0x0c
 886:	9b 84       	ldd	r9, Y+11	; 0x0b
 888:	aa 84       	ldd	r10, Y+10	; 0x0a
 88a:	b9 84       	ldd	r11, Y+9	; 0x09
 88c:	c8 84       	ldd	r12, Y+8	; 0x08
 88e:	df 80       	ldd	r13, Y+7	; 0x07
 890:	ee 80       	ldd	r14, Y+6	; 0x06
 892:	fd 80       	ldd	r15, Y+5	; 0x05
 894:	0c 81       	ldd	r16, Y+4	; 0x04
 896:	1b 81       	ldd	r17, Y+3	; 0x03
 898:	aa 81       	ldd	r26, Y+2	; 0x02
 89a:	b9 81       	ldd	r27, Y+1	; 0x01
 89c:	ce 0f       	add	r28, r30
 89e:	d1 1d       	adc	r29, r1
 8a0:	0f b6       	in	r0, 0x3f	; 63
 8a2:	f8 94       	cli
 8a4:	de bf       	out	0x3e, r29	; 62
 8a6:	0f be       	out	0x3f, r0	; 63
 8a8:	cd bf       	out	0x3d, r28	; 61
 8aa:	ed 01       	movw	r28, r26
 8ac:	08 95       	ret

000008ae <_exit>:
 8ae:	f8 94       	cli

000008b0 <__stop_program>:
 8b0:	ff cf       	rjmp	.-2      	; 0x8b0 <__stop_program>
