
byggernV5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000102  00800100  00001334  000013c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001334  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800202  00800202  000014ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001528  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  00001564  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028df  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ea7  00000000  00000000  00004093  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000112d  00000000  00000000  00004f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005c0  00000000  00000000  00006068  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008a5  00000000  00000000  00006628  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001321  00000000  00000000  00006ecd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  000081ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <malloc+0x52>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 e3       	ldi	r30, 0x34	; 52
     37c:	f3 e1       	ldi	r31, 0x13	; 19
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a2 30       	cpi	r26, 0x02	; 2
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a2 e0       	ldi	r26, 0x02	; 2
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ac 30       	cpi	r26, 0x0C	; 12
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 cf 04 	call	0x99e	; 0x99e <main>
     39e:	0c 94 98 09 	jmp	0x1330	; 0x1330 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_cntrl_read>:
	SPI_SS_low();
	SPI_MasterTransmit(0xA0);
	int8_t result = SPI_MasterTransmit(0x0); //Output
	SPI_SS_high();
	return result;
}
     3a6:	cf 93       	push	r28
     3a8:	c8 2f       	mov	r28, r24
     3aa:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_SS_low>
     3ae:	83 e0       	ldi	r24, 0x03	; 3
     3b0:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3b4:	8c 2f       	mov	r24, r28
     3b6:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3c0:	c8 2f       	mov	r28, r24
     3c2:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
     3c6:	8c 2f       	mov	r24, r28
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <can_cntrl_write>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	d8 2f       	mov	r29, r24
     3d4:	c6 2f       	mov	r28, r22
     3d6:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_SS_low>
     3da:	82 e0       	ldi	r24, 0x02	; 2
     3dc:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3e0:	8d 2f       	mov	r24, r29
     3e2:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3e6:	8c 2f       	mov	r24, r28
     3e8:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     3ec:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <can_cntrl_reset>:
     3f6:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_SS_low>
     3fa:	80 ec       	ldi	r24, 0xC0	; 192
     3fc:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     400:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
     404:	08 95       	ret

00000406 <can_cntrl_RTS>:
     406:	cf 93       	push	r28
     408:	c8 2f       	mov	r28, r24
     40a:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_SS_low>
     40e:	8c 2f       	mov	r24, r28
     410:	81 68       	ori	r24, 0x81	; 129
     412:	0e 94 44 05 	call	0xa88	; 0xa88 <SPI_MasterTransmit>
     416:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <can_cntrl_config>:
}
*/


void can_cntrl_config(void){
	can_cntrl_reset();
     41e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <can_cntrl_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     422:	89 ef       	ldi	r24, 0xF9	; 249
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <can_cntrl_config+0x8>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <can_cntrl_config+0xe>
     42c:	00 00       	nop
	_delay_ms(1); //delay viktig 
	SPI_SS_low();
     42e:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_SS_low>
	
	uint8_t cnf1_value = (1 << 6) | BRP;
	uint8_t cnf2_value = (1 << 7) | (1 << 3) | 1;
	uint8_t cnf3_value = 2;
	
	can_cntrl_write(CNF1, cnf1_value);
     432:	60 e4       	ldi	r22, 0x40	; 64
     434:	8a e2       	ldi	r24, 0x2A	; 42
     436:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(CNF2, cnf2_value);
     43a:	69 e8       	ldi	r22, 0x89	; 137
     43c:	89 e2       	ldi	r24, 0x29	; 41
     43e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(CNF3, cnf3_value);
     442:	62 e0       	ldi	r22, 0x02	; 2
     444:	88 e2       	ldi	r24, 0x28	; 40
     446:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	
	//Set operation mode
	int8_t canctrl_value = can_cntrl_read(CANCTRL);
     44a:	8f e0       	ldi	r24, 0x0F	; 15
     44c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>
	canctrl_value &= ~(0xE0);
     450:	8f 71       	andi	r24, 0x1F	; 31
	canctrl_value |= (0x02 << 5);
     452:	68 2f       	mov	r22, r24
     454:	60 64       	ori	r22, 0x40	; 64
	
	can_cntrl_write(CANCTRL, canctrl_value);
     456:	8f e0       	ldi	r24, 0x0F	; 15
     458:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(RXF0SIDH, 0x00);
	can_cntrl_write(RXF0SIDL, 0x00);
	can_cntrl_write(RXF1SIDH, 0x00);
	can_cntrl_write(RXF1SIDL, 0x00);*/
	
	SPI_SS_high();
     45c:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
     460:	08 95       	ret

00000462 <can_message_send>:
}



void can_message_send (can_message * msg ) {
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	cf 93       	push	r28
     468:	df 93       	push	r29
     46a:	8c 01       	movw	r16, r24
	can_cntrl_write(TXB0SIDH, msg->id >> 3); 
     46c:	fc 01       	movw	r30, r24
     46e:	60 81       	ld	r22, Z
     470:	71 81       	ldd	r23, Z+1	; 0x01
     472:	76 95       	lsr	r23
     474:	67 95       	ror	r22
     476:	76 95       	lsr	r23
     478:	67 95       	ror	r22
     47a:	76 95       	lsr	r23
     47c:	67 95       	ror	r22
     47e:	81 e3       	ldi	r24, 0x31	; 49
     480:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(TXB0SIDL, (msg->id & 0x07) << 5); 
     484:	f8 01       	movw	r30, r16
     486:	60 81       	ld	r22, Z
     488:	62 95       	swap	r22
     48a:	66 0f       	add	r22, r22
     48c:	60 7e       	andi	r22, 0xE0	; 224
     48e:	82 e3       	ldi	r24, 0x32	; 50
     490:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(TXB0DLC, msg->data_length);
     494:	f8 01       	movw	r30, r16
     496:	62 81       	ldd	r22, Z+2	; 0x02
     498:	85 e3       	ldi	r24, 0x35	; 53
     49a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	
	for (int i = 0; i < msg->data_length; i++){
     49e:	c0 e0       	ldi	r28, 0x00	; 0
     4a0:	d0 e0       	ldi	r29, 0x00	; 0
     4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <can_message_send+0x54>
		can_cntrl_write(TXB0D0+i, msg->data[i]);
     4a4:	f8 01       	movw	r30, r16
     4a6:	ec 0f       	add	r30, r28
     4a8:	fd 1f       	adc	r31, r29
     4aa:	63 81       	ldd	r22, Z+3	; 0x03
     4ac:	8c 2f       	mov	r24, r28
     4ae:	8a 5c       	subi	r24, 0xCA	; 202
     4b0:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
void can_message_send (can_message * msg ) {
	can_cntrl_write(TXB0SIDH, msg->id >> 3); 
	can_cntrl_write(TXB0SIDL, (msg->id & 0x07) << 5); 
	can_cntrl_write(TXB0DLC, msg->data_length);
	
	for (int i = 0; i < msg->data_length; i++){
     4b4:	21 96       	adiw	r28, 0x01	; 1
     4b6:	f8 01       	movw	r30, r16
     4b8:	82 81       	ldd	r24, Z+2	; 0x02
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	c8 17       	cp	r28, r24
     4be:	d9 07       	cpc	r29, r25
     4c0:	8c f3       	brlt	.-30     	; 0x4a4 <can_message_send+0x42>
		can_cntrl_write(TXB0D0+i, msg->data[i]);
	}
	can_cntrl_RTS(0x01);
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	0e 94 03 02 	call	0x406	; 0x406 <can_cntrl_RTS>
}
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	08 95       	ret

000004d2 <can_message_read>:


can_message can_message_read (void) {
     4d2:	ff 92       	push	r15
     4d4:	0f 93       	push	r16
     4d6:	1f 93       	push	r17
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	8c 01       	movw	r16, r24
	can_message msg; 
    uint8_t high = can_cntrl_read(RXB0SIDH);
     4de:	81 e6       	ldi	r24, 0x61	; 97
     4e0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>
     4e4:	ec 01       	movw	r28, r24
    uint8_t low = can_cntrl_read(RXB0SIDL);
     4e6:	82 e6       	ldi	r24, 0x62	; 98
     4e8:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>

   
    msg.id = (high << 3) | (low >> 5);
     4ec:	dd 27       	eor	r29, r29
     4ee:	cc 0f       	add	r28, r28
     4f0:	dd 1f       	adc	r29, r29
     4f2:	cc 0f       	add	r28, r28
     4f4:	dd 1f       	adc	r29, r29
     4f6:	cc 0f       	add	r28, r28
     4f8:	dd 1f       	adc	r29, r29
     4fa:	82 95       	swap	r24
     4fc:	86 95       	lsr	r24
     4fe:	87 70       	andi	r24, 0x07	; 7
     500:	c8 2b       	or	r28, r24
     502:	f8 01       	movw	r30, r16
     504:	d1 83       	std	Z+1, r29	; 0x01
     506:	c0 83       	st	Z, r28
	msg.data_length = can_cntrl_read(RXB0DLC);
     508:	85 e6       	ldi	r24, 0x65	; 101
     50a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>
     50e:	f8 2e       	mov	r15, r24
     510:	f8 01       	movw	r30, r16
     512:	82 83       	std	Z+2, r24	; 0x02
	
	for (int i = 0; i < msg.data_length; i++){
     514:	c0 e0       	ldi	r28, 0x00	; 0
     516:	d0 e0       	ldi	r29, 0x00	; 0
     518:	09 c0       	rjmp	.+18     	; 0x52c <__stack+0x2d>
		msg.data[i] = can_cntrl_read(RXB0D0 + i);
     51a:	8c 2f       	mov	r24, r28
     51c:	8a 59       	subi	r24, 0x9A	; 154
     51e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>
     522:	f8 01       	movw	r30, r16
     524:	ec 0f       	add	r30, r28
     526:	fd 1f       	adc	r31, r29
     528:	83 83       	std	Z+3, r24	; 0x03

   
    msg.id = (high << 3) | (low >> 5);
	msg.data_length = can_cntrl_read(RXB0DLC);
	
	for (int i = 0; i < msg.data_length; i++){
     52a:	21 96       	adiw	r28, 0x01	; 1
     52c:	8f 2d       	mov	r24, r15
     52e:	90 e0       	ldi	r25, 0x00	; 0
     530:	c8 17       	cp	r28, r24
     532:	d9 07       	cpc	r29, r25
     534:	94 f3       	brlt	.-28     	; 0x51a <__stack+0x1b>
		msg.data[i] = can_cntrl_read(RXB0D0 + i);
	}
	return msg;
     536:	c8 01       	movw	r24, r16
     538:	df 91       	pop	r29
     53a:	cf 91       	pop	r28
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	ff 90       	pop	r15
     542:	08 95       	ret

00000544 <io_init>:
	}
}


void OLED_home(char* menu_list[], int16_t length){
	OLED_print_menu(menu_list, length);
     544:	fc 01       	movw	r30, r24
     546:	11 82       	std	Z+1, r1	; 0x01
     548:	10 82       	st	Z, r1
     54a:	13 82       	std	Z+3, r1	; 0x03
     54c:	12 82       	std	Z+2, r1	; 0x02
     54e:	15 82       	std	Z+5, r1	; 0x05
     550:	14 82       	std	Z+4, r1	; 0x04
     552:	17 82       	std	Z+7, r1	; 0x07
     554:	16 82       	std	Z+6, r1	; 0x06
     556:	84 e0       	ldi	r24, 0x04	; 4
     558:	80 87       	std	Z+8, r24	; 0x08
     55a:	11 86       	std	Z+9, r1	; 0x09
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	82 87       	std	Z+10, r24	; 0x0a
     560:	13 86       	std	Z+11, r1	; 0x0b
     562:	15 86       	std	Z+13, r1	; 0x0d
     564:	14 86       	std	Z+12, r1	; 0x0c
     566:	16 86       	std	Z+14, r1	; 0x0e
     568:	08 95       	ret

0000056a <oled_init>:
     56a:	40 e0       	ldi	r20, 0x00	; 0
     56c:	50 e1       	ldi	r21, 0x10	; 16
     56e:	60 e0       	ldi	r22, 0x00	; 0
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	8e ea       	ldi	r24, 0xAE	; 174
     574:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     578:	40 e0       	ldi	r20, 0x00	; 0
     57a:	50 e1       	ldi	r21, 0x10	; 16
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	81 ea       	ldi	r24, 0xA1	; 161
     582:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     586:	40 e0       	ldi	r20, 0x00	; 0
     588:	50 e1       	ldi	r21, 0x10	; 16
     58a:	60 e0       	ldi	r22, 0x00	; 0
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	8a ed       	ldi	r24, 0xDA	; 218
     590:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     594:	40 e0       	ldi	r20, 0x00	; 0
     596:	50 e1       	ldi	r21, 0x10	; 16
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	82 e1       	ldi	r24, 0x12	; 18
     59e:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5a2:	40 e0       	ldi	r20, 0x00	; 0
     5a4:	50 e1       	ldi	r21, 0x10	; 16
     5a6:	60 e0       	ldi	r22, 0x00	; 0
     5a8:	70 e0       	ldi	r23, 0x00	; 0
     5aa:	88 ec       	ldi	r24, 0xC8	; 200
     5ac:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	50 e1       	ldi	r21, 0x10	; 16
     5b4:	60 e0       	ldi	r22, 0x00	; 0
     5b6:	70 e0       	ldi	r23, 0x00	; 0
     5b8:	88 ea       	ldi	r24, 0xA8	; 168
     5ba:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5be:	40 e0       	ldi	r20, 0x00	; 0
     5c0:	50 e1       	ldi	r21, 0x10	; 16
     5c2:	60 e0       	ldi	r22, 0x00	; 0
     5c4:	70 e0       	ldi	r23, 0x00	; 0
     5c6:	8f e3       	ldi	r24, 0x3F	; 63
     5c8:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e1       	ldi	r21, 0x10	; 16
     5d0:	60 e0       	ldi	r22, 0x00	; 0
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	85 ed       	ldi	r24, 0xD5	; 213
     5d6:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	50 e1       	ldi	r21, 0x10	; 16
     5de:	60 e0       	ldi	r22, 0x00	; 0
     5e0:	70 e0       	ldi	r23, 0x00	; 0
     5e2:	80 e8       	ldi	r24, 0x80	; 128
     5e4:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5e8:	40 e0       	ldi	r20, 0x00	; 0
     5ea:	50 e1       	ldi	r21, 0x10	; 16
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	70 e0       	ldi	r23, 0x00	; 0
     5f0:	81 e8       	ldi	r24, 0x81	; 129
     5f2:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	50 e1       	ldi	r21, 0x10	; 16
     5fa:	60 e0       	ldi	r22, 0x00	; 0
     5fc:	70 e0       	ldi	r23, 0x00	; 0
     5fe:	80 e5       	ldi	r24, 0x50	; 80
     600:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     604:	40 e0       	ldi	r20, 0x00	; 0
     606:	50 e1       	ldi	r21, 0x10	; 16
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	89 ed       	ldi	r24, 0xD9	; 217
     60e:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     612:	40 e0       	ldi	r20, 0x00	; 0
     614:	50 e1       	ldi	r21, 0x10	; 16
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	81 e2       	ldi	r24, 0x21	; 33
     61c:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	50 e1       	ldi	r21, 0x10	; 16
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	70 e0       	ldi	r23, 0x00	; 0
     628:	80 e2       	ldi	r24, 0x20	; 32
     62a:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     62e:	40 e0       	ldi	r20, 0x00	; 0
     630:	50 e1       	ldi	r21, 0x10	; 16
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	70 e0       	ldi	r23, 0x00	; 0
     636:	82 e0       	ldi	r24, 0x02	; 2
     638:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     63c:	40 e0       	ldi	r20, 0x00	; 0
     63e:	50 e1       	ldi	r21, 0x10	; 16
     640:	60 e0       	ldi	r22, 0x00	; 0
     642:	70 e0       	ldi	r23, 0x00	; 0
     644:	8b ed       	ldi	r24, 0xDB	; 219
     646:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	50 e1       	ldi	r21, 0x10	; 16
     64e:	60 e0       	ldi	r22, 0x00	; 0
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	80 e3       	ldi	r24, 0x30	; 48
     654:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     658:	40 e0       	ldi	r20, 0x00	; 0
     65a:	50 e1       	ldi	r21, 0x10	; 16
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	8d ea       	ldi	r24, 0xAD	; 173
     662:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     666:	40 e0       	ldi	r20, 0x00	; 0
     668:	50 e1       	ldi	r21, 0x10	; 16
     66a:	60 e0       	ldi	r22, 0x00	; 0
     66c:	70 e0       	ldi	r23, 0x00	; 0
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     674:	40 e0       	ldi	r20, 0x00	; 0
     676:	50 e1       	ldi	r21, 0x10	; 16
     678:	60 e0       	ldi	r22, 0x00	; 0
     67a:	70 e0       	ldi	r23, 0x00	; 0
     67c:	84 ea       	ldi	r24, 0xA4	; 164
     67e:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     682:	40 e0       	ldi	r20, 0x00	; 0
     684:	50 e1       	ldi	r21, 0x10	; 16
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	86 ea       	ldi	r24, 0xA6	; 166
     68c:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	50 e1       	ldi	r21, 0x10	; 16
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8f ea       	ldi	r24, 0xAF	; 175
     69a:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     69e:	08 95       	ret

000006a0 <OLED_goto_row>:
     6a0:	40 e0       	ldi	r20, 0x00	; 0
     6a2:	50 e1       	ldi	r21, 0x10	; 16
     6a4:	60 e0       	ldi	r22, 0x00	; 0
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	80 55       	subi	r24, 0x50	; 80
     6aa:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     6ae:	08 95       	ret

000006b0 <OLED_goto_column>:
     6b0:	cf 93       	push	r28
     6b2:	c8 2f       	mov	r28, r24
     6b4:	40 e0       	ldi	r20, 0x00	; 0
     6b6:	50 e1       	ldi	r21, 0x10	; 16
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	8f 70       	andi	r24, 0x0F	; 15
     6be:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     6c2:	8c 2f       	mov	r24, r28
     6c4:	85 95       	asr	r24
     6c6:	85 95       	asr	r24
     6c8:	85 95       	asr	r24
     6ca:	85 95       	asr	r24
     6cc:	40 e0       	ldi	r20, 0x00	; 0
     6ce:	50 e1       	ldi	r21, 0x10	; 16
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	70 e0       	ldi	r23, 0x00	; 0
     6d4:	80 61       	ori	r24, 0x10	; 16
     6d6:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     6da:	cf 91       	pop	r28
     6dc:	08 95       	ret

000006de <OLED_pos>:
     6de:	cf 93       	push	r28
     6e0:	c6 2f       	mov	r28, r22
     6e2:	0e 94 50 03 	call	0x6a0	; 0x6a0 <OLED_goto_row>
     6e6:	8c 2f       	mov	r24, r28
     6e8:	0e 94 58 03 	call	0x6b0	; 0x6b0 <OLED_goto_column>
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <OLED_clear_row>:
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	60 e0       	ldi	r22, 0x00	; 0
     6f6:	0e 94 6f 03 	call	0x6de	; 0x6de <OLED_pos>
     6fa:	c0 e0       	ldi	r28, 0x00	; 0
     6fc:	d0 e0       	ldi	r29, 0x00	; 0
     6fe:	08 c0       	rjmp	.+16     	; 0x710 <OLED_clear_row+0x20>
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	52 e1       	ldi	r21, 0x12	; 18
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     70e:	21 96       	adiw	r28, 0x01	; 1
     710:	c0 38       	cpi	r28, 0x80	; 128
     712:	d1 05       	cpc	r29, r1
     714:	ac f3       	brlt	.-22     	; 0x700 <OLED_clear_row+0x10>
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <OLED_reset>:
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	0e 94 6f 03 	call	0x6de	; 0x6de <OLED_pos>
     728:	c0 e0       	ldi	r28, 0x00	; 0
     72a:	d0 e0       	ldi	r29, 0x00	; 0
     72c:	07 c0       	rjmp	.+14     	; 0x73c <OLED_reset+0x20>
     72e:	8c 2f       	mov	r24, r28
     730:	0e 94 78 03 	call	0x6f0	; 0x6f0 <OLED_clear_row>
     734:	8c 2f       	mov	r24, r28
     736:	0e 94 50 03 	call	0x6a0	; 0x6a0 <OLED_goto_row>
     73a:	21 96       	adiw	r28, 0x01	; 1
     73c:	c8 30       	cpi	r28, 0x08	; 8
     73e:	d1 05       	cpc	r29, r1
     740:	b4 f3       	brlt	.-20     	; 0x72e <OLED_reset+0x12>
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	08 95       	ret

00000748 <OLED_write_data>:
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	18 2f       	mov	r17, r24
     750:	c0 e0       	ldi	r28, 0x00	; 0
     752:	d0 e0       	ldi	r29, 0x00	; 0
     754:	15 c0       	rjmp	.+42     	; 0x780 <OLED_write_data+0x38>
     756:	e1 2f       	mov	r30, r17
     758:	f0 e0       	ldi	r31, 0x00	; 0
     75a:	b0 97       	sbiw	r30, 0x20	; 32
     75c:	ee 0f       	add	r30, r30
     75e:	ff 1f       	adc	r31, r31
     760:	ee 0f       	add	r30, r30
     762:	ff 1f       	adc	r31, r31
     764:	ee 0f       	add	r30, r30
     766:	ff 1f       	adc	r31, r31
     768:	ec 0f       	add	r30, r28
     76a:	fd 1f       	adc	r31, r29
     76c:	e0 59       	subi	r30, 0x90	; 144
     76e:	ff 4f       	sbci	r31, 0xFF	; 255
     770:	84 91       	lpm	r24, Z
     772:	40 e0       	ldi	r20, 0x00	; 0
     774:	52 e1       	ldi	r21, 0x12	; 18
     776:	60 e0       	ldi	r22, 0x00	; 0
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     77e:	21 96       	adiw	r28, 0x01	; 1
     780:	c8 30       	cpi	r28, 0x08	; 8
     782:	d1 05       	cpc	r29, r1
     784:	44 f3       	brlt	.-48     	; 0x756 <OLED_write_data+0xe>
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	1f 91       	pop	r17
     78c:	08 95       	ret

0000078e <OLED_print>:
     78e:	cf 93       	push	r28
     790:	df 93       	push	r29
     792:	ec 01       	movw	r28, r24
     794:	40 e0       	ldi	r20, 0x00	; 0
     796:	50 e1       	ldi	r21, 0x10	; 16
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	70 e0       	ldi	r23, 0x00	; 0
     79c:	80 e2       	ldi	r24, 0x20	; 32
     79e:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	50 e1       	ldi	r21, 0x10	; 16
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	70 e0       	ldi	r23, 0x00	; 0
     7aa:	82 e0       	ldi	r24, 0x02	; 2
     7ac:	0e 94 73 05 	call	0xae6	; 0xae6 <xmem_write>
     7b0:	03 c0       	rjmp	.+6      	; 0x7b8 <OLED_print+0x2a>
     7b2:	0e 94 a4 03 	call	0x748	; 0x748 <OLED_write_data>
     7b6:	21 96       	adiw	r28, 0x01	; 1
     7b8:	88 81       	ld	r24, Y
     7ba:	81 11       	cpse	r24, r1
     7bc:	fa cf       	rjmp	.-12     	; 0x7b2 <OLED_print+0x24>
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	08 95       	ret

000007c4 <create_menu_item>:
}

menu_item *create_menu_item (const char *name, menu_item *parent){
     7c4:	ef 92       	push	r14
     7c6:	ff 92       	push	r15
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	7c 01       	movw	r14, r24
     7d2:	8b 01       	movw	r16, r22
	menu_item *new_item = (menu_item*) malloc(sizeof(menu_item));
     7d4:	8b e0       	ldi	r24, 0x0B	; 11
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	0e 94 78 05 	call	0xaf0	; 0xaf0 <malloc>
     7dc:	ec 01       	movw	r28, r24
	new_item->menu_name = strdup(name);
     7de:	c7 01       	movw	r24, r14
     7e0:	0e 94 99 06 	call	0xd32	; 0xd32 <strdup>
     7e4:	99 87       	std	Y+9, r25	; 0x09
     7e6:	88 87       	std	Y+8, r24	; 0x08
	new_item->parent = parent;
     7e8:	19 83       	std	Y+1, r17	; 0x01
     7ea:	08 83       	st	Y, r16
	new_item->first_child = NULL;
     7ec:	1b 82       	std	Y+3, r1	; 0x03
     7ee:	1a 82       	std	Y+2, r1	; 0x02
	new_item->previous_sibling=NULL;
     7f0:	1d 82       	std	Y+5, r1	; 0x05
     7f2:	1c 82       	std	Y+4, r1	; 0x04
	new_item->next_sibling = NULL;
     7f4:	1f 82       	std	Y+7, r1	; 0x07
     7f6:	1e 82       	std	Y+6, r1	; 0x06
	return new_item;
}
     7f8:	ce 01       	movw	r24, r28
     7fa:	df 91       	pop	r29
     7fc:	cf 91       	pop	r28
     7fe:	1f 91       	pop	r17
     800:	0f 91       	pop	r16
     802:	ff 90       	pop	r15
     804:	ef 90       	pop	r14
     806:	08 95       	ret

00000808 <add_submenu>:

void add_submenu(menu_item *parent, const char *name){
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	ec 01       	movw	r28, r24
     80e:	cb 01       	movw	r24, r22
	menu_item *new_item=create_menu_item(name,parent);
     810:	be 01       	movw	r22, r28
     812:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <create_menu_item>
	if (parent->first_child==NULL){
     816:	ea 81       	ldd	r30, Y+2	; 0x02
     818:	fb 81       	ldd	r31, Y+3	; 0x03
     81a:	30 97       	sbiw	r30, 0x00	; 0
     81c:	21 f4       	brne	.+8      	; 0x826 <add_submenu+0x1e>
		parent->first_child = new_item;
     81e:	9b 83       	std	Y+3, r25	; 0x03
     820:	8a 83       	std	Y+2, r24	; 0x02
     822:	0d c0       	rjmp	.+26     	; 0x83e <add_submenu+0x36>
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
			current = current->next_sibling;
     824:	f9 01       	movw	r30, r18
	if (parent->first_child==NULL){
		parent->first_child = new_item;
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
     826:	26 81       	ldd	r18, Z+6	; 0x06
     828:	37 81       	ldd	r19, Z+7	; 0x07
     82a:	21 15       	cp	r18, r1
     82c:	31 05       	cpc	r19, r1
     82e:	d1 f7       	brne	.-12     	; 0x824 <add_submenu+0x1c>
			current = current->next_sibling;
		}
		current->next_sibling=new_item;
     830:	97 83       	std	Z+7, r25	; 0x07
     832:	86 83       	std	Z+6, r24	; 0x06
		new_item->previous_sibling=current;
     834:	dc 01       	movw	r26, r24
     836:	15 96       	adiw	r26, 0x05	; 5
     838:	fc 93       	st	X, r31
     83a:	ee 93       	st	-X, r30
     83c:	14 97       	sbiw	r26, 0x04	; 4
	}
}
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <add_submenu_from_list>:

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
     844:	df 92       	push	r13
     846:	ef 92       	push	r14
     848:	ff 92       	push	r15
     84a:	0f 93       	push	r16
     84c:	1f 93       	push	r17
     84e:	cf 93       	push	r28
     850:	df 93       	push	r29
     852:	7c 01       	movw	r14, r24
     854:	8b 01       	movw	r16, r22
     856:	d4 2e       	mov	r13, r20
	for(int i=0; i<length; i++){
     858:	c0 e0       	ldi	r28, 0x00	; 0
     85a:	d0 e0       	ldi	r29, 0x00	; 0
     85c:	0b c0       	rjmp	.+22     	; 0x874 <add_submenu_from_list+0x30>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
     85e:	fe 01       	movw	r30, r28
     860:	ee 0f       	add	r30, r30
     862:	ff 1f       	adc	r31, r31
     864:	e0 0f       	add	r30, r16
     866:	f1 1f       	adc	r31, r17
     868:	60 81       	ld	r22, Z
     86a:	71 81       	ldd	r23, Z+1	; 0x01
     86c:	c7 01       	movw	r24, r14
     86e:	0e 94 04 04 	call	0x808	; 0x808 <add_submenu>
		new_item->previous_sibling=current;
	}
}

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
	for(int i=0; i<length; i++){
     872:	21 96       	adiw	r28, 0x01	; 1
     874:	8d 2d       	mov	r24, r13
     876:	0d 2c       	mov	r0, r13
     878:	00 0c       	add	r0, r0
     87a:	99 0b       	sbc	r25, r25
     87c:	c8 17       	cp	r28, r24
     87e:	d9 07       	cpc	r29, r25
     880:	74 f3       	brlt	.-36     	; 0x85e <add_submenu_from_list+0x1a>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
	}
}
     882:	df 91       	pop	r29
     884:	cf 91       	pop	r28
     886:	1f 91       	pop	r17
     888:	0f 91       	pop	r16
     88a:	ff 90       	pop	r15
     88c:	ef 90       	pop	r14
     88e:	df 90       	pop	r13
     890:	08 95       	ret

00000892 <OLED_print_menu_2>:


void OLED_print_menu_2(menu_item* parent){
     892:	0f 93       	push	r16
     894:	1f 93       	push	r17
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	ec 01       	movw	r28, r24
	OLED_reset();
     89c:	0e 94 8e 03 	call	0x71c	; 0x71c <OLED_reset>
	OLED_pos(0, 50);
     8a0:	62 e3       	ldi	r22, 0x32	; 50
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	0e 94 6f 03 	call	0x6de	; 0x6de <OLED_pos>
	OLED_print(parent->menu_name);
     8a8:	88 85       	ldd	r24, Y+8	; 0x08
     8aa:	99 85       	ldd	r25, Y+9	; 0x09
     8ac:	0e 94 c7 03 	call	0x78e	; 0x78e <OLED_print>
	menu_item *current=parent->first_child;
     8b0:	0a 80       	ldd	r0, Y+2	; 0x02
     8b2:	db 81       	ldd	r29, Y+3	; 0x03
     8b4:	c0 2d       	mov	r28, r0
	int i=1;
     8b6:	01 e0       	ldi	r16, 0x01	; 1
     8b8:	10 e0       	ldi	r17, 0x00	; 0
	while(current!=NULL){
     8ba:	0e c0       	rjmp	.+28     	; 0x8d8 <OLED_print_menu_2+0x46>
		OLED_pos(i+1, 10);
     8bc:	6a e0       	ldi	r22, 0x0A	; 10
     8be:	81 e0       	ldi	r24, 0x01	; 1
     8c0:	80 0f       	add	r24, r16
     8c2:	0e 94 6f 03 	call	0x6de	; 0x6de <OLED_pos>
		OLED_print(current->menu_name);
     8c6:	88 85       	ldd	r24, Y+8	; 0x08
     8c8:	99 85       	ldd	r25, Y+9	; 0x09
     8ca:	0e 94 c7 03 	call	0x78e	; 0x78e <OLED_print>
		current=current->next_sibling;
     8ce:	0e 80       	ldd	r0, Y+6	; 0x06
     8d0:	df 81       	ldd	r29, Y+7	; 0x07
     8d2:	c0 2d       	mov	r28, r0
		i++;
     8d4:	0f 5f       	subi	r16, 0xFF	; 255
     8d6:	1f 4f       	sbci	r17, 0xFF	; 255
	OLED_reset();
	OLED_pos(0, 50);
	OLED_print(parent->menu_name);
	menu_item *current=parent->first_child;
	int i=1;
	while(current!=NULL){
     8d8:	20 97       	sbiw	r28, 0x00	; 0
     8da:	81 f7       	brne	.-32     	; 0x8bc <OLED_print_menu_2+0x2a>
		OLED_pos(i+1, 10);
		OLED_print(current->menu_name);
		current=current->next_sibling;
		i++;
	}
}
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	1f 91       	pop	r17
     8e2:	0f 91       	pop	r16
     8e4:	08 95       	ret

000008e6 <menu_init>:
	for(int i=0; i<page_number; i++){
		
	} 
}*/

void menu_init(IO *io){
     8e6:	ef 92       	push	r14
     8e8:	ff 92       	push	r15
     8ea:	0f 93       	push	r16
     8ec:	1f 93       	push	r17
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
     8f6:	62 97       	sbiw	r28, 0x12	; 18
     8f8:	0f b6       	in	r0, 0x3f	; 63
     8fa:	f8 94       	cli
     8fc:	de bf       	out	0x3e, r29	; 62
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	cd bf       	out	0x3d, r28	; 61
     902:	7c 01       	movw	r14, r24
	menu_item *menu = create_menu_item("Home", NULL); 
     904:	60 e0       	ldi	r22, 0x00	; 0
     906:	70 e0       	ldi	r23, 0x00	; 0
     908:	82 eb       	ldi	r24, 0xB2	; 178
     90a:	91 e0       	ldi	r25, 0x01	; 1
     90c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <create_menu_item>
     910:	8c 01       	movw	r16, r24
	
	const char* home_menu[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4"};
     912:	88 e0       	ldi	r24, 0x08	; 8
     914:	e4 e1       	ldi	r30, 0x14	; 20
     916:	f1 e0       	ldi	r31, 0x01	; 1
     918:	de 01       	movw	r26, r28
     91a:	11 96       	adiw	r26, 0x01	; 1
     91c:	01 90       	ld	r0, Z+
     91e:	0d 92       	st	X+, r0
     920:	8a 95       	dec	r24
     922:	e1 f7       	brne	.-8      	; 0x91c <menu_init+0x36>
	add_submenu_from_list(menu, home_menu, 4);
     924:	44 e0       	ldi	r20, 0x04	; 4
     926:	be 01       	movw	r22, r28
     928:	6f 5f       	subi	r22, 0xFF	; 255
     92a:	7f 4f       	sbci	r23, 0xFF	; 255
     92c:	c8 01       	movw	r24, r16
     92e:	0e 94 22 04 	call	0x844	; 0x844 <add_submenu_from_list>
	io->current_node = menu->first_child;
     932:	f8 01       	movw	r30, r16
     934:	82 81       	ldd	r24, Z+2	; 0x02
     936:	93 81       	ldd	r25, Z+3	; 0x03
     938:	f7 01       	movw	r30, r14
     93a:	95 87       	std	Z+13, r25	; 0x0d
     93c:	84 87       	std	Z+12, r24	; 0x0c
	const char* home_menu1[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4", "Back"};
     93e:	8a e0       	ldi	r24, 0x0A	; 10
     940:	ec e1       	ldi	r30, 0x1C	; 28
     942:	f1 e0       	ldi	r31, 0x01	; 1
     944:	de 01       	movw	r26, r28
     946:	19 96       	adiw	r26, 0x09	; 9
     948:	01 90       	ld	r0, Z+
     94a:	0d 92       	st	X+, r0
     94c:	8a 95       	dec	r24
     94e:	e1 f7       	brne	.-8      	; 0x948 <menu_init+0x62>
	add_submenu_from_list(menu->first_child, home_menu1, 5);
     950:	45 e0       	ldi	r20, 0x05	; 5
     952:	be 01       	movw	r22, r28
     954:	67 5f       	subi	r22, 0xF7	; 247
     956:	7f 4f       	sbci	r23, 0xFF	; 255
     958:	f8 01       	movw	r30, r16
     95a:	82 81       	ldd	r24, Z+2	; 0x02
     95c:	93 81       	ldd	r25, Z+3	; 0x03
     95e:	0e 94 22 04 	call	0x844	; 0x844 <add_submenu_from_list>
	OLED_print_menu_2(menu);
     962:	c8 01       	movw	r24, r16
     964:	0e 94 49 04 	call	0x892	; 0x892 <OLED_print_menu_2>
	
}
     968:	62 96       	adiw	r28, 0x12	; 18
     96a:	0f b6       	in	r0, 0x3f	; 63
     96c:	f8 94       	cli
     96e:	de bf       	out	0x3e, r29	; 62
     970:	0f be       	out	0x3f, r0	; 63
     972:	cd bf       	out	0x3d, r28	; 61
     974:	df 91       	pop	r29
     976:	cf 91       	pop	r28
     978:	1f 91       	pop	r17
     97a:	0f 91       	pop	r16
     97c:	ff 90       	pop	r15
     97e:	ef 90       	pop	r14
     980:	08 95       	ret

00000982 <pwm_init>:
	TCCR3B = (0<<WGM33) | (1<<WGM32) |(1<<CS30);
	OCR3B = 0;
};
		
void pwm_init(void) {
	DDRD |=(1<<DDD4);
     982:	81 b3       	in	r24, 0x11	; 17
     984:	80 61       	ori	r24, 0x10	; 16
     986:	81 bb       	out	0x11, r24	; 17
	TCCR3A = (0<<COM3A0) | (1<<COM3A1) | (0<<WGM31) | (1<<WGM30);
     988:	81 e8       	ldi	r24, 0x81	; 129
     98a:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
	TCCR3B = (0<<ICES3) | (1<<WGM32) |(1<<CS30);
     98e:	89 e0       	ldi	r24, 0x09	; 9
     990:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
	OCR3B = 0;
     994:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     998:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     99c:	08 95       	ret

0000099e <main>:
};



int main(void)
{
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	cd b7       	in	r28, 0x3d	; 61
     9a4:	de b7       	in	r29, 0x3e	; 62
     9a6:	a5 97       	sbiw	r28, 0x25	; 37
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	f8 94       	cli
     9ac:	de bf       	out	0x3e, r29	; 62
     9ae:	0f be       	out	0x3f, r0	; 63
     9b0:	cd bf       	out	0x3d, r28	; 61
	/* Replace with your application code */
	pwm_init();
     9b2:	0e 94 c1 04 	call	0x982	; 0x982 <pwm_init>
	USART_Init(MYUBRR);
     9b6:	8f e1       	ldi	r24, 0x1F	; 31
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 49 05 	call	0xa92	; 0xa92 <USART_Init>
	init_printf();
     9be:	0e 94 62 05 	call	0xac4	; 0xac4 <init_printf>
	xmem_init();
     9c2:	0e 94 69 05 	call	0xad2	; 0xad2 <xmem_init>
	oled_init();
     9c6:	0e 94 b5 02 	call	0x56a	; 0x56a <oled_init>
	IO io;
	io_init(&io);
     9ca:	ce 01       	movw	r24, r28
     9cc:	01 96       	adiw	r24, 0x01	; 1
     9ce:	0e 94 a2 02 	call	0x544	; 0x544 <io_init>
	OLED_reset();
     9d2:	0e 94 8e 03 	call	0x71c	; 0x71c <OLED_reset>
	//OLED_print_menu((char** ) current_menu->items, current_menu->num_items);
	
	//const char* menu1[] = {"Menu 1", "HOME", "Test 1", "Test 2"};
	//int16_t menu1_length = sizeof(menu1) / sizeof(menu1[0]);
	
	menu_init(&io);
     9d6:	ce 01       	movw	r24, r28
     9d8:	01 96       	adiw	r24, 0x01	; 1
     9da:	0e 94 73 04 	call	0x8e6	; 0x8e6 <menu_init>
	SPI_master_init();
     9de:	0e 94 3d 05 	call	0xa7a	; 0xa7a <SPI_master_init>
	can_cntrl_config();
     9e2:	0e 94 0f 02 	call	0x41e	; 0x41e <can_cntrl_config>
	
	can_message msg = {0x7ff,0x02,{0xCC, 0xBB}};
     9e6:	ce 01       	movw	r24, r28
     9e8:	40 96       	adiw	r24, 0x10	; 16
     9ea:	2b e0       	ldi	r18, 0x0B	; 11
     9ec:	fc 01       	movw	r30, r24
     9ee:	11 92       	st	Z+, r1
     9f0:	2a 95       	dec	r18
     9f2:	e9 f7       	brne	.-6      	; 0x9ee <main+0x50>
     9f4:	2f ef       	ldi	r18, 0xFF	; 255
     9f6:	37 e0       	ldi	r19, 0x07	; 7
     9f8:	39 8b       	std	Y+17, r19	; 0x11
     9fa:	28 8b       	std	Y+16, r18	; 0x10
     9fc:	22 e0       	ldi	r18, 0x02	; 2
     9fe:	2a 8b       	std	Y+18, r18	; 0x12
     a00:	2c ec       	ldi	r18, 0xCC	; 204
     a02:	2b 8b       	std	Y+19, r18	; 0x13
     a04:	2b eb       	ldi	r18, 0xBB	; 187
     a06:	2c 8b       	std	Y+20, r18	; 0x14
		uint8_t dlc = can_cntrl_read(RXB0DLC) & 0x0F; // Mask to get only the lower 4 bits (DLC)
		
		uint8_t out1 = can_cntrl_read(RXB0D0);
		uint8_t out2 = can_cntrl_read(RXB0D1);
		*/
	can_message_send(&msg);
     a08:	0e 94 31 02 	call	0x462	; 0x462 <can_message_send>
	can_message out = can_message_read();
     a0c:	ce 01       	movw	r24, r28
     a0e:	4b 96       	adiw	r24, 0x1b	; 27
     a10:	0e 94 69 02 	call	0x4d2	; 0x4d2 <can_message_read>
	
		printf("D0: %02x\n", out.data[0]);
     a14:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a16:	1f 92       	push	r1
     a18:	8f 93       	push	r24
     a1a:	88 ed       	ldi	r24, 0xD8	; 216
     a1c:	91 e0       	ldi	r25, 0x01	; 1
     a1e:	9f 93       	push	r25
     a20:	8f 93       	push	r24
     a22:	0e 94 ba 06 	call	0xd74	; 0xd74 <printf>
		printf("D1: %02x\n", out.data[1]);
     a26:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a28:	1f 92       	push	r1
     a2a:	8f 93       	push	r24
     a2c:	82 ee       	ldi	r24, 0xE2	; 226
     a2e:	91 e0       	ldi	r25, 0x01	; 1
     a30:	9f 93       	push	r25
     a32:	8f 93       	push	r24
     a34:	0e 94 ba 06 	call	0xd74	; 0xd74 <printf>
		printf("Dlc: %02x\n", out.data_length);
     a38:	8d 8d       	ldd	r24, Y+29	; 0x1d
     a3a:	1f 92       	push	r1
     a3c:	8f 93       	push	r24
     a3e:	8c ee       	ldi	r24, 0xEC	; 236
     a40:	91 e0       	ldi	r25, 0x01	; 1
     a42:	9f 93       	push	r25
     a44:	8f 93       	push	r24
     a46:	0e 94 ba 06 	call	0xd74	; 0xd74 <printf>
		printf("id: %02x\n", out.id);
     a4a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a4c:	8f 93       	push	r24
     a4e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a50:	8f 93       	push	r24
     a52:	87 ef       	ldi	r24, 0xF7	; 247
     a54:	91 e0       	ldi	r25, 0x01	; 1
     a56:	9f 93       	push	r25
     a58:	8f 93       	push	r24
     a5a:	0e 94 ba 06 	call	0xd74	; 0xd74 <printf>
     a5e:	0f b6       	in	r0, 0x3f	; 63
     a60:	f8 94       	cli
     a62:	de bf       	out	0x3e, r29	; 62
     a64:	0f be       	out	0x3f, r0	; 63
     a66:	cd bf       	out	0x3d, r28	; 61
     a68:	ff cf       	rjmp	.-2      	; 0xa68 <main+0xca>

00000a6a <SPI_SS_low>:
#include "SPI.h"


void SPI_SS_low(void) {
	PORTB &= ~(1 << PB4);  // Pull SS/CS (PB4) low to select the slave
     a6a:	88 b3       	in	r24, 0x18	; 24
     a6c:	8f 7e       	andi	r24, 0xEF	; 239
     a6e:	88 bb       	out	0x18, r24	; 24
     a70:	08 95       	ret

00000a72 <SPI_SS_high>:
}

void SPI_SS_high(void) {
	PORTB |= (1 << PB4);   // Pull SS/CS (PB4) high to deselect the slave
     a72:	88 b3       	in	r24, 0x18	; 24
     a74:	80 61       	ori	r24, 0x10	; 16
     a76:	88 bb       	out	0x18, r24	; 24
     a78:	08 95       	ret

00000a7a <SPI_master_init>:
}


//SPI functions
void SPI_master_init(void){
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB4); //Set MOSI and SCK output, all others input
     a7a:	80 eb       	ldi	r24, 0xB0	; 176
     a7c:	87 bb       	out	0x17, r24	; 23
	SPI_SS_high();
     a7e:	0e 94 39 05 	call	0xa72	; 0xa72 <SPI_SS_high>
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0); //Enable SPI, Master, set clock rate fck/16
     a82:	81 e5       	ldi	r24, 0x51	; 81
     a84:	8d b9       	out	0x0d, r24	; 13
     a86:	08 95       	ret

00000a88 <SPI_MasterTransmit>:
}

uint8_t SPI_MasterTransmit(char cData){
	SPDR = cData; //Start transmission
     a88:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))); //Wait for transmission complete
     a8a:	77 9b       	sbis	0x0e, 7	; 14
     a8c:	fe cf       	rjmp	.-4      	; 0xa8a <SPI_MasterTransmit+0x2>
	return SPDR;
     a8e:	8f b1       	in	r24, 0x0f	; 15
}
     a90:	08 95       	ret

00000a92 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
     a92:	90 bd       	out	0x20, r25	; 32
     a94:	89 b9       	out	0x09, r24	; 9
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	8a b9       	out	0x0a, r24	; 10
     a9a:	8e e8       	ldi	r24, 0x8E	; 142
     a9c:	80 bd       	out	0x20, r24	; 32
     a9e:	08 95       	ret

00000aa0 <USART_Transmit>:
     aa0:	5d 9b       	sbis	0x0b, 5	; 11
     aa2:	fe cf       	rjmp	.-4      	; 0xaa0 <USART_Transmit>
     aa4:	8c b9       	out	0x0c, r24	; 12
     aa6:	08 95       	ret

00000aa8 <uart_putchar>:
     aa8:	cf 93       	push	r28
     aaa:	c8 2f       	mov	r28, r24
     aac:	8a 30       	cpi	r24, 0x0A	; 10
     aae:	19 f4       	brne	.+6      	; 0xab6 <uart_putchar+0xe>
     ab0:	8d e0       	ldi	r24, 0x0D	; 13
     ab2:	0e 94 50 05 	call	0xaa0	; 0xaa0 <USART_Transmit>
     ab6:	8c 2f       	mov	r24, r28
     ab8:	0e 94 50 05 	call	0xaa0	; 0xaa0 <USART_Transmit>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	cf 91       	pop	r28
     ac2:	08 95       	ret

00000ac4 <init_printf>:


void init_printf(void)
{
	static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
	stdout = &uart_stdout;  // Set stdout to use uart_putchar
     ac4:	86 e0       	ldi	r24, 0x06	; 6
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <__iob+0x3>
     acc:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <__iob+0x2>
     ad0:	08 95       	ret

00000ad2 <xmem_init>:
#include "xmem.h"
#include <avr/io.h>


void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     ad2:	85 b7       	in	r24, 0x35	; 53
     ad4:	80 68       	ori	r24, 0x80	; 128
     ad6:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(1 << XMM0 | 1 << XMM1 ); // mask bits / reduce bus width
     ad8:	80 b7       	in	r24, 0x30	; 48
     ada:	87 7e       	andi	r24, 0xE7	; 231
     adc:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2 );
     ade:	80 b7       	in	r24, 0x30	; 48
     ae0:	80 62       	ori	r24, 0x20	; 32
     ae2:	80 bf       	out	0x30, r24	; 48
     ae4:	08 95       	ret

00000ae6 <xmem_write>:
}

void xmem_write ( uint8_t data , uint16_t addr, uint16_t base_address){
	volatile char * ext_mem = ( char *) base_address ;
	ext_mem [ addr ]= data ;
     ae6:	fa 01       	movw	r30, r20
     ae8:	e6 0f       	add	r30, r22
     aea:	f7 1f       	adc	r31, r23
     aec:	80 83       	st	Z, r24
     aee:	08 95       	ret

00000af0 <malloc>:
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	82 30       	cpi	r24, 0x02	; 2
     afa:	91 05       	cpc	r25, r1
     afc:	10 f4       	brcc	.+4      	; 0xb02 <malloc+0x12>
     afe:	82 e0       	ldi	r24, 0x02	; 2
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <__flp>
     b06:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <__flp+0x1>
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	a0 e0       	ldi	r26, 0x00	; 0
     b10:	b0 e0       	ldi	r27, 0x00	; 0
     b12:	30 97       	sbiw	r30, 0x00	; 0
     b14:	19 f1       	breq	.+70     	; 0xb5c <malloc+0x6c>
     b16:	40 81       	ld	r20, Z
     b18:	51 81       	ldd	r21, Z+1	; 0x01
     b1a:	02 81       	ldd	r16, Z+2	; 0x02
     b1c:	13 81       	ldd	r17, Z+3	; 0x03
     b1e:	48 17       	cp	r20, r24
     b20:	59 07       	cpc	r21, r25
     b22:	c8 f0       	brcs	.+50     	; 0xb56 <malloc+0x66>
     b24:	84 17       	cp	r24, r20
     b26:	95 07       	cpc	r25, r21
     b28:	69 f4       	brne	.+26     	; 0xb44 <malloc+0x54>
     b2a:	10 97       	sbiw	r26, 0x00	; 0
     b2c:	31 f0       	breq	.+12     	; 0xb3a <malloc+0x4a>
     b2e:	12 96       	adiw	r26, 0x02	; 2
     b30:	0c 93       	st	X, r16
     b32:	12 97       	sbiw	r26, 0x02	; 2
     b34:	13 96       	adiw	r26, 0x03	; 3
     b36:	1c 93       	st	X, r17
     b38:	27 c0       	rjmp	.+78     	; 0xb88 <malloc+0x98>
     b3a:	00 93 04 02 	sts	0x0204, r16	; 0x800204 <__flp>
     b3e:	10 93 05 02 	sts	0x0205, r17	; 0x800205 <__flp+0x1>
     b42:	22 c0       	rjmp	.+68     	; 0xb88 <malloc+0x98>
     b44:	21 15       	cp	r18, r1
     b46:	31 05       	cpc	r19, r1
     b48:	19 f0       	breq	.+6      	; 0xb50 <malloc+0x60>
     b4a:	42 17       	cp	r20, r18
     b4c:	53 07       	cpc	r21, r19
     b4e:	18 f4       	brcc	.+6      	; 0xb56 <malloc+0x66>
     b50:	9a 01       	movw	r18, r20
     b52:	bd 01       	movw	r22, r26
     b54:	ef 01       	movw	r28, r30
     b56:	df 01       	movw	r26, r30
     b58:	f8 01       	movw	r30, r16
     b5a:	db cf       	rjmp	.-74     	; 0xb12 <malloc+0x22>
     b5c:	21 15       	cp	r18, r1
     b5e:	31 05       	cpc	r19, r1
     b60:	f9 f0       	breq	.+62     	; 0xba0 <malloc+0xb0>
     b62:	28 1b       	sub	r18, r24
     b64:	39 0b       	sbc	r19, r25
     b66:	24 30       	cpi	r18, 0x04	; 4
     b68:	31 05       	cpc	r19, r1
     b6a:	80 f4       	brcc	.+32     	; 0xb8c <malloc+0x9c>
     b6c:	8a 81       	ldd	r24, Y+2	; 0x02
     b6e:	9b 81       	ldd	r25, Y+3	; 0x03
     b70:	61 15       	cp	r22, r1
     b72:	71 05       	cpc	r23, r1
     b74:	21 f0       	breq	.+8      	; 0xb7e <malloc+0x8e>
     b76:	fb 01       	movw	r30, r22
     b78:	93 83       	std	Z+3, r25	; 0x03
     b7a:	82 83       	std	Z+2, r24	; 0x02
     b7c:	04 c0       	rjmp	.+8      	; 0xb86 <malloc+0x96>
     b7e:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__flp+0x1>
     b82:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__flp>
     b86:	fe 01       	movw	r30, r28
     b88:	32 96       	adiw	r30, 0x02	; 2
     b8a:	44 c0       	rjmp	.+136    	; 0xc14 <malloc+0x124>
     b8c:	fe 01       	movw	r30, r28
     b8e:	e2 0f       	add	r30, r18
     b90:	f3 1f       	adc	r31, r19
     b92:	81 93       	st	Z+, r24
     b94:	91 93       	st	Z+, r25
     b96:	22 50       	subi	r18, 0x02	; 2
     b98:	31 09       	sbc	r19, r1
     b9a:	39 83       	std	Y+1, r19	; 0x01
     b9c:	28 83       	st	Y, r18
     b9e:	3a c0       	rjmp	.+116    	; 0xc14 <malloc+0x124>
     ba0:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__data_end>
     ba4:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__data_end+0x1>
     ba8:	23 2b       	or	r18, r19
     baa:	41 f4       	brne	.+16     	; 0xbbc <malloc+0xcc>
     bac:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     bb0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     bb4:	30 93 03 02 	sts	0x0203, r19	; 0x800203 <__data_end+0x1>
     bb8:	20 93 02 02 	sts	0x0202, r18	; 0x800202 <__data_end>
     bbc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     bc0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     bc4:	21 15       	cp	r18, r1
     bc6:	31 05       	cpc	r19, r1
     bc8:	41 f4       	brne	.+16     	; 0xbda <malloc+0xea>
     bca:	2d b7       	in	r18, 0x3d	; 61
     bcc:	3e b7       	in	r19, 0x3e	; 62
     bce:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     bd2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     bd6:	24 1b       	sub	r18, r20
     bd8:	35 0b       	sbc	r19, r21
     bda:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <__data_end>
     bde:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <__data_end+0x1>
     be2:	e2 17       	cp	r30, r18
     be4:	f3 07       	cpc	r31, r19
     be6:	a0 f4       	brcc	.+40     	; 0xc10 <malloc+0x120>
     be8:	2e 1b       	sub	r18, r30
     bea:	3f 0b       	sbc	r19, r31
     bec:	28 17       	cp	r18, r24
     bee:	39 07       	cpc	r19, r25
     bf0:	78 f0       	brcs	.+30     	; 0xc10 <malloc+0x120>
     bf2:	ac 01       	movw	r20, r24
     bf4:	4e 5f       	subi	r20, 0xFE	; 254
     bf6:	5f 4f       	sbci	r21, 0xFF	; 255
     bf8:	24 17       	cp	r18, r20
     bfa:	35 07       	cpc	r19, r21
     bfc:	48 f0       	brcs	.+18     	; 0xc10 <malloc+0x120>
     bfe:	4e 0f       	add	r20, r30
     c00:	5f 1f       	adc	r21, r31
     c02:	50 93 03 02 	sts	0x0203, r21	; 0x800203 <__data_end+0x1>
     c06:	40 93 02 02 	sts	0x0202, r20	; 0x800202 <__data_end>
     c0a:	81 93       	st	Z+, r24
     c0c:	91 93       	st	Z+, r25
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <malloc+0x124>
     c10:	e0 e0       	ldi	r30, 0x00	; 0
     c12:	f0 e0       	ldi	r31, 0x00	; 0
     c14:	cf 01       	movw	r24, r30
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <free>:
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	09 f4       	brne	.+2      	; 0xc2a <free+0xa>
     c28:	81 c0       	rjmp	.+258    	; 0xd2c <free+0x10c>
     c2a:	fc 01       	movw	r30, r24
     c2c:	32 97       	sbiw	r30, 0x02	; 2
     c2e:	13 82       	std	Z+3, r1	; 0x03
     c30:	12 82       	std	Z+2, r1	; 0x02
     c32:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <__flp>
     c36:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <__flp+0x1>
     c3a:	10 97       	sbiw	r26, 0x00	; 0
     c3c:	81 f4       	brne	.+32     	; 0xc5e <free+0x3e>
     c3e:	20 81       	ld	r18, Z
     c40:	31 81       	ldd	r19, Z+1	; 0x01
     c42:	82 0f       	add	r24, r18
     c44:	93 1f       	adc	r25, r19
     c46:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__data_end>
     c4a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__data_end+0x1>
     c4e:	28 17       	cp	r18, r24
     c50:	39 07       	cpc	r19, r25
     c52:	51 f5       	brne	.+84     	; 0xca8 <free+0x88>
     c54:	f0 93 03 02 	sts	0x0203, r31	; 0x800203 <__data_end+0x1>
     c58:	e0 93 02 02 	sts	0x0202, r30	; 0x800202 <__data_end>
     c5c:	67 c0       	rjmp	.+206    	; 0xd2c <free+0x10c>
     c5e:	ed 01       	movw	r28, r26
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	ce 17       	cp	r28, r30
     c66:	df 07       	cpc	r29, r31
     c68:	40 f4       	brcc	.+16     	; 0xc7a <free+0x5a>
     c6a:	4a 81       	ldd	r20, Y+2	; 0x02
     c6c:	5b 81       	ldd	r21, Y+3	; 0x03
     c6e:	9e 01       	movw	r18, r28
     c70:	41 15       	cp	r20, r1
     c72:	51 05       	cpc	r21, r1
     c74:	f1 f0       	breq	.+60     	; 0xcb2 <free+0x92>
     c76:	ea 01       	movw	r28, r20
     c78:	f5 cf       	rjmp	.-22     	; 0xc64 <free+0x44>
     c7a:	d3 83       	std	Z+3, r29	; 0x03
     c7c:	c2 83       	std	Z+2, r28	; 0x02
     c7e:	40 81       	ld	r20, Z
     c80:	51 81       	ldd	r21, Z+1	; 0x01
     c82:	84 0f       	add	r24, r20
     c84:	95 1f       	adc	r25, r21
     c86:	c8 17       	cp	r28, r24
     c88:	d9 07       	cpc	r29, r25
     c8a:	59 f4       	brne	.+22     	; 0xca2 <free+0x82>
     c8c:	88 81       	ld	r24, Y
     c8e:	99 81       	ldd	r25, Y+1	; 0x01
     c90:	84 0f       	add	r24, r20
     c92:	95 1f       	adc	r25, r21
     c94:	02 96       	adiw	r24, 0x02	; 2
     c96:	91 83       	std	Z+1, r25	; 0x01
     c98:	80 83       	st	Z, r24
     c9a:	8a 81       	ldd	r24, Y+2	; 0x02
     c9c:	9b 81       	ldd	r25, Y+3	; 0x03
     c9e:	93 83       	std	Z+3, r25	; 0x03
     ca0:	82 83       	std	Z+2, r24	; 0x02
     ca2:	21 15       	cp	r18, r1
     ca4:	31 05       	cpc	r19, r1
     ca6:	29 f4       	brne	.+10     	; 0xcb2 <free+0x92>
     ca8:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__flp+0x1>
     cac:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__flp>
     cb0:	3d c0       	rjmp	.+122    	; 0xd2c <free+0x10c>
     cb2:	e9 01       	movw	r28, r18
     cb4:	fb 83       	std	Y+3, r31	; 0x03
     cb6:	ea 83       	std	Y+2, r30	; 0x02
     cb8:	49 91       	ld	r20, Y+
     cba:	59 91       	ld	r21, Y+
     cbc:	c4 0f       	add	r28, r20
     cbe:	d5 1f       	adc	r29, r21
     cc0:	ec 17       	cp	r30, r28
     cc2:	fd 07       	cpc	r31, r29
     cc4:	61 f4       	brne	.+24     	; 0xcde <free+0xbe>
     cc6:	80 81       	ld	r24, Z
     cc8:	91 81       	ldd	r25, Z+1	; 0x01
     cca:	84 0f       	add	r24, r20
     ccc:	95 1f       	adc	r25, r21
     cce:	02 96       	adiw	r24, 0x02	; 2
     cd0:	e9 01       	movw	r28, r18
     cd2:	99 83       	std	Y+1, r25	; 0x01
     cd4:	88 83       	st	Y, r24
     cd6:	82 81       	ldd	r24, Z+2	; 0x02
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	9b 83       	std	Y+3, r25	; 0x03
     cdc:	8a 83       	std	Y+2, r24	; 0x02
     cde:	e0 e0       	ldi	r30, 0x00	; 0
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	12 96       	adiw	r26, 0x02	; 2
     ce4:	8d 91       	ld	r24, X+
     ce6:	9c 91       	ld	r25, X
     ce8:	13 97       	sbiw	r26, 0x03	; 3
     cea:	00 97       	sbiw	r24, 0x00	; 0
     cec:	19 f0       	breq	.+6      	; 0xcf4 <free+0xd4>
     cee:	fd 01       	movw	r30, r26
     cf0:	dc 01       	movw	r26, r24
     cf2:	f7 cf       	rjmp	.-18     	; 0xce2 <free+0xc2>
     cf4:	8d 91       	ld	r24, X+
     cf6:	9c 91       	ld	r25, X
     cf8:	11 97       	sbiw	r26, 0x01	; 1
     cfa:	9d 01       	movw	r18, r26
     cfc:	2e 5f       	subi	r18, 0xFE	; 254
     cfe:	3f 4f       	sbci	r19, 0xFF	; 255
     d00:	82 0f       	add	r24, r18
     d02:	93 1f       	adc	r25, r19
     d04:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__data_end>
     d08:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__data_end+0x1>
     d0c:	28 17       	cp	r18, r24
     d0e:	39 07       	cpc	r19, r25
     d10:	69 f4       	brne	.+26     	; 0xd2c <free+0x10c>
     d12:	30 97       	sbiw	r30, 0x00	; 0
     d14:	29 f4       	brne	.+10     	; 0xd20 <free+0x100>
     d16:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <__flp+0x1>
     d1a:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <__flp>
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <free+0x104>
     d20:	13 82       	std	Z+3, r1	; 0x03
     d22:	12 82       	std	Z+2, r1	; 0x02
     d24:	b0 93 03 02 	sts	0x0203, r27	; 0x800203 <__data_end+0x1>
     d28:	a0 93 02 02 	sts	0x0202, r26	; 0x800202 <__data_end>
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <strdup>:
     d32:	0f 93       	push	r16
     d34:	1f 93       	push	r17
     d36:	cf 93       	push	r28
     d38:	df 93       	push	r29
     d3a:	8c 01       	movw	r16, r24
     d3c:	fc 01       	movw	r30, r24
     d3e:	01 90       	ld	r0, Z+
     d40:	00 20       	and	r0, r0
     d42:	e9 f7       	brne	.-6      	; 0xd3e <strdup+0xc>
     d44:	cf 01       	movw	r24, r30
     d46:	80 1b       	sub	r24, r16
     d48:	91 0b       	sbc	r25, r17
     d4a:	0e 94 78 05 	call	0xaf0	; 0xaf0 <malloc>
     d4e:	ec 01       	movw	r28, r24
     d50:	00 97       	sbiw	r24, 0x00	; 0
     d52:	19 f0       	breq	.+6      	; 0xd5a <strdup+0x28>
     d54:	b8 01       	movw	r22, r16
     d56:	0e 94 b3 06 	call	0xd66	; 0xd66 <strcpy>
     d5a:	ce 01       	movw	r24, r28
     d5c:	df 91       	pop	r29
     d5e:	cf 91       	pop	r28
     d60:	1f 91       	pop	r17
     d62:	0f 91       	pop	r16
     d64:	08 95       	ret

00000d66 <strcpy>:
     d66:	fb 01       	movw	r30, r22
     d68:	dc 01       	movw	r26, r24
     d6a:	01 90       	ld	r0, Z+
     d6c:	0d 92       	st	X+, r0
     d6e:	00 20       	and	r0, r0
     d70:	e1 f7       	brne	.-8      	; 0xd6a <strcpy+0x4>
     d72:	08 95       	ret

00000d74 <printf>:
     d74:	a0 e0       	ldi	r26, 0x00	; 0
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	e0 ec       	ldi	r30, 0xC0	; 192
     d7a:	f6 e0       	ldi	r31, 0x06	; 6
     d7c:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <__prologue_saves__+0x20>
     d80:	ae 01       	movw	r20, r28
     d82:	4b 5f       	subi	r20, 0xFB	; 251
     d84:	5f 4f       	sbci	r21, 0xFF	; 255
     d86:	fa 01       	movw	r30, r20
     d88:	61 91       	ld	r22, Z+
     d8a:	71 91       	ld	r23, Z+
     d8c:	af 01       	movw	r20, r30
     d8e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <__iob+0x2>
     d92:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <__iob+0x3>
     d96:	0e 94 d0 06 	call	0xda0	; 0xda0 <vfprintf>
     d9a:	e2 e0       	ldi	r30, 0x02	; 2
     d9c:	0c 94 8d 09 	jmp	0x131a	; 0x131a <__epilogue_restores__+0x20>

00000da0 <vfprintf>:
     da0:	ab e0       	ldi	r26, 0x0B	; 11
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	e6 ed       	ldi	r30, 0xD6	; 214
     da6:	f6 e0       	ldi	r31, 0x06	; 6
     da8:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__prologue_saves__>
     dac:	6c 01       	movw	r12, r24
     dae:	7b 01       	movw	r14, r22
     db0:	8a 01       	movw	r16, r20
     db2:	fc 01       	movw	r30, r24
     db4:	17 82       	std	Z+7, r1	; 0x07
     db6:	16 82       	std	Z+6, r1	; 0x06
     db8:	83 81       	ldd	r24, Z+3	; 0x03
     dba:	81 ff       	sbrs	r24, 1
     dbc:	cc c1       	rjmp	.+920    	; 0x1156 <vfprintf+0x3b6>
     dbe:	ce 01       	movw	r24, r28
     dc0:	01 96       	adiw	r24, 0x01	; 1
     dc2:	3c 01       	movw	r6, r24
     dc4:	f6 01       	movw	r30, r12
     dc6:	93 81       	ldd	r25, Z+3	; 0x03
     dc8:	f7 01       	movw	r30, r14
     dca:	93 fd       	sbrc	r25, 3
     dcc:	85 91       	lpm	r24, Z+
     dce:	93 ff       	sbrs	r25, 3
     dd0:	81 91       	ld	r24, Z+
     dd2:	7f 01       	movw	r14, r30
     dd4:	88 23       	and	r24, r24
     dd6:	09 f4       	brne	.+2      	; 0xdda <vfprintf+0x3a>
     dd8:	ba c1       	rjmp	.+884    	; 0x114e <vfprintf+0x3ae>
     dda:	85 32       	cpi	r24, 0x25	; 37
     ddc:	39 f4       	brne	.+14     	; 0xdec <vfprintf+0x4c>
     dde:	93 fd       	sbrc	r25, 3
     de0:	85 91       	lpm	r24, Z+
     de2:	93 ff       	sbrs	r25, 3
     de4:	81 91       	ld	r24, Z+
     de6:	7f 01       	movw	r14, r30
     de8:	85 32       	cpi	r24, 0x25	; 37
     dea:	29 f4       	brne	.+10     	; 0xdf6 <vfprintf+0x56>
     dec:	b6 01       	movw	r22, r12
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
     df4:	e7 cf       	rjmp	.-50     	; 0xdc4 <vfprintf+0x24>
     df6:	91 2c       	mov	r9, r1
     df8:	21 2c       	mov	r2, r1
     dfa:	31 2c       	mov	r3, r1
     dfc:	ff e1       	ldi	r31, 0x1F	; 31
     dfe:	f3 15       	cp	r31, r3
     e00:	d8 f0       	brcs	.+54     	; 0xe38 <vfprintf+0x98>
     e02:	8b 32       	cpi	r24, 0x2B	; 43
     e04:	79 f0       	breq	.+30     	; 0xe24 <vfprintf+0x84>
     e06:	38 f4       	brcc	.+14     	; 0xe16 <vfprintf+0x76>
     e08:	80 32       	cpi	r24, 0x20	; 32
     e0a:	79 f0       	breq	.+30     	; 0xe2a <vfprintf+0x8a>
     e0c:	83 32       	cpi	r24, 0x23	; 35
     e0e:	a1 f4       	brne	.+40     	; 0xe38 <vfprintf+0x98>
     e10:	23 2d       	mov	r18, r3
     e12:	20 61       	ori	r18, 0x10	; 16
     e14:	1d c0       	rjmp	.+58     	; 0xe50 <vfprintf+0xb0>
     e16:	8d 32       	cpi	r24, 0x2D	; 45
     e18:	61 f0       	breq	.+24     	; 0xe32 <vfprintf+0x92>
     e1a:	80 33       	cpi	r24, 0x30	; 48
     e1c:	69 f4       	brne	.+26     	; 0xe38 <vfprintf+0x98>
     e1e:	23 2d       	mov	r18, r3
     e20:	21 60       	ori	r18, 0x01	; 1
     e22:	16 c0       	rjmp	.+44     	; 0xe50 <vfprintf+0xb0>
     e24:	83 2d       	mov	r24, r3
     e26:	82 60       	ori	r24, 0x02	; 2
     e28:	38 2e       	mov	r3, r24
     e2a:	e3 2d       	mov	r30, r3
     e2c:	e4 60       	ori	r30, 0x04	; 4
     e2e:	3e 2e       	mov	r3, r30
     e30:	2a c0       	rjmp	.+84     	; 0xe86 <vfprintf+0xe6>
     e32:	f3 2d       	mov	r31, r3
     e34:	f8 60       	ori	r31, 0x08	; 8
     e36:	1d c0       	rjmp	.+58     	; 0xe72 <vfprintf+0xd2>
     e38:	37 fc       	sbrc	r3, 7
     e3a:	2d c0       	rjmp	.+90     	; 0xe96 <vfprintf+0xf6>
     e3c:	20 ed       	ldi	r18, 0xD0	; 208
     e3e:	28 0f       	add	r18, r24
     e40:	2a 30       	cpi	r18, 0x0A	; 10
     e42:	40 f0       	brcs	.+16     	; 0xe54 <vfprintf+0xb4>
     e44:	8e 32       	cpi	r24, 0x2E	; 46
     e46:	b9 f4       	brne	.+46     	; 0xe76 <vfprintf+0xd6>
     e48:	36 fc       	sbrc	r3, 6
     e4a:	81 c1       	rjmp	.+770    	; 0x114e <vfprintf+0x3ae>
     e4c:	23 2d       	mov	r18, r3
     e4e:	20 64       	ori	r18, 0x40	; 64
     e50:	32 2e       	mov	r3, r18
     e52:	19 c0       	rjmp	.+50     	; 0xe86 <vfprintf+0xe6>
     e54:	36 fe       	sbrs	r3, 6
     e56:	06 c0       	rjmp	.+12     	; 0xe64 <vfprintf+0xc4>
     e58:	8a e0       	ldi	r24, 0x0A	; 10
     e5a:	98 9e       	mul	r9, r24
     e5c:	20 0d       	add	r18, r0
     e5e:	11 24       	eor	r1, r1
     e60:	92 2e       	mov	r9, r18
     e62:	11 c0       	rjmp	.+34     	; 0xe86 <vfprintf+0xe6>
     e64:	ea e0       	ldi	r30, 0x0A	; 10
     e66:	2e 9e       	mul	r2, r30
     e68:	20 0d       	add	r18, r0
     e6a:	11 24       	eor	r1, r1
     e6c:	22 2e       	mov	r2, r18
     e6e:	f3 2d       	mov	r31, r3
     e70:	f0 62       	ori	r31, 0x20	; 32
     e72:	3f 2e       	mov	r3, r31
     e74:	08 c0       	rjmp	.+16     	; 0xe86 <vfprintf+0xe6>
     e76:	8c 36       	cpi	r24, 0x6C	; 108
     e78:	21 f4       	brne	.+8      	; 0xe82 <vfprintf+0xe2>
     e7a:	83 2d       	mov	r24, r3
     e7c:	80 68       	ori	r24, 0x80	; 128
     e7e:	38 2e       	mov	r3, r24
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <vfprintf+0xe6>
     e82:	88 36       	cpi	r24, 0x68	; 104
     e84:	41 f4       	brne	.+16     	; 0xe96 <vfprintf+0xf6>
     e86:	f7 01       	movw	r30, r14
     e88:	93 fd       	sbrc	r25, 3
     e8a:	85 91       	lpm	r24, Z+
     e8c:	93 ff       	sbrs	r25, 3
     e8e:	81 91       	ld	r24, Z+
     e90:	7f 01       	movw	r14, r30
     e92:	81 11       	cpse	r24, r1
     e94:	b3 cf       	rjmp	.-154    	; 0xdfc <vfprintf+0x5c>
     e96:	98 2f       	mov	r25, r24
     e98:	9f 7d       	andi	r25, 0xDF	; 223
     e9a:	95 54       	subi	r25, 0x45	; 69
     e9c:	93 30       	cpi	r25, 0x03	; 3
     e9e:	28 f4       	brcc	.+10     	; 0xeaa <vfprintf+0x10a>
     ea0:	0c 5f       	subi	r16, 0xFC	; 252
     ea2:	1f 4f       	sbci	r17, 0xFF	; 255
     ea4:	9f e3       	ldi	r25, 0x3F	; 63
     ea6:	99 83       	std	Y+1, r25	; 0x01
     ea8:	0d c0       	rjmp	.+26     	; 0xec4 <vfprintf+0x124>
     eaa:	83 36       	cpi	r24, 0x63	; 99
     eac:	31 f0       	breq	.+12     	; 0xeba <vfprintf+0x11a>
     eae:	83 37       	cpi	r24, 0x73	; 115
     eb0:	71 f0       	breq	.+28     	; 0xece <vfprintf+0x12e>
     eb2:	83 35       	cpi	r24, 0x53	; 83
     eb4:	09 f0       	breq	.+2      	; 0xeb8 <vfprintf+0x118>
     eb6:	59 c0       	rjmp	.+178    	; 0xf6a <vfprintf+0x1ca>
     eb8:	21 c0       	rjmp	.+66     	; 0xefc <vfprintf+0x15c>
     eba:	f8 01       	movw	r30, r16
     ebc:	80 81       	ld	r24, Z
     ebe:	89 83       	std	Y+1, r24	; 0x01
     ec0:	0e 5f       	subi	r16, 0xFE	; 254
     ec2:	1f 4f       	sbci	r17, 0xFF	; 255
     ec4:	88 24       	eor	r8, r8
     ec6:	83 94       	inc	r8
     ec8:	91 2c       	mov	r9, r1
     eca:	53 01       	movw	r10, r6
     ecc:	13 c0       	rjmp	.+38     	; 0xef4 <vfprintf+0x154>
     ece:	28 01       	movw	r4, r16
     ed0:	f2 e0       	ldi	r31, 0x02	; 2
     ed2:	4f 0e       	add	r4, r31
     ed4:	51 1c       	adc	r5, r1
     ed6:	f8 01       	movw	r30, r16
     ed8:	a0 80       	ld	r10, Z
     eda:	b1 80       	ldd	r11, Z+1	; 0x01
     edc:	36 fe       	sbrs	r3, 6
     ede:	03 c0       	rjmp	.+6      	; 0xee6 <vfprintf+0x146>
     ee0:	69 2d       	mov	r22, r9
     ee2:	70 e0       	ldi	r23, 0x00	; 0
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x14a>
     ee6:	6f ef       	ldi	r22, 0xFF	; 255
     ee8:	7f ef       	ldi	r23, 0xFF	; 255
     eea:	c5 01       	movw	r24, r10
     eec:	0e 94 bc 08 	call	0x1178	; 0x1178 <strnlen>
     ef0:	4c 01       	movw	r8, r24
     ef2:	82 01       	movw	r16, r4
     ef4:	f3 2d       	mov	r31, r3
     ef6:	ff 77       	andi	r31, 0x7F	; 127
     ef8:	3f 2e       	mov	r3, r31
     efa:	16 c0       	rjmp	.+44     	; 0xf28 <vfprintf+0x188>
     efc:	28 01       	movw	r4, r16
     efe:	22 e0       	ldi	r18, 0x02	; 2
     f00:	42 0e       	add	r4, r18
     f02:	51 1c       	adc	r5, r1
     f04:	f8 01       	movw	r30, r16
     f06:	a0 80       	ld	r10, Z
     f08:	b1 80       	ldd	r11, Z+1	; 0x01
     f0a:	36 fe       	sbrs	r3, 6
     f0c:	03 c0       	rjmp	.+6      	; 0xf14 <vfprintf+0x174>
     f0e:	69 2d       	mov	r22, r9
     f10:	70 e0       	ldi	r23, 0x00	; 0
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <vfprintf+0x178>
     f14:	6f ef       	ldi	r22, 0xFF	; 255
     f16:	7f ef       	ldi	r23, 0xFF	; 255
     f18:	c5 01       	movw	r24, r10
     f1a:	0e 94 b1 08 	call	0x1162	; 0x1162 <strnlen_P>
     f1e:	4c 01       	movw	r8, r24
     f20:	f3 2d       	mov	r31, r3
     f22:	f0 68       	ori	r31, 0x80	; 128
     f24:	3f 2e       	mov	r3, r31
     f26:	82 01       	movw	r16, r4
     f28:	33 fc       	sbrc	r3, 3
     f2a:	1b c0       	rjmp	.+54     	; 0xf62 <vfprintf+0x1c2>
     f2c:	82 2d       	mov	r24, r2
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	88 16       	cp	r8, r24
     f32:	99 06       	cpc	r9, r25
     f34:	b0 f4       	brcc	.+44     	; 0xf62 <vfprintf+0x1c2>
     f36:	b6 01       	movw	r22, r12
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
     f40:	2a 94       	dec	r2
     f42:	f4 cf       	rjmp	.-24     	; 0xf2c <vfprintf+0x18c>
     f44:	f5 01       	movw	r30, r10
     f46:	37 fc       	sbrc	r3, 7
     f48:	85 91       	lpm	r24, Z+
     f4a:	37 fe       	sbrs	r3, 7
     f4c:	81 91       	ld	r24, Z+
     f4e:	5f 01       	movw	r10, r30
     f50:	b6 01       	movw	r22, r12
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
     f58:	21 10       	cpse	r2, r1
     f5a:	2a 94       	dec	r2
     f5c:	21 e0       	ldi	r18, 0x01	; 1
     f5e:	82 1a       	sub	r8, r18
     f60:	91 08       	sbc	r9, r1
     f62:	81 14       	cp	r8, r1
     f64:	91 04       	cpc	r9, r1
     f66:	71 f7       	brne	.-36     	; 0xf44 <vfprintf+0x1a4>
     f68:	e8 c0       	rjmp	.+464    	; 0x113a <vfprintf+0x39a>
     f6a:	84 36       	cpi	r24, 0x64	; 100
     f6c:	11 f0       	breq	.+4      	; 0xf72 <vfprintf+0x1d2>
     f6e:	89 36       	cpi	r24, 0x69	; 105
     f70:	41 f5       	brne	.+80     	; 0xfc2 <vfprintf+0x222>
     f72:	f8 01       	movw	r30, r16
     f74:	37 fe       	sbrs	r3, 7
     f76:	07 c0       	rjmp	.+14     	; 0xf86 <vfprintf+0x1e6>
     f78:	60 81       	ld	r22, Z
     f7a:	71 81       	ldd	r23, Z+1	; 0x01
     f7c:	82 81       	ldd	r24, Z+2	; 0x02
     f7e:	93 81       	ldd	r25, Z+3	; 0x03
     f80:	0c 5f       	subi	r16, 0xFC	; 252
     f82:	1f 4f       	sbci	r17, 0xFF	; 255
     f84:	08 c0       	rjmp	.+16     	; 0xf96 <vfprintf+0x1f6>
     f86:	60 81       	ld	r22, Z
     f88:	71 81       	ldd	r23, Z+1	; 0x01
     f8a:	07 2e       	mov	r0, r23
     f8c:	00 0c       	add	r0, r0
     f8e:	88 0b       	sbc	r24, r24
     f90:	99 0b       	sbc	r25, r25
     f92:	0e 5f       	subi	r16, 0xFE	; 254
     f94:	1f 4f       	sbci	r17, 0xFF	; 255
     f96:	f3 2d       	mov	r31, r3
     f98:	ff 76       	andi	r31, 0x6F	; 111
     f9a:	3f 2e       	mov	r3, r31
     f9c:	97 ff       	sbrs	r25, 7
     f9e:	09 c0       	rjmp	.+18     	; 0xfb2 <vfprintf+0x212>
     fa0:	90 95       	com	r25
     fa2:	80 95       	com	r24
     fa4:	70 95       	com	r23
     fa6:	61 95       	neg	r22
     fa8:	7f 4f       	sbci	r23, 0xFF	; 255
     faa:	8f 4f       	sbci	r24, 0xFF	; 255
     fac:	9f 4f       	sbci	r25, 0xFF	; 255
     fae:	f0 68       	ori	r31, 0x80	; 128
     fb0:	3f 2e       	mov	r3, r31
     fb2:	2a e0       	ldi	r18, 0x0A	; 10
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	a3 01       	movw	r20, r6
     fb8:	0e 94 03 09 	call	0x1206	; 0x1206 <__ultoa_invert>
     fbc:	88 2e       	mov	r8, r24
     fbe:	86 18       	sub	r8, r6
     fc0:	45 c0       	rjmp	.+138    	; 0x104c <vfprintf+0x2ac>
     fc2:	85 37       	cpi	r24, 0x75	; 117
     fc4:	31 f4       	brne	.+12     	; 0xfd2 <vfprintf+0x232>
     fc6:	23 2d       	mov	r18, r3
     fc8:	2f 7e       	andi	r18, 0xEF	; 239
     fca:	b2 2e       	mov	r11, r18
     fcc:	2a e0       	ldi	r18, 0x0A	; 10
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	25 c0       	rjmp	.+74     	; 0x101c <vfprintf+0x27c>
     fd2:	93 2d       	mov	r25, r3
     fd4:	99 7f       	andi	r25, 0xF9	; 249
     fd6:	b9 2e       	mov	r11, r25
     fd8:	8f 36       	cpi	r24, 0x6F	; 111
     fda:	c1 f0       	breq	.+48     	; 0x100c <vfprintf+0x26c>
     fdc:	18 f4       	brcc	.+6      	; 0xfe4 <vfprintf+0x244>
     fde:	88 35       	cpi	r24, 0x58	; 88
     fe0:	79 f0       	breq	.+30     	; 0x1000 <vfprintf+0x260>
     fe2:	b5 c0       	rjmp	.+362    	; 0x114e <vfprintf+0x3ae>
     fe4:	80 37       	cpi	r24, 0x70	; 112
     fe6:	19 f0       	breq	.+6      	; 0xfee <vfprintf+0x24e>
     fe8:	88 37       	cpi	r24, 0x78	; 120
     fea:	21 f0       	breq	.+8      	; 0xff4 <vfprintf+0x254>
     fec:	b0 c0       	rjmp	.+352    	; 0x114e <vfprintf+0x3ae>
     fee:	e9 2f       	mov	r30, r25
     ff0:	e0 61       	ori	r30, 0x10	; 16
     ff2:	be 2e       	mov	r11, r30
     ff4:	b4 fe       	sbrs	r11, 4
     ff6:	0d c0       	rjmp	.+26     	; 0x1012 <vfprintf+0x272>
     ff8:	fb 2d       	mov	r31, r11
     ffa:	f4 60       	ori	r31, 0x04	; 4
     ffc:	bf 2e       	mov	r11, r31
     ffe:	09 c0       	rjmp	.+18     	; 0x1012 <vfprintf+0x272>
    1000:	34 fe       	sbrs	r3, 4
    1002:	0a c0       	rjmp	.+20     	; 0x1018 <vfprintf+0x278>
    1004:	29 2f       	mov	r18, r25
    1006:	26 60       	ori	r18, 0x06	; 6
    1008:	b2 2e       	mov	r11, r18
    100a:	06 c0       	rjmp	.+12     	; 0x1018 <vfprintf+0x278>
    100c:	28 e0       	ldi	r18, 0x08	; 8
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	05 c0       	rjmp	.+10     	; 0x101c <vfprintf+0x27c>
    1012:	20 e1       	ldi	r18, 0x10	; 16
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	02 c0       	rjmp	.+4      	; 0x101c <vfprintf+0x27c>
    1018:	20 e1       	ldi	r18, 0x10	; 16
    101a:	32 e0       	ldi	r19, 0x02	; 2
    101c:	f8 01       	movw	r30, r16
    101e:	b7 fe       	sbrs	r11, 7
    1020:	07 c0       	rjmp	.+14     	; 0x1030 <vfprintf+0x290>
    1022:	60 81       	ld	r22, Z
    1024:	71 81       	ldd	r23, Z+1	; 0x01
    1026:	82 81       	ldd	r24, Z+2	; 0x02
    1028:	93 81       	ldd	r25, Z+3	; 0x03
    102a:	0c 5f       	subi	r16, 0xFC	; 252
    102c:	1f 4f       	sbci	r17, 0xFF	; 255
    102e:	06 c0       	rjmp	.+12     	; 0x103c <vfprintf+0x29c>
    1030:	60 81       	ld	r22, Z
    1032:	71 81       	ldd	r23, Z+1	; 0x01
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 5f       	subi	r16, 0xFE	; 254
    103a:	1f 4f       	sbci	r17, 0xFF	; 255
    103c:	a3 01       	movw	r20, r6
    103e:	0e 94 03 09 	call	0x1206	; 0x1206 <__ultoa_invert>
    1042:	88 2e       	mov	r8, r24
    1044:	86 18       	sub	r8, r6
    1046:	fb 2d       	mov	r31, r11
    1048:	ff 77       	andi	r31, 0x7F	; 127
    104a:	3f 2e       	mov	r3, r31
    104c:	36 fe       	sbrs	r3, 6
    104e:	0d c0       	rjmp	.+26     	; 0x106a <vfprintf+0x2ca>
    1050:	23 2d       	mov	r18, r3
    1052:	2e 7f       	andi	r18, 0xFE	; 254
    1054:	a2 2e       	mov	r10, r18
    1056:	89 14       	cp	r8, r9
    1058:	58 f4       	brcc	.+22     	; 0x1070 <vfprintf+0x2d0>
    105a:	34 fe       	sbrs	r3, 4
    105c:	0b c0       	rjmp	.+22     	; 0x1074 <vfprintf+0x2d4>
    105e:	32 fc       	sbrc	r3, 2
    1060:	09 c0       	rjmp	.+18     	; 0x1074 <vfprintf+0x2d4>
    1062:	83 2d       	mov	r24, r3
    1064:	8e 7e       	andi	r24, 0xEE	; 238
    1066:	a8 2e       	mov	r10, r24
    1068:	05 c0       	rjmp	.+10     	; 0x1074 <vfprintf+0x2d4>
    106a:	b8 2c       	mov	r11, r8
    106c:	a3 2c       	mov	r10, r3
    106e:	03 c0       	rjmp	.+6      	; 0x1076 <vfprintf+0x2d6>
    1070:	b8 2c       	mov	r11, r8
    1072:	01 c0       	rjmp	.+2      	; 0x1076 <vfprintf+0x2d6>
    1074:	b9 2c       	mov	r11, r9
    1076:	a4 fe       	sbrs	r10, 4
    1078:	0f c0       	rjmp	.+30     	; 0x1098 <vfprintf+0x2f8>
    107a:	fe 01       	movw	r30, r28
    107c:	e8 0d       	add	r30, r8
    107e:	f1 1d       	adc	r31, r1
    1080:	80 81       	ld	r24, Z
    1082:	80 33       	cpi	r24, 0x30	; 48
    1084:	21 f4       	brne	.+8      	; 0x108e <vfprintf+0x2ee>
    1086:	9a 2d       	mov	r25, r10
    1088:	99 7e       	andi	r25, 0xE9	; 233
    108a:	a9 2e       	mov	r10, r25
    108c:	09 c0       	rjmp	.+18     	; 0x10a0 <vfprintf+0x300>
    108e:	a2 fe       	sbrs	r10, 2
    1090:	06 c0       	rjmp	.+12     	; 0x109e <vfprintf+0x2fe>
    1092:	b3 94       	inc	r11
    1094:	b3 94       	inc	r11
    1096:	04 c0       	rjmp	.+8      	; 0x10a0 <vfprintf+0x300>
    1098:	8a 2d       	mov	r24, r10
    109a:	86 78       	andi	r24, 0x86	; 134
    109c:	09 f0       	breq	.+2      	; 0x10a0 <vfprintf+0x300>
    109e:	b3 94       	inc	r11
    10a0:	a3 fc       	sbrc	r10, 3
    10a2:	11 c0       	rjmp	.+34     	; 0x10c6 <vfprintf+0x326>
    10a4:	a0 fe       	sbrs	r10, 0
    10a6:	06 c0       	rjmp	.+12     	; 0x10b4 <vfprintf+0x314>
    10a8:	b2 14       	cp	r11, r2
    10aa:	88 f4       	brcc	.+34     	; 0x10ce <vfprintf+0x32e>
    10ac:	28 0c       	add	r2, r8
    10ae:	92 2c       	mov	r9, r2
    10b0:	9b 18       	sub	r9, r11
    10b2:	0e c0       	rjmp	.+28     	; 0x10d0 <vfprintf+0x330>
    10b4:	b2 14       	cp	r11, r2
    10b6:	60 f4       	brcc	.+24     	; 0x10d0 <vfprintf+0x330>
    10b8:	b6 01       	movw	r22, r12
    10ba:	80 e2       	ldi	r24, 0x20	; 32
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    10c2:	b3 94       	inc	r11
    10c4:	f7 cf       	rjmp	.-18     	; 0x10b4 <vfprintf+0x314>
    10c6:	b2 14       	cp	r11, r2
    10c8:	18 f4       	brcc	.+6      	; 0x10d0 <vfprintf+0x330>
    10ca:	2b 18       	sub	r2, r11
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <vfprintf+0x332>
    10ce:	98 2c       	mov	r9, r8
    10d0:	21 2c       	mov	r2, r1
    10d2:	a4 fe       	sbrs	r10, 4
    10d4:	10 c0       	rjmp	.+32     	; 0x10f6 <vfprintf+0x356>
    10d6:	b6 01       	movw	r22, r12
    10d8:	80 e3       	ldi	r24, 0x30	; 48
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    10e0:	a2 fe       	sbrs	r10, 2
    10e2:	17 c0       	rjmp	.+46     	; 0x1112 <vfprintf+0x372>
    10e4:	a1 fc       	sbrc	r10, 1
    10e6:	03 c0       	rjmp	.+6      	; 0x10ee <vfprintf+0x34e>
    10e8:	88 e7       	ldi	r24, 0x78	; 120
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <vfprintf+0x352>
    10ee:	88 e5       	ldi	r24, 0x58	; 88
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	b6 01       	movw	r22, r12
    10f4:	0c c0       	rjmp	.+24     	; 0x110e <vfprintf+0x36e>
    10f6:	8a 2d       	mov	r24, r10
    10f8:	86 78       	andi	r24, 0x86	; 134
    10fa:	59 f0       	breq	.+22     	; 0x1112 <vfprintf+0x372>
    10fc:	a1 fe       	sbrs	r10, 1
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <vfprintf+0x364>
    1100:	8b e2       	ldi	r24, 0x2B	; 43
    1102:	01 c0       	rjmp	.+2      	; 0x1106 <vfprintf+0x366>
    1104:	80 e2       	ldi	r24, 0x20	; 32
    1106:	a7 fc       	sbrc	r10, 7
    1108:	8d e2       	ldi	r24, 0x2D	; 45
    110a:	b6 01       	movw	r22, r12
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    1112:	89 14       	cp	r8, r9
    1114:	38 f4       	brcc	.+14     	; 0x1124 <vfprintf+0x384>
    1116:	b6 01       	movw	r22, r12
    1118:	80 e3       	ldi	r24, 0x30	; 48
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    1120:	9a 94       	dec	r9
    1122:	f7 cf       	rjmp	.-18     	; 0x1112 <vfprintf+0x372>
    1124:	8a 94       	dec	r8
    1126:	f3 01       	movw	r30, r6
    1128:	e8 0d       	add	r30, r8
    112a:	f1 1d       	adc	r31, r1
    112c:	80 81       	ld	r24, Z
    112e:	b6 01       	movw	r22, r12
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    1136:	81 10       	cpse	r8, r1
    1138:	f5 cf       	rjmp	.-22     	; 0x1124 <vfprintf+0x384>
    113a:	22 20       	and	r2, r2
    113c:	09 f4       	brne	.+2      	; 0x1140 <vfprintf+0x3a0>
    113e:	42 ce       	rjmp	.-892    	; 0xdc4 <vfprintf+0x24>
    1140:	b6 01       	movw	r22, r12
    1142:	80 e2       	ldi	r24, 0x20	; 32
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	0e 94 c7 08 	call	0x118e	; 0x118e <fputc>
    114a:	2a 94       	dec	r2
    114c:	f6 cf       	rjmp	.-20     	; 0x113a <vfprintf+0x39a>
    114e:	f6 01       	movw	r30, r12
    1150:	86 81       	ldd	r24, Z+6	; 0x06
    1152:	97 81       	ldd	r25, Z+7	; 0x07
    1154:	02 c0       	rjmp	.+4      	; 0x115a <vfprintf+0x3ba>
    1156:	8f ef       	ldi	r24, 0xFF	; 255
    1158:	9f ef       	ldi	r25, 0xFF	; 255
    115a:	2b 96       	adiw	r28, 0x0b	; 11
    115c:	e2 e1       	ldi	r30, 0x12	; 18
    115e:	0c 94 7d 09 	jmp	0x12fa	; 0x12fa <__epilogue_restores__>

00001162 <strnlen_P>:
    1162:	fc 01       	movw	r30, r24
    1164:	05 90       	lpm	r0, Z+
    1166:	61 50       	subi	r22, 0x01	; 1
    1168:	70 40       	sbci	r23, 0x00	; 0
    116a:	01 10       	cpse	r0, r1
    116c:	d8 f7       	brcc	.-10     	; 0x1164 <strnlen_P+0x2>
    116e:	80 95       	com	r24
    1170:	90 95       	com	r25
    1172:	8e 0f       	add	r24, r30
    1174:	9f 1f       	adc	r25, r31
    1176:	08 95       	ret

00001178 <strnlen>:
    1178:	fc 01       	movw	r30, r24
    117a:	61 50       	subi	r22, 0x01	; 1
    117c:	70 40       	sbci	r23, 0x00	; 0
    117e:	01 90       	ld	r0, Z+
    1180:	01 10       	cpse	r0, r1
    1182:	d8 f7       	brcc	.-10     	; 0x117a <strnlen+0x2>
    1184:	80 95       	com	r24
    1186:	90 95       	com	r25
    1188:	8e 0f       	add	r24, r30
    118a:	9f 1f       	adc	r25, r31
    118c:	08 95       	ret

0000118e <fputc>:
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	fb 01       	movw	r30, r22
    1198:	23 81       	ldd	r18, Z+3	; 0x03
    119a:	21 fd       	sbrc	r18, 1
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <fputc+0x16>
    119e:	8f ef       	ldi	r24, 0xFF	; 255
    11a0:	9f ef       	ldi	r25, 0xFF	; 255
    11a2:	2c c0       	rjmp	.+88     	; 0x11fc <fputc+0x6e>
    11a4:	22 ff       	sbrs	r18, 2
    11a6:	16 c0       	rjmp	.+44     	; 0x11d4 <fputc+0x46>
    11a8:	46 81       	ldd	r20, Z+6	; 0x06
    11aa:	57 81       	ldd	r21, Z+7	; 0x07
    11ac:	24 81       	ldd	r18, Z+4	; 0x04
    11ae:	35 81       	ldd	r19, Z+5	; 0x05
    11b0:	42 17       	cp	r20, r18
    11b2:	53 07       	cpc	r21, r19
    11b4:	44 f4       	brge	.+16     	; 0x11c6 <fputc+0x38>
    11b6:	a0 81       	ld	r26, Z
    11b8:	b1 81       	ldd	r27, Z+1	; 0x01
    11ba:	9d 01       	movw	r18, r26
    11bc:	2f 5f       	subi	r18, 0xFF	; 255
    11be:	3f 4f       	sbci	r19, 0xFF	; 255
    11c0:	31 83       	std	Z+1, r19	; 0x01
    11c2:	20 83       	st	Z, r18
    11c4:	8c 93       	st	X, r24
    11c6:	26 81       	ldd	r18, Z+6	; 0x06
    11c8:	37 81       	ldd	r19, Z+7	; 0x07
    11ca:	2f 5f       	subi	r18, 0xFF	; 255
    11cc:	3f 4f       	sbci	r19, 0xFF	; 255
    11ce:	37 83       	std	Z+7, r19	; 0x07
    11d0:	26 83       	std	Z+6, r18	; 0x06
    11d2:	14 c0       	rjmp	.+40     	; 0x11fc <fputc+0x6e>
    11d4:	8b 01       	movw	r16, r22
    11d6:	ec 01       	movw	r28, r24
    11d8:	fb 01       	movw	r30, r22
    11da:	00 84       	ldd	r0, Z+8	; 0x08
    11dc:	f1 85       	ldd	r31, Z+9	; 0x09
    11de:	e0 2d       	mov	r30, r0
    11e0:	09 95       	icall
    11e2:	89 2b       	or	r24, r25
    11e4:	e1 f6       	brne	.-72     	; 0x119e <fputc+0x10>
    11e6:	d8 01       	movw	r26, r16
    11e8:	16 96       	adiw	r26, 0x06	; 6
    11ea:	8d 91       	ld	r24, X+
    11ec:	9c 91       	ld	r25, X
    11ee:	17 97       	sbiw	r26, 0x07	; 7
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	17 96       	adiw	r26, 0x07	; 7
    11f4:	9c 93       	st	X, r25
    11f6:	8e 93       	st	-X, r24
    11f8:	16 97       	sbiw	r26, 0x06	; 6
    11fa:	ce 01       	movw	r24, r28
    11fc:	df 91       	pop	r29
    11fe:	cf 91       	pop	r28
    1200:	1f 91       	pop	r17
    1202:	0f 91       	pop	r16
    1204:	08 95       	ret

00001206 <__ultoa_invert>:
    1206:	fa 01       	movw	r30, r20
    1208:	aa 27       	eor	r26, r26
    120a:	28 30       	cpi	r18, 0x08	; 8
    120c:	51 f1       	breq	.+84     	; 0x1262 <__ultoa_invert+0x5c>
    120e:	20 31       	cpi	r18, 0x10	; 16
    1210:	81 f1       	breq	.+96     	; 0x1272 <__ultoa_invert+0x6c>
    1212:	e8 94       	clt
    1214:	6f 93       	push	r22
    1216:	6e 7f       	andi	r22, 0xFE	; 254
    1218:	6e 5f       	subi	r22, 0xFE	; 254
    121a:	7f 4f       	sbci	r23, 0xFF	; 255
    121c:	8f 4f       	sbci	r24, 0xFF	; 255
    121e:	9f 4f       	sbci	r25, 0xFF	; 255
    1220:	af 4f       	sbci	r26, 0xFF	; 255
    1222:	b1 e0       	ldi	r27, 0x01	; 1
    1224:	3e d0       	rcall	.+124    	; 0x12a2 <__ultoa_invert+0x9c>
    1226:	b4 e0       	ldi	r27, 0x04	; 4
    1228:	3c d0       	rcall	.+120    	; 0x12a2 <__ultoa_invert+0x9c>
    122a:	67 0f       	add	r22, r23
    122c:	78 1f       	adc	r23, r24
    122e:	89 1f       	adc	r24, r25
    1230:	9a 1f       	adc	r25, r26
    1232:	a1 1d       	adc	r26, r1
    1234:	68 0f       	add	r22, r24
    1236:	79 1f       	adc	r23, r25
    1238:	8a 1f       	adc	r24, r26
    123a:	91 1d       	adc	r25, r1
    123c:	a1 1d       	adc	r26, r1
    123e:	6a 0f       	add	r22, r26
    1240:	71 1d       	adc	r23, r1
    1242:	81 1d       	adc	r24, r1
    1244:	91 1d       	adc	r25, r1
    1246:	a1 1d       	adc	r26, r1
    1248:	20 d0       	rcall	.+64     	; 0x128a <__ultoa_invert+0x84>
    124a:	09 f4       	brne	.+2      	; 0x124e <__ultoa_invert+0x48>
    124c:	68 94       	set
    124e:	3f 91       	pop	r19
    1250:	2a e0       	ldi	r18, 0x0A	; 10
    1252:	26 9f       	mul	r18, r22
    1254:	11 24       	eor	r1, r1
    1256:	30 19       	sub	r19, r0
    1258:	30 5d       	subi	r19, 0xD0	; 208
    125a:	31 93       	st	Z+, r19
    125c:	de f6       	brtc	.-74     	; 0x1214 <__ultoa_invert+0xe>
    125e:	cf 01       	movw	r24, r30
    1260:	08 95       	ret
    1262:	46 2f       	mov	r20, r22
    1264:	47 70       	andi	r20, 0x07	; 7
    1266:	40 5d       	subi	r20, 0xD0	; 208
    1268:	41 93       	st	Z+, r20
    126a:	b3 e0       	ldi	r27, 0x03	; 3
    126c:	0f d0       	rcall	.+30     	; 0x128c <__ultoa_invert+0x86>
    126e:	c9 f7       	brne	.-14     	; 0x1262 <__ultoa_invert+0x5c>
    1270:	f6 cf       	rjmp	.-20     	; 0x125e <__ultoa_invert+0x58>
    1272:	46 2f       	mov	r20, r22
    1274:	4f 70       	andi	r20, 0x0F	; 15
    1276:	40 5d       	subi	r20, 0xD0	; 208
    1278:	4a 33       	cpi	r20, 0x3A	; 58
    127a:	18 f0       	brcs	.+6      	; 0x1282 <__ultoa_invert+0x7c>
    127c:	49 5d       	subi	r20, 0xD9	; 217
    127e:	31 fd       	sbrc	r19, 1
    1280:	40 52       	subi	r20, 0x20	; 32
    1282:	41 93       	st	Z+, r20
    1284:	02 d0       	rcall	.+4      	; 0x128a <__ultoa_invert+0x84>
    1286:	a9 f7       	brne	.-22     	; 0x1272 <__ultoa_invert+0x6c>
    1288:	ea cf       	rjmp	.-44     	; 0x125e <__ultoa_invert+0x58>
    128a:	b4 e0       	ldi	r27, 0x04	; 4
    128c:	a6 95       	lsr	r26
    128e:	97 95       	ror	r25
    1290:	87 95       	ror	r24
    1292:	77 95       	ror	r23
    1294:	67 95       	ror	r22
    1296:	ba 95       	dec	r27
    1298:	c9 f7       	brne	.-14     	; 0x128c <__ultoa_invert+0x86>
    129a:	00 97       	sbiw	r24, 0x00	; 0
    129c:	61 05       	cpc	r22, r1
    129e:	71 05       	cpc	r23, r1
    12a0:	08 95       	ret
    12a2:	9b 01       	movw	r18, r22
    12a4:	ac 01       	movw	r20, r24
    12a6:	0a 2e       	mov	r0, r26
    12a8:	06 94       	lsr	r0
    12aa:	57 95       	ror	r21
    12ac:	47 95       	ror	r20
    12ae:	37 95       	ror	r19
    12b0:	27 95       	ror	r18
    12b2:	ba 95       	dec	r27
    12b4:	c9 f7       	brne	.-14     	; 0x12a8 <__ultoa_invert+0xa2>
    12b6:	62 0f       	add	r22, r18
    12b8:	73 1f       	adc	r23, r19
    12ba:	84 1f       	adc	r24, r20
    12bc:	95 1f       	adc	r25, r21
    12be:	a0 1d       	adc	r26, r0
    12c0:	08 95       	ret

000012c2 <__prologue_saves__>:
    12c2:	2f 92       	push	r2
    12c4:	3f 92       	push	r3
    12c6:	4f 92       	push	r4
    12c8:	5f 92       	push	r5
    12ca:	6f 92       	push	r6
    12cc:	7f 92       	push	r7
    12ce:	8f 92       	push	r8
    12d0:	9f 92       	push	r9
    12d2:	af 92       	push	r10
    12d4:	bf 92       	push	r11
    12d6:	cf 92       	push	r12
    12d8:	df 92       	push	r13
    12da:	ef 92       	push	r14
    12dc:	ff 92       	push	r15
    12de:	0f 93       	push	r16
    12e0:	1f 93       	push	r17
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
    12ea:	ca 1b       	sub	r28, r26
    12ec:	db 0b       	sbc	r29, r27
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	f8 94       	cli
    12f2:	de bf       	out	0x3e, r29	; 62
    12f4:	0f be       	out	0x3f, r0	; 63
    12f6:	cd bf       	out	0x3d, r28	; 61
    12f8:	09 94       	ijmp

000012fa <__epilogue_restores__>:
    12fa:	2a 88       	ldd	r2, Y+18	; 0x12
    12fc:	39 88       	ldd	r3, Y+17	; 0x11
    12fe:	48 88       	ldd	r4, Y+16	; 0x10
    1300:	5f 84       	ldd	r5, Y+15	; 0x0f
    1302:	6e 84       	ldd	r6, Y+14	; 0x0e
    1304:	7d 84       	ldd	r7, Y+13	; 0x0d
    1306:	8c 84       	ldd	r8, Y+12	; 0x0c
    1308:	9b 84       	ldd	r9, Y+11	; 0x0b
    130a:	aa 84       	ldd	r10, Y+10	; 0x0a
    130c:	b9 84       	ldd	r11, Y+9	; 0x09
    130e:	c8 84       	ldd	r12, Y+8	; 0x08
    1310:	df 80       	ldd	r13, Y+7	; 0x07
    1312:	ee 80       	ldd	r14, Y+6	; 0x06
    1314:	fd 80       	ldd	r15, Y+5	; 0x05
    1316:	0c 81       	ldd	r16, Y+4	; 0x04
    1318:	1b 81       	ldd	r17, Y+3	; 0x03
    131a:	aa 81       	ldd	r26, Y+2	; 0x02
    131c:	b9 81       	ldd	r27, Y+1	; 0x01
    131e:	ce 0f       	add	r28, r30
    1320:	d1 1d       	adc	r29, r1
    1322:	0f b6       	in	r0, 0x3f	; 63
    1324:	f8 94       	cli
    1326:	de bf       	out	0x3e, r29	; 62
    1328:	0f be       	out	0x3f, r0	; 63
    132a:	cd bf       	out	0x3d, r28	; 61
    132c:	ed 01       	movw	r28, r26
    132e:	08 95       	ret

00001330 <_exit>:
    1330:	f8 94       	cli

00001332 <__stop_program>:
    1332:	ff cf       	rjmp	.-2      	; 0x1332 <__stop_program>
