
byggernV5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d8  00800100  000014b2  00001546  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001d8  008001d8  0000161e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000161e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000167c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  000016b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002596  00000000  00000000  000018e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000da0  00000000  00000000  00003e76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f8d  00000000  00000000  00004c16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000054c  00000000  00000000  00005ba4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000867  00000000  00000000  000060f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001108  00000000  00000000  00006957  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00007a5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <main+0x50>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 eb       	ldi	r30, 0xB2	; 178
     37c:	f4 e1       	ldi	r31, 0x14	; 20
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 3d       	cpi	r26, 0xD8	; 216
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a8 ed       	ldi	r26, 0xD8	; 216
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a2 3e       	cpi	r26, 0xE2	; 226
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 79 05 	call	0xaf2	; 0xaf2 <main>
     39e:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <io_init>:
	}
}


void OLED_home(char* menu_list[], int16_t length){
	OLED_print_menu(menu_list, length);
     3a6:	fc 01       	movw	r30, r24
     3a8:	11 82       	std	Z+1, r1	; 0x01
     3aa:	10 82       	st	Z, r1
     3ac:	13 82       	std	Z+3, r1	; 0x03
     3ae:	12 82       	std	Z+2, r1	; 0x02
     3b0:	15 82       	std	Z+5, r1	; 0x05
     3b2:	14 82       	std	Z+4, r1	; 0x04
     3b4:	17 82       	std	Z+7, r1	; 0x07
     3b6:	16 82       	std	Z+6, r1	; 0x06
     3b8:	84 e0       	ldi	r24, 0x04	; 4
     3ba:	80 87       	std	Z+8, r24	; 0x08
     3bc:	11 86       	std	Z+9, r1	; 0x09
     3be:	82 e0       	ldi	r24, 0x02	; 2
     3c0:	82 87       	std	Z+10, r24	; 0x0a
     3c2:	13 86       	std	Z+11, r1	; 0x0b
     3c4:	15 86       	std	Z+13, r1	; 0x0d
     3c6:	14 86       	std	Z+12, r1	; 0x0c
     3c8:	16 86       	std	Z+14, r1	; 0x0e
     3ca:	08 95       	ret

000003cc <convert>:
     3cc:	8e 55       	subi	r24, 0x5E	; 94
     3ce:	94 42       	sbci	r25, 0x24	; 36
     3d0:	84 30       	cpi	r24, 0x04	; 4
     3d2:	91 05       	cpc	r25, r1
     3d4:	84 f4       	brge	.+32     	; 0x3f6 <convert+0x2a>
     3d6:	8d 3f       	cpi	r24, 0xFD	; 253
     3d8:	2f ef       	ldi	r18, 0xFF	; 255
     3da:	92 07       	cpc	r25, r18
     3dc:	64 f4       	brge	.+24     	; 0x3f6 <convert+0x2a>
     3de:	44 e6       	ldi	r20, 0x64	; 100
     3e0:	48 9f       	mul	r20, r24
     3e2:	90 01       	movw	r18, r0
     3e4:	49 9f       	mul	r20, r25
     3e6:	30 0d       	add	r19, r0
     3e8:	11 24       	eor	r1, r1
     3ea:	c9 01       	movw	r24, r18
     3ec:	68 e8       	ldi	r22, 0x88	; 136
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__divmodhi4>
     3f4:	cb 01       	movw	r24, r22
     3f6:	08 95       	ret

000003f8 <find_joy_dir>:
     3f8:	fc 01       	movw	r30, r24
     3fa:	80 81       	ld	r24, Z
     3fc:	91 81       	ldd	r25, Z+1	; 0x01
     3fe:	cd 97       	sbiw	r24, 0x3d	; 61
     400:	54 f0       	brlt	.+20     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
     402:	80 85       	ldd	r24, Z+8	; 0x08
     404:	82 30       	cpi	r24, 0x02	; 2
     406:	19 f0       	breq	.+6      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	83 87       	std	Z+11, r24	; 0x0b
     40c:	01 c0       	rjmp	.+2      	; 0x410 <__DATA_REGION_LENGTH__+0x10>
     40e:	13 86       	std	Z+11, r1	; 0x0b
     410:	82 e0       	ldi	r24, 0x02	; 2
     412:	80 87       	std	Z+8, r24	; 0x08
     414:	08 95       	ret
     416:	80 81       	ld	r24, Z
     418:	91 81       	ldd	r25, Z+1	; 0x01
     41a:	84 3c       	cpi	r24, 0xC4	; 196
     41c:	9f 4f       	sbci	r25, 0xFF	; 255
     41e:	54 f4       	brge	.+20     	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     420:	80 85       	ldd	r24, Z+8	; 0x08
     422:	83 30       	cpi	r24, 0x03	; 3
     424:	19 f0       	breq	.+6      	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	83 87       	std	Z+11, r24	; 0x0b
     42a:	01 c0       	rjmp	.+2      	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
     42c:	13 86       	std	Z+11, r1	; 0x0b
     42e:	83 e0       	ldi	r24, 0x03	; 3
     430:	80 87       	std	Z+8, r24	; 0x08
     432:	08 95       	ret
     434:	82 81       	ldd	r24, Z+2	; 0x02
     436:	93 81       	ldd	r25, Z+3	; 0x03
     438:	cd 97       	sbiw	r24, 0x3d	; 61
     43a:	54 f0       	brlt	.+20     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
     43c:	80 85       	ldd	r24, Z+8	; 0x08
     43e:	81 30       	cpi	r24, 0x01	; 1
     440:	19 f0       	breq	.+6      	; 0x448 <__DATA_REGION_LENGTH__+0x48>
     442:	81 e0       	ldi	r24, 0x01	; 1
     444:	83 87       	std	Z+11, r24	; 0x0b
     446:	01 c0       	rjmp	.+2      	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
     448:	13 86       	std	Z+11, r1	; 0x0b
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	80 87       	std	Z+8, r24	; 0x08
     44e:	08 95       	ret
     450:	82 81       	ldd	r24, Z+2	; 0x02
     452:	93 81       	ldd	r25, Z+3	; 0x03
     454:	84 3c       	cpi	r24, 0xC4	; 196
     456:	9f 4f       	sbci	r25, 0xFF	; 255
     458:	4c f4       	brge	.+18     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
     45a:	80 85       	ldd	r24, Z+8	; 0x08
     45c:	88 23       	and	r24, r24
     45e:	19 f0       	breq	.+6      	; 0x466 <__DATA_REGION_LENGTH__+0x66>
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	83 87       	std	Z+11, r24	; 0x0b
     464:	01 c0       	rjmp	.+2      	; 0x468 <__DATA_REGION_LENGTH__+0x68>
     466:	13 86       	std	Z+11, r1	; 0x0b
     468:	10 86       	std	Z+8, r1	; 0x08
     46a:	08 95       	ret
     46c:	80 85       	ldd	r24, Z+8	; 0x08
     46e:	84 30       	cpi	r24, 0x04	; 4
     470:	19 f0       	breq	.+6      	; 0x478 <__DATA_REGION_LENGTH__+0x78>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	83 87       	std	Z+11, r24	; 0x0b
     476:	01 c0       	rjmp	.+2      	; 0x47a <__DATA_REGION_LENGTH__+0x7a>
     478:	13 86       	std	Z+11, r1	; 0x0b
     47a:	84 e0       	ldi	r24, 0x04	; 4
     47c:	80 87       	std	Z+8, r24	; 0x08
     47e:	08 95       	ret

00000480 <get_states>:
     480:	cf 93       	push	r28
     482:	df 93       	push	r29
     484:	ec 01       	movw	r28, r24
     486:	8a 85       	ldd	r24, Y+10	; 0x0a
     488:	28 2f       	mov	r18, r24
     48a:	08 2e       	mov	r0, r24
     48c:	00 0c       	add	r0, r0
     48e:	33 0b       	sbc	r19, r19
     490:	3f 93       	push	r19
     492:	8f 93       	push	r24
     494:	86 e2       	ldi	r24, 0x26	; 38
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	9f 93       	push	r25
     49a:	8f 93       	push	r24
     49c:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     4a0:	89 85       	ldd	r24, Y+9	; 0x09
     4a2:	1f 92       	push	r1
     4a4:	8f 93       	push	r24
     4a6:	89 e3       	ldi	r24, 0x39	; 57
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	9f 93       	push	r25
     4ac:	8f 93       	push	r24
     4ae:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     4b2:	88 85       	ldd	r24, Y+8	; 0x08
     4b4:	1f 92       	push	r1
     4b6:	8f 93       	push	r24
     4b8:	86 e4       	ldi	r24, 0x46	; 70
     4ba:	91 e0       	ldi	r25, 0x01	; 1
     4bc:	9f 93       	push	r25
     4be:	8f 93       	push	r24
     4c0:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     4c4:	88 81       	ld	r24, Y
     4c6:	99 81       	ldd	r25, Y+1	; 0x01
     4c8:	9f 93       	push	r25
     4ca:	8f 93       	push	r24
     4cc:	8f e5       	ldi	r24, 0x5F	; 95
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	9f 93       	push	r25
     4d2:	8f 93       	push	r24
     4d4:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     4d8:	8a 81       	ldd	r24, Y+2	; 0x02
     4da:	9b 81       	ldd	r25, Y+3	; 0x03
     4dc:	9f 93       	push	r25
     4de:	8f 93       	push	r24
     4e0:	83 e7       	ldi	r24, 0x73	; 115
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	9f 93       	push	r25
     4e6:	8f 93       	push	r24
     4e8:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     4ec:	8c 81       	ldd	r24, Y+4	; 0x04
     4ee:	9d 81       	ldd	r25, Y+5	; 0x05
     4f0:	9f 93       	push	r25
     4f2:	8f 93       	push	r24
     4f4:	87 e8       	ldi	r24, 0x87	; 135
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	9f 93       	push	r25
     4fa:	8f 93       	push	r24
     4fc:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     500:	8e 81       	ldd	r24, Y+6	; 0x06
     502:	9f 81       	ldd	r25, Y+7	; 0x07
     504:	9f 93       	push	r25
     506:	8f 93       	push	r24
     508:	89 e9       	ldi	r24, 0x99	; 153
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	9f 93       	push	r25
     50e:	8f 93       	push	r24
     510:	0e 94 72 07 	call	0xee4	; 0xee4 <printf>
     514:	8a e0       	ldi	r24, 0x0A	; 10
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 88 07 	call	0xf10	; 0xf10 <putchar>
     51c:	8d b7       	in	r24, 0x3d	; 61
     51e:	9e b7       	in	r25, 0x3e	; 62
     520:	4c 96       	adiw	r24, 0x1c	; 28
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	f8 94       	cli
     526:	9e bf       	out	0x3e, r25	; 62
     528:	0f be       	out	0x3f, r0	; 63
     52a:	8d bf       	out	0x3d, r24	; 61
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	08 95       	ret

00000532 <read_button>:
     532:	84 e0       	ldi	r24, 0x04	; 4
     534:	88 bb       	out	0x18, r24	; 24
     536:	17 ba       	out	0x17, r1	; 23
     538:	10 be       	out	0x30, r1	; 48
     53a:	b2 9b       	sbis	0x16, 2	; 22
     53c:	02 c0       	rjmp	.+4      	; 0x542 <read_button+0x10>
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	08 95       	ret
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	08 95       	ret

00000546 <oled_init>:
     546:	40 e0       	ldi	r20, 0x00	; 0
     548:	50 e1       	ldi	r21, 0x10	; 16
     54a:	60 e0       	ldi	r22, 0x00	; 0
     54c:	70 e0       	ldi	r23, 0x00	; 0
     54e:	8e ea       	ldi	r24, 0xAE	; 174
     550:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     554:	40 e0       	ldi	r20, 0x00	; 0
     556:	50 e1       	ldi	r21, 0x10	; 16
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	81 ea       	ldi	r24, 0xA1	; 161
     55e:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     562:	40 e0       	ldi	r20, 0x00	; 0
     564:	50 e1       	ldi	r21, 0x10	; 16
     566:	60 e0       	ldi	r22, 0x00	; 0
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	8a ed       	ldi	r24, 0xDA	; 218
     56c:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	50 e1       	ldi	r21, 0x10	; 16
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	82 e1       	ldi	r24, 0x12	; 18
     57a:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     57e:	40 e0       	ldi	r20, 0x00	; 0
     580:	50 e1       	ldi	r21, 0x10	; 16
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	70 e0       	ldi	r23, 0x00	; 0
     586:	88 ec       	ldi	r24, 0xC8	; 200
     588:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     58c:	40 e0       	ldi	r20, 0x00	; 0
     58e:	50 e1       	ldi	r21, 0x10	; 16
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	88 ea       	ldi	r24, 0xA8	; 168
     596:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	50 e1       	ldi	r21, 0x10	; 16
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	8f e3       	ldi	r24, 0x3F	; 63
     5a4:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	50 e1       	ldi	r21, 0x10	; 16
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	85 ed       	ldi	r24, 0xD5	; 213
     5b2:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5b6:	40 e0       	ldi	r20, 0x00	; 0
     5b8:	50 e1       	ldi	r21, 0x10	; 16
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	80 e8       	ldi	r24, 0x80	; 128
     5c0:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	50 e1       	ldi	r21, 0x10	; 16
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	81 e8       	ldi	r24, 0x81	; 129
     5ce:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5d2:	40 e0       	ldi	r20, 0x00	; 0
     5d4:	50 e1       	ldi	r21, 0x10	; 16
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	80 e5       	ldi	r24, 0x50	; 80
     5dc:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5e0:	40 e0       	ldi	r20, 0x00	; 0
     5e2:	50 e1       	ldi	r21, 0x10	; 16
     5e4:	60 e0       	ldi	r22, 0x00	; 0
     5e6:	70 e0       	ldi	r23, 0x00	; 0
     5e8:	89 ed       	ldi	r24, 0xD9	; 217
     5ea:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5ee:	40 e0       	ldi	r20, 0x00	; 0
     5f0:	50 e1       	ldi	r21, 0x10	; 16
     5f2:	60 e0       	ldi	r22, 0x00	; 0
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	81 e2       	ldi	r24, 0x21	; 33
     5f8:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	50 e1       	ldi	r21, 0x10	; 16
     600:	60 e0       	ldi	r22, 0x00	; 0
     602:	70 e0       	ldi	r23, 0x00	; 0
     604:	80 e2       	ldi	r24, 0x20	; 32
     606:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     60a:	40 e0       	ldi	r20, 0x00	; 0
     60c:	50 e1       	ldi	r21, 0x10	; 16
     60e:	60 e0       	ldi	r22, 0x00	; 0
     610:	70 e0       	ldi	r23, 0x00	; 0
     612:	82 e0       	ldi	r24, 0x02	; 2
     614:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	50 e1       	ldi	r21, 0x10	; 16
     61c:	60 e0       	ldi	r22, 0x00	; 0
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	8b ed       	ldi	r24, 0xDB	; 219
     622:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     626:	40 e0       	ldi	r20, 0x00	; 0
     628:	50 e1       	ldi	r21, 0x10	; 16
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	80 e3       	ldi	r24, 0x30	; 48
     630:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     634:	40 e0       	ldi	r20, 0x00	; 0
     636:	50 e1       	ldi	r21, 0x10	; 16
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	8d ea       	ldi	r24, 0xAD	; 173
     63e:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     642:	40 e0       	ldi	r20, 0x00	; 0
     644:	50 e1       	ldi	r21, 0x10	; 16
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	70 e0       	ldi	r23, 0x00	; 0
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     650:	40 e0       	ldi	r20, 0x00	; 0
     652:	50 e1       	ldi	r21, 0x10	; 16
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	84 ea       	ldi	r24, 0xA4	; 164
     65a:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	50 e1       	ldi	r21, 0x10	; 16
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	70 e0       	ldi	r23, 0x00	; 0
     666:	86 ea       	ldi	r24, 0xA6	; 166
     668:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     66c:	40 e0       	ldi	r20, 0x00	; 0
     66e:	50 e1       	ldi	r21, 0x10	; 16
     670:	60 e0       	ldi	r22, 0x00	; 0
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	8f ea       	ldi	r24, 0xAF	; 175
     676:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     67a:	08 95       	ret

0000067c <OLED_goto_row>:
     67c:	40 e0       	ldi	r20, 0x00	; 0
     67e:	50 e1       	ldi	r21, 0x10	; 16
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	80 55       	subi	r24, 0x50	; 80
     686:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     68a:	08 95       	ret

0000068c <OLED_goto_column>:
     68c:	cf 93       	push	r28
     68e:	c8 2f       	mov	r28, r24
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	50 e1       	ldi	r21, 0x10	; 16
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8f 70       	andi	r24, 0x0F	; 15
     69a:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     69e:	8c 2f       	mov	r24, r28
     6a0:	85 95       	asr	r24
     6a2:	85 95       	asr	r24
     6a4:	85 95       	asr	r24
     6a6:	85 95       	asr	r24
     6a8:	40 e0       	ldi	r20, 0x00	; 0
     6aa:	50 e1       	ldi	r21, 0x10	; 16
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	80 61       	ori	r24, 0x10	; 16
     6b2:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     6b6:	cf 91       	pop	r28
     6b8:	08 95       	ret

000006ba <OLED_pos>:
     6ba:	cf 93       	push	r28
     6bc:	c6 2f       	mov	r28, r22
     6be:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_goto_row>
     6c2:	8c 2f       	mov	r24, r28
     6c4:	0e 94 46 03 	call	0x68c	; 0x68c <OLED_goto_column>
     6c8:	cf 91       	pop	r28
     6ca:	08 95       	ret

000006cc <OLED_clear_row>:
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
     6d6:	c0 e0       	ldi	r28, 0x00	; 0
     6d8:	d0 e0       	ldi	r29, 0x00	; 0
     6da:	08 c0       	rjmp	.+16     	; 0x6ec <OLED_clear_row+0x20>
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	52 e1       	ldi	r21, 0x12	; 18
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     6ea:	21 96       	adiw	r28, 0x01	; 1
     6ec:	c0 38       	cpi	r28, 0x80	; 128
     6ee:	d1 05       	cpc	r29, r1
     6f0:	ac f3       	brlt	.-22     	; 0x6dc <OLED_clear_row+0x10>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <OLED_reset>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	80 e0       	ldi	r24, 0x00	; 0
     700:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
     704:	c0 e0       	ldi	r28, 0x00	; 0
     706:	d0 e0       	ldi	r29, 0x00	; 0
     708:	07 c0       	rjmp	.+14     	; 0x718 <OLED_reset+0x20>
     70a:	8c 2f       	mov	r24, r28
     70c:	0e 94 66 03 	call	0x6cc	; 0x6cc <OLED_clear_row>
     710:	8c 2f       	mov	r24, r28
     712:	0e 94 3e 03 	call	0x67c	; 0x67c <OLED_goto_row>
     716:	21 96       	adiw	r28, 0x01	; 1
     718:	c8 30       	cpi	r28, 0x08	; 8
     71a:	d1 05       	cpc	r29, r1
     71c:	b4 f3       	brlt	.-20     	; 0x70a <OLED_reset+0x12>
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	08 95       	ret

00000724 <OLED_write_data>:
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	18 2f       	mov	r17, r24
     72c:	c0 e0       	ldi	r28, 0x00	; 0
     72e:	d0 e0       	ldi	r29, 0x00	; 0
     730:	15 c0       	rjmp	.+42     	; 0x75c <OLED_write_data+0x38>
     732:	e1 2f       	mov	r30, r17
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	b0 97       	sbiw	r30, 0x20	; 32
     738:	ee 0f       	add	r30, r30
     73a:	ff 1f       	adc	r31, r31
     73c:	ee 0f       	add	r30, r30
     73e:	ff 1f       	adc	r31, r31
     740:	ee 0f       	add	r30, r30
     742:	ff 1f       	adc	r31, r31
     744:	ec 0f       	add	r30, r28
     746:	fd 1f       	adc	r31, r29
     748:	e0 59       	subi	r30, 0x90	; 144
     74a:	ff 4f       	sbci	r31, 0xFF	; 255
     74c:	84 91       	lpm	r24, Z
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	52 e1       	ldi	r21, 0x12	; 18
     752:	60 e0       	ldi	r22, 0x00	; 0
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     75a:	21 96       	adiw	r28, 0x01	; 1
     75c:	c8 30       	cpi	r28, 0x08	; 8
     75e:	d1 05       	cpc	r29, r1
     760:	44 f3       	brlt	.-48     	; 0x732 <OLED_write_data+0xe>
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	1f 91       	pop	r17
     768:	08 95       	ret

0000076a <OLED_print>:
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	ec 01       	movw	r28, r24
     770:	40 e0       	ldi	r20, 0x00	; 0
     772:	50 e1       	ldi	r21, 0x10	; 16
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	80 e2       	ldi	r24, 0x20	; 32
     77a:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     77e:	40 e0       	ldi	r20, 0x00	; 0
     780:	50 e1       	ldi	r21, 0x10	; 16
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	82 e0       	ldi	r24, 0x02	; 2
     788:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
     78c:	03 c0       	rjmp	.+6      	; 0x794 <OLED_print+0x2a>
     78e:	0e 94 92 03 	call	0x724	; 0x724 <OLED_write_data>
     792:	21 96       	adiw	r28, 0x01	; 1
     794:	88 81       	ld	r24, Y
     796:	81 11       	cpse	r24, r1
     798:	fa cf       	rjmp	.-12     	; 0x78e <OLED_print+0x24>
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	08 95       	ret

000007a0 <set_menu_ptr>:
     7a0:	cf 93       	push	r28
     7a2:	df 93       	push	r29
     7a4:	ec 01       	movw	r28, r24
     7a6:	98 85       	ldd	r25, Y+8	; 0x08
     7a8:	93 30       	cpi	r25, 0x03	; 3
     7aa:	b9 f4       	brne	.+46     	; 0x7da <set_menu_ptr+0x3a>
     7ac:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ae:	88 23       	and	r24, r24
     7b0:	a1 f0       	breq	.+40     	; 0x7da <set_menu_ptr+0x3a>
     7b2:	8a 85       	ldd	r24, Y+10	; 0x0a
     7b4:	87 30       	cpi	r24, 0x07	; 7
     7b6:	8c f4       	brge	.+34     	; 0x7da <set_menu_ptr+0x3a>
     7b8:	6e e6       	ldi	r22, 0x6E	; 110
     7ba:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
     7be:	8c ea       	ldi	r24, 0xAC	; 172
     7c0:	91 e0       	ldi	r25, 0x01	; 1
     7c2:	0e 94 b5 03 	call	0x76a	; 0x76a <OLED_print>
     7c6:	8a 85       	ldd	r24, Y+10	; 0x0a
     7c8:	8f 5f       	subi	r24, 0xFF	; 255
     7ca:	8a 87       	std	Y+10, r24	; 0x0a
     7cc:	ec 85       	ldd	r30, Y+12	; 0x0c
     7ce:	fd 85       	ldd	r31, Y+13	; 0x0d
     7d0:	86 81       	ldd	r24, Z+6	; 0x06
     7d2:	97 81       	ldd	r25, Z+7	; 0x07
     7d4:	9d 87       	std	Y+13, r25	; 0x0d
     7d6:	8c 87       	std	Y+12, r24	; 0x0c
     7d8:	18 c0       	rjmp	.+48     	; 0x80a <set_menu_ptr+0x6a>
     7da:	92 30       	cpi	r25, 0x02	; 2
     7dc:	b1 f4       	brne	.+44     	; 0x80a <set_menu_ptr+0x6a>
     7de:	8b 85       	ldd	r24, Y+11	; 0x0b
     7e0:	88 23       	and	r24, r24
     7e2:	99 f0       	breq	.+38     	; 0x80a <set_menu_ptr+0x6a>
     7e4:	8a 85       	ldd	r24, Y+10	; 0x0a
     7e6:	83 30       	cpi	r24, 0x03	; 3
     7e8:	84 f0       	brlt	.+32     	; 0x80a <set_menu_ptr+0x6a>
     7ea:	6e e6       	ldi	r22, 0x6E	; 110
     7ec:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
     7f0:	8c ea       	ldi	r24, 0xAC	; 172
     7f2:	91 e0       	ldi	r25, 0x01	; 1
     7f4:	0e 94 b5 03 	call	0x76a	; 0x76a <OLED_print>
     7f8:	8a 85       	ldd	r24, Y+10	; 0x0a
     7fa:	81 50       	subi	r24, 0x01	; 1
     7fc:	8a 87       	std	Y+10, r24	; 0x0a
     7fe:	ec 85       	ldd	r30, Y+12	; 0x0c
     800:	fd 85       	ldd	r31, Y+13	; 0x0d
     802:	84 81       	ldd	r24, Z+4	; 0x04
     804:	95 81       	ldd	r25, Z+5	; 0x05
     806:	9d 87       	std	Y+13, r25	; 0x0d
     808:	8c 87       	std	Y+12, r24	; 0x0c
     80a:	6e e6       	ldi	r22, 0x6E	; 110
     80c:	8a 85       	ldd	r24, Y+10	; 0x0a
     80e:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
     812:	8f ea       	ldi	r24, 0xAF	; 175
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	0e 94 b5 03 	call	0x76a	; 0x76a <OLED_print>
     81a:	df 91       	pop	r29
     81c:	cf 91       	pop	r28
     81e:	08 95       	ret

00000820 <create_menu_item>:
}

menu_item *create_menu_item (const char *name, menu_item *parent){
     820:	ef 92       	push	r14
     822:	ff 92       	push	r15
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	7c 01       	movw	r14, r24
     82e:	8b 01       	movw	r16, r22
	menu_item *new_item = (menu_item*) malloc(sizeof(menu_item));
     830:	8b e0       	ldi	r24, 0x0B	; 11
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 27 06 	call	0xc4e	; 0xc4e <malloc>
     838:	ec 01       	movw	r28, r24
	new_item->menu_name = strdup(name);
     83a:	c7 01       	movw	r24, r14
     83c:	0e 94 48 07 	call	0xe90	; 0xe90 <strdup>
     840:	99 87       	std	Y+9, r25	; 0x09
     842:	88 87       	std	Y+8, r24	; 0x08
	new_item->parent = parent;
     844:	19 83       	std	Y+1, r17	; 0x01
     846:	08 83       	st	Y, r16
	new_item->first_child = NULL;
     848:	1b 82       	std	Y+3, r1	; 0x03
     84a:	1a 82       	std	Y+2, r1	; 0x02
	new_item->previous_sibling=NULL;
     84c:	1d 82       	std	Y+5, r1	; 0x05
     84e:	1c 82       	std	Y+4, r1	; 0x04
	new_item->next_sibling = NULL;
     850:	1f 82       	std	Y+7, r1	; 0x07
     852:	1e 82       	std	Y+6, r1	; 0x06
	return new_item;
}
     854:	ce 01       	movw	r24, r28
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	1f 91       	pop	r17
     85c:	0f 91       	pop	r16
     85e:	ff 90       	pop	r15
     860:	ef 90       	pop	r14
     862:	08 95       	ret

00000864 <add_submenu>:

void add_submenu(menu_item *parent, const char *name){
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	ec 01       	movw	r28, r24
     86a:	cb 01       	movw	r24, r22
	menu_item *new_item=create_menu_item(name,parent);
     86c:	be 01       	movw	r22, r28
     86e:	0e 94 10 04 	call	0x820	; 0x820 <create_menu_item>
	if (parent->first_child==NULL){
     872:	ea 81       	ldd	r30, Y+2	; 0x02
     874:	fb 81       	ldd	r31, Y+3	; 0x03
     876:	30 97       	sbiw	r30, 0x00	; 0
     878:	21 f4       	brne	.+8      	; 0x882 <add_submenu+0x1e>
		parent->first_child = new_item;
     87a:	9b 83       	std	Y+3, r25	; 0x03
     87c:	8a 83       	std	Y+2, r24	; 0x02
     87e:	0d c0       	rjmp	.+26     	; 0x89a <add_submenu+0x36>
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
			current = current->next_sibling;
     880:	f9 01       	movw	r30, r18
	if (parent->first_child==NULL){
		parent->first_child = new_item;
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
     882:	26 81       	ldd	r18, Z+6	; 0x06
     884:	37 81       	ldd	r19, Z+7	; 0x07
     886:	21 15       	cp	r18, r1
     888:	31 05       	cpc	r19, r1
     88a:	d1 f7       	brne	.-12     	; 0x880 <add_submenu+0x1c>
			current = current->next_sibling;
		}
		current->next_sibling=new_item;
     88c:	97 83       	std	Z+7, r25	; 0x07
     88e:	86 83       	std	Z+6, r24	; 0x06
		new_item->previous_sibling=current;
     890:	dc 01       	movw	r26, r24
     892:	15 96       	adiw	r26, 0x05	; 5
     894:	fc 93       	st	X, r31
     896:	ee 93       	st	-X, r30
     898:	14 97       	sbiw	r26, 0x04	; 4
	}
}
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	08 95       	ret

000008a0 <add_submenu_from_list>:

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
     8a0:	df 92       	push	r13
     8a2:	ef 92       	push	r14
     8a4:	ff 92       	push	r15
     8a6:	0f 93       	push	r16
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
     8ae:	7c 01       	movw	r14, r24
     8b0:	8b 01       	movw	r16, r22
     8b2:	d4 2e       	mov	r13, r20
	for(int i=0; i<length; i++){
     8b4:	c0 e0       	ldi	r28, 0x00	; 0
     8b6:	d0 e0       	ldi	r29, 0x00	; 0
     8b8:	0b c0       	rjmp	.+22     	; 0x8d0 <add_submenu_from_list+0x30>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
     8ba:	fe 01       	movw	r30, r28
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 1f       	adc	r31, r31
     8c0:	e0 0f       	add	r30, r16
     8c2:	f1 1f       	adc	r31, r17
     8c4:	60 81       	ld	r22, Z
     8c6:	71 81       	ldd	r23, Z+1	; 0x01
     8c8:	c7 01       	movw	r24, r14
     8ca:	0e 94 32 04 	call	0x864	; 0x864 <add_submenu>
		new_item->previous_sibling=current;
	}
}

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
	for(int i=0; i<length; i++){
     8ce:	21 96       	adiw	r28, 0x01	; 1
     8d0:	8d 2d       	mov	r24, r13
     8d2:	0d 2c       	mov	r0, r13
     8d4:	00 0c       	add	r0, r0
     8d6:	99 0b       	sbc	r25, r25
     8d8:	c8 17       	cp	r28, r24
     8da:	d9 07       	cpc	r29, r25
     8dc:	74 f3       	brlt	.-36     	; 0x8ba <add_submenu_from_list+0x1a>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
	}
}
     8de:	df 91       	pop	r29
     8e0:	cf 91       	pop	r28
     8e2:	1f 91       	pop	r17
     8e4:	0f 91       	pop	r16
     8e6:	ff 90       	pop	r15
     8e8:	ef 90       	pop	r14
     8ea:	df 90       	pop	r13
     8ec:	08 95       	ret

000008ee <OLED_print_menu_2>:


void OLED_print_menu_2(menu_item* parent){
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	ec 01       	movw	r28, r24
	OLED_reset();
     8f8:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <OLED_reset>
	OLED_pos(0, 50);
     8fc:	62 e3       	ldi	r22, 0x32	; 50
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
	OLED_print(parent->menu_name);
     904:	88 85       	ldd	r24, Y+8	; 0x08
     906:	99 85       	ldd	r25, Y+9	; 0x09
     908:	0e 94 b5 03 	call	0x76a	; 0x76a <OLED_print>
	menu_item *current=parent->first_child;
     90c:	0a 80       	ldd	r0, Y+2	; 0x02
     90e:	db 81       	ldd	r29, Y+3	; 0x03
     910:	c0 2d       	mov	r28, r0
	int i=1;
     912:	01 e0       	ldi	r16, 0x01	; 1
     914:	10 e0       	ldi	r17, 0x00	; 0
	while(current!=NULL){
     916:	0e c0       	rjmp	.+28     	; 0x934 <OLED_print_menu_2+0x46>
		OLED_pos(i+1, 10);
     918:	6a e0       	ldi	r22, 0x0A	; 10
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	80 0f       	add	r24, r16
     91e:	0e 94 5d 03 	call	0x6ba	; 0x6ba <OLED_pos>
		OLED_print(current->menu_name);
     922:	88 85       	ldd	r24, Y+8	; 0x08
     924:	99 85       	ldd	r25, Y+9	; 0x09
     926:	0e 94 b5 03 	call	0x76a	; 0x76a <OLED_print>
		current=current->next_sibling;
     92a:	0e 80       	ldd	r0, Y+6	; 0x06
     92c:	df 81       	ldd	r29, Y+7	; 0x07
     92e:	c0 2d       	mov	r28, r0
		i++;
     930:	0f 5f       	subi	r16, 0xFF	; 255
     932:	1f 4f       	sbci	r17, 0xFF	; 255
	OLED_reset();
	OLED_pos(0, 50);
	OLED_print(parent->menu_name);
	menu_item *current=parent->first_child;
	int i=1;
	while(current!=NULL){
     934:	20 97       	sbiw	r28, 0x00	; 0
     936:	81 f7       	brne	.-32     	; 0x918 <OLED_print_menu_2+0x2a>
		OLED_pos(i+1, 10);
		OLED_print(current->menu_name);
		current=current->next_sibling;
		i++;
	}
}
     938:	df 91       	pop	r29
     93a:	cf 91       	pop	r28
     93c:	1f 91       	pop	r17
     93e:	0f 91       	pop	r16
     940:	08 95       	ret

00000942 <menu_init>:
	for(int i=0; i<page_number; i++){
		
	} 
}*/

void menu_init(IO *io){
     942:	ef 92       	push	r14
     944:	ff 92       	push	r15
     946:	0f 93       	push	r16
     948:	1f 93       	push	r17
     94a:	cf 93       	push	r28
     94c:	df 93       	push	r29
     94e:	cd b7       	in	r28, 0x3d	; 61
     950:	de b7       	in	r29, 0x3e	; 62
     952:	62 97       	sbiw	r28, 0x12	; 18
     954:	0f b6       	in	r0, 0x3f	; 63
     956:	f8 94       	cli
     958:	de bf       	out	0x3e, r29	; 62
     95a:	0f be       	out	0x3f, r0	; 63
     95c:	cd bf       	out	0x3d, r28	; 61
     95e:	7c 01       	movw	r14, r24
	menu_item *menu = create_menu_item("Home", NULL); 
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	82 eb       	ldi	r24, 0xB2	; 178
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	0e 94 10 04 	call	0x820	; 0x820 <create_menu_item>
     96c:	8c 01       	movw	r16, r24
	
	const char* home_menu[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4"};
     96e:	88 e0       	ldi	r24, 0x08	; 8
     970:	e4 e1       	ldi	r30, 0x14	; 20
     972:	f1 e0       	ldi	r31, 0x01	; 1
     974:	de 01       	movw	r26, r28
     976:	11 96       	adiw	r26, 0x01	; 1
     978:	01 90       	ld	r0, Z+
     97a:	0d 92       	st	X+, r0
     97c:	8a 95       	dec	r24
     97e:	e1 f7       	brne	.-8      	; 0x978 <menu_init+0x36>
	add_submenu_from_list(menu, home_menu, 4);
     980:	44 e0       	ldi	r20, 0x04	; 4
     982:	be 01       	movw	r22, r28
     984:	6f 5f       	subi	r22, 0xFF	; 255
     986:	7f 4f       	sbci	r23, 0xFF	; 255
     988:	c8 01       	movw	r24, r16
     98a:	0e 94 50 04 	call	0x8a0	; 0x8a0 <add_submenu_from_list>
	io->current_node = menu->first_child;
     98e:	f8 01       	movw	r30, r16
     990:	82 81       	ldd	r24, Z+2	; 0x02
     992:	93 81       	ldd	r25, Z+3	; 0x03
     994:	f7 01       	movw	r30, r14
     996:	95 87       	std	Z+13, r25	; 0x0d
     998:	84 87       	std	Z+12, r24	; 0x0c
	const char* home_menu1[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4", "Back"};
     99a:	8a e0       	ldi	r24, 0x0A	; 10
     99c:	ec e1       	ldi	r30, 0x1C	; 28
     99e:	f1 e0       	ldi	r31, 0x01	; 1
     9a0:	de 01       	movw	r26, r28
     9a2:	19 96       	adiw	r26, 0x09	; 9
     9a4:	01 90       	ld	r0, Z+
     9a6:	0d 92       	st	X+, r0
     9a8:	8a 95       	dec	r24
     9aa:	e1 f7       	brne	.-8      	; 0x9a4 <menu_init+0x62>
	add_submenu_from_list(menu->first_child, home_menu1, 5);
     9ac:	45 e0       	ldi	r20, 0x05	; 5
     9ae:	be 01       	movw	r22, r28
     9b0:	67 5f       	subi	r22, 0xF7	; 247
     9b2:	7f 4f       	sbci	r23, 0xFF	; 255
     9b4:	f8 01       	movw	r30, r16
     9b6:	82 81       	ldd	r24, Z+2	; 0x02
     9b8:	93 81       	ldd	r25, Z+3	; 0x03
     9ba:	0e 94 50 04 	call	0x8a0	; 0x8a0 <add_submenu_from_list>
	OLED_print_menu_2(menu);
     9be:	c8 01       	movw	r24, r16
     9c0:	0e 94 77 04 	call	0x8ee	; 0x8ee <OLED_print_menu_2>
	
}
     9c4:	62 96       	adiw	r28, 0x12	; 18
     9c6:	0f b6       	in	r0, 0x3f	; 63
     9c8:	f8 94       	cli
     9ca:	de bf       	out	0x3e, r29	; 62
     9cc:	0f be       	out	0x3f, r0	; 63
     9ce:	cd bf       	out	0x3d, r28	; 61
     9d0:	df 91       	pop	r29
     9d2:	cf 91       	pop	r28
     9d4:	1f 91       	pop	r17
     9d6:	0f 91       	pop	r16
     9d8:	ff 90       	pop	r15
     9da:	ef 90       	pop	r14
     9dc:	08 95       	ret

000009de <button_clicked>:

void button_clicked(IO* io){
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
	if(io->button_used == false){
     9e6:	dc 01       	movw	r26, r24
     9e8:	1e 96       	adiw	r26, 0x0e	; 14
     9ea:	2c 91       	ld	r18, X
     9ec:	1e 97       	sbiw	r26, 0x0e	; 14
     9ee:	21 11       	cpse	r18, r1
     9f0:	04 c0       	rjmp	.+8      	; 0x9fa <button_clicked+0x1c>
		io->button_used = true;
     9f2:	21 e0       	ldi	r18, 0x01	; 1
     9f4:	1e 96       	adiw	r26, 0x0e	; 14
     9f6:	2c 93       	st	X, r18
		return;
     9f8:	27 c0       	rjmp	.+78     	; 0xa48 <button_clicked+0x6a>
	}
	
	if(io->button_state){
     9fa:	fc 01       	movw	r30, r24
     9fc:	21 85       	ldd	r18, Z+9	; 0x09
     9fe:	22 23       	and	r18, r18
     a00:	19 f1       	breq	.+70     	; 0xa48 <button_clicked+0x6a>
     a02:	ec 01       	movw	r28, r24
		if(strcmp(io->current_node->menu_name, "Back") == 0){
     a04:	04 85       	ldd	r16, Z+12	; 0x0c
     a06:	15 85       	ldd	r17, Z+13	; 0x0d
     a08:	63 ed       	ldi	r22, 0xD3	; 211
     a0a:	71 e0       	ldi	r23, 0x01	; 1
     a0c:	d8 01       	movw	r26, r16
     a0e:	18 96       	adiw	r26, 0x08	; 8
     a10:	8d 91       	ld	r24, X+
     a12:	9c 91       	ld	r25, X
     a14:	19 97       	sbiw	r26, 0x09	; 9
     a16:	0e 94 62 07 	call	0xec4	; 0xec4 <strcmp>
     a1a:	89 2b       	or	r24, r25
     a1c:	49 f4       	brne	.+18     	; 0xa30 <button_clicked+0x52>
			io->current_node = io->current_node->parent;
     a1e:	d8 01       	movw	r26, r16
     a20:	ed 91       	ld	r30, X+
     a22:	fc 91       	ld	r31, X
     a24:	fd 87       	std	Y+13, r31	; 0x0d
     a26:	ec 87       	std	Y+12, r30	; 0x0c
			io->current_node = io->current_node->parent;
     a28:	80 81       	ld	r24, Z
     a2a:	91 81       	ldd	r25, Z+1	; 0x01
     a2c:	9d 87       	std	Y+13, r25	; 0x0d
     a2e:	8c 87       	std	Y+12, r24	; 0x0c
		}
		
		OLED_print_menu_2(io->current_node);
     a30:	8c 85       	ldd	r24, Y+12	; 0x0c
     a32:	9d 85       	ldd	r25, Y+13	; 0x0d
     a34:	0e 94 77 04 	call	0x8ee	; 0x8ee <OLED_print_menu_2>
		io->current_node = io->current_node->first_child;
     a38:	ec 85       	ldd	r30, Y+12	; 0x0c
     a3a:	fd 85       	ldd	r31, Y+13	; 0x0d
     a3c:	82 81       	ldd	r24, Z+2	; 0x02
     a3e:	93 81       	ldd	r25, Z+3	; 0x03
     a40:	9d 87       	std	Y+13, r25	; 0x0d
     a42:	8c 87       	std	Y+12, r24	; 0x0c
		io->menu_ptr = 2;
     a44:	82 e0       	ldi	r24, 0x02	; 2
     a46:	8a 87       	std	Y+10, r24	; 0x0a
	}
}
     a48:	df 91       	pop	r29
     a4a:	cf 91       	pop	r28
     a4c:	1f 91       	pop	r17
     a4e:	0f 91       	pop	r16
     a50:	08 95       	ret

00000a52 <set_states>:
		}
		io->joy_dir = NEUTRAL;
	}
}

void set_states(IO* io){
     a52:	cf 93       	push	r28
     a54:	df 93       	push	r29
     a56:	ec 01       	movw	r28, r24
	xmem_write(16, adc_adr, BASE_ADDRESS);
     a58:	40 e0       	ldi	r20, 0x00	; 0
     a5a:	50 e1       	ldi	r21, 0x10	; 16
     a5c:	60 e0       	ldi	r22, 0x00	; 0
     a5e:	74 e1       	ldi	r23, 0x14	; 20
     a60:	80 e1       	ldi	r24, 0x10	; 16
     a62:	0e 94 f5 05 	call	0xbea	; 0xbea <xmem_write>
	
	io->joy_x = convert(xmem_read(adc_adr, BASE_ADDRESS));
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	70 e1       	ldi	r23, 0x10	; 16
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	94 e1       	ldi	r25, 0x14	; 20
     a6e:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <xmem_read>
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	0e 94 e6 01 	call	0x3cc	; 0x3cc <convert>
     a78:	99 83       	std	Y+1, r25	; 0x01
     a7a:	88 83       	st	Y, r24
	io->joy_y = convert(xmem_read(adc_adr, BASE_ADDRESS));
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	70 e1       	ldi	r23, 0x10	; 16
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	94 e1       	ldi	r25, 0x14	; 20
     a84:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <xmem_read>
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <convert>
     a8e:	9b 83       	std	Y+3, r25	; 0x03
     a90:	8a 83       	std	Y+2, r24	; 0x02
	//io->slider_l = xmem_read(adc_adr,BASE_ADDRESS)-9216;
	//io->slider_r = xmem_read(adc_adr, BASE_ADDRESS)-9216;
	io->slider_l = xmem_read(adc_adr,BASE_ADDRESS);
     a92:	60 e0       	ldi	r22, 0x00	; 0
     a94:	70 e1       	ldi	r23, 0x10	; 16
     a96:	80 e0       	ldi	r24, 0x00	; 0
     a98:	94 e1       	ldi	r25, 0x14	; 20
     a9a:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <xmem_read>
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	9d 83       	std	Y+5, r25	; 0x05
     aa2:	8c 83       	std	Y+4, r24	; 0x04
	io->slider_r = xmem_read(adc_adr,BASE_ADDRESS);
     aa4:	60 e0       	ldi	r22, 0x00	; 0
     aa6:	70 e1       	ldi	r23, 0x10	; 16
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	94 e1       	ldi	r25, 0x14	; 20
     aac:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <xmem_read>
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	9f 83       	std	Y+7, r25	; 0x07
     ab4:	8e 83       	std	Y+6, r24	; 0x06
	find_joy_dir(io);
     ab6:	ce 01       	movw	r24, r28
     ab8:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <find_joy_dir>
	io->button_state = read_button(io);
     abc:	ce 01       	movw	r24, r28
     abe:	0e 94 99 02 	call	0x532	; 0x532 <read_button>
     ac2:	89 87       	std	Y+9, r24	; 0x09
	set_menu_ptr(io);
     ac4:	ce 01       	movw	r24, r28
     ac6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <set_menu_ptr>
	button_clicked(io);
     aca:	ce 01       	movw	r24, r28
     acc:	0e 94 ef 04 	call	0x9de	; 0x9de <button_clicked>
}
     ad0:	df 91       	pop	r29
     ad2:	cf 91       	pop	r28
     ad4:	08 95       	ret

00000ad6 <pwm_init>:
	TCCR3B = (0<<WGM33) | (1<<WGM32) |(1<<CS30);
	OCR3B = 0;
};
		
void pwm_init(void) {
	DDRD |=(1<<DDD4);
     ad6:	81 b3       	in	r24, 0x11	; 17
     ad8:	80 61       	ori	r24, 0x10	; 16
     ada:	81 bb       	out	0x11, r24	; 17
	TCCR3A = (0<<COM3A0) | (1<<COM3A1) | (0<<WGM31) | (1<<WGM30);
     adc:	81 e8       	ldi	r24, 0x81	; 129
     ade:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
	TCCR3B = (0<<ICES3) | (1<<WGM32) |(1<<CS30);
     ae2:	89 e0       	ldi	r24, 0x09	; 9
     ae4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
	OCR3B = 0;
     ae8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aec:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     af0:	08 95       	ret

00000af2 <main>:
};

int main(void)
{
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	cd b7       	in	r28, 0x3d	; 61
     af8:	de b7       	in	r29, 0x3e	; 62
     afa:	2f 97       	sbiw	r28, 0x0f	; 15
     afc:	0f b6       	in	r0, 0x3f	; 63
     afe:	f8 94       	cli
     b00:	de bf       	out	0x3e, r29	; 62
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	cd bf       	out	0x3d, r28	; 61
	/* Replace with your application code */
	pwm_init();
     b06:	0e 94 6b 05 	call	0xad6	; 0xad6 <pwm_init>
	USART_Init(MYUBRR);
     b0a:	8f e1       	ldi	r24, 0x1F	; 31
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 cb 05 	call	0xb96	; 0xb96 <USART_Init>
	init_printf();
     b12:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <init_printf>
	xmem_init();
     b16:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <xmem_init>
	oled_init();
     b1a:	0e 94 a3 02 	call	0x546	; 0x546 <oled_init>
	IO io;
	io_init(&io);
     b1e:	ce 01       	movw	r24, r28
     b20:	01 96       	adiw	r24, 0x01	; 1
     b22:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <io_init>
	OLED_reset();
     b26:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <OLED_reset>
	//OLED_print_menu((char** ) current_menu->items, current_menu->num_items);
	
	//const char* menu1[] = {"Menu 1", "HOME", "Test 1", "Test 2"};
	//int16_t menu1_length = sizeof(menu1) / sizeof(menu1[0]);
	
	menu_init(&io);
     b2a:	ce 01       	movw	r24, r28
     b2c:	01 96       	adiw	r24, 0x01	; 1
     b2e:	0e 94 a1 04 	call	0x942	; 0x942 <menu_init>
	SPI_master_init();
     b32:	0e 94 bf 05 	call	0xb7e	; 0xb7e <SPI_master_init>
	//can_cntrl_config();
	
    while (1) 
    {
		SPI_SS_low();
     b36:	0e 94 b7 05 	call	0xb6e	; 0xb6e <SPI_SS_low>
		SPI_MasterTransmit(0x02);
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	0e 94 c6 05 	call	0xb8c	; 0xb8c <SPI_MasterTransmit>
		SPI_MasterTransmit(0xAB);
     b40:	8b ea       	ldi	r24, 0xAB	; 171
     b42:	0e 94 c6 05 	call	0xb8c	; 0xb8c <SPI_MasterTransmit>
		SPI_SS_high();
     b46:	0e 94 bb 05 	call	0xb76	; 0xb76 <SPI_SS_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	8f e7       	ldi	r24, 0x7F	; 127
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	80 40       	sbci	r24, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	e1 f7       	brne	.-8      	; 0xb50 <main+0x5e>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <main+0x68>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <main+0x6a>
		_delay_ms(10);
		uint16_t value=adc[0];
		printf("Adc-verdi: %u\n\n",value);
		_delay_ms(10);*/
		
		set_states(&io);
     b5c:	ce 01       	movw	r24, r28
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	0e 94 29 05 	call	0xa52	; 0xa52 <set_states>
		get_states(&io);
     b64:	ce 01       	movw	r24, r28
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	0e 94 40 02 	call	0x480	; 0x480 <get_states>
     b6c:	e4 cf       	rjmp	.-56     	; 0xb36 <main+0x44>

00000b6e <SPI_SS_low>:
#define CNF2 0x29
#define CNF3 0x28
#define CANCTRL 0x0F //0xXF, X satt til 0

void SPI_SS_low(void) {
	PORTB &= ~(1 << PB4);  // Pull SS/CS (PB4) low to select the slave
     b6e:	88 b3       	in	r24, 0x18	; 24
     b70:	8f 7e       	andi	r24, 0xEF	; 239
     b72:	88 bb       	out	0x18, r24	; 24
     b74:	08 95       	ret

00000b76 <SPI_SS_high>:
}

void SPI_SS_high(void) {
	PORTB |= (1 << PB4);   // Pull SS/CS (PB4) high to deselect the slave
     b76:	88 b3       	in	r24, 0x18	; 24
     b78:	80 61       	ori	r24, 0x10	; 16
     b7a:	88 bb       	out	0x18, r24	; 24
     b7c:	08 95       	ret

00000b7e <SPI_master_init>:
}


//SPI functions
void SPI_master_init(void){
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB4); //Set MOSI and SCK output, all others input
     b7e:	80 eb       	ldi	r24, 0xB0	; 176
     b80:	87 bb       	out	0x17, r24	; 23
	SPI_SS_high();
     b82:	0e 94 bb 05 	call	0xb76	; 0xb76 <SPI_SS_high>
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0); //Enable SPI, Master, set clock rate fck/16
     b86:	81 e5       	ldi	r24, 0x51	; 81
     b88:	8d b9       	out	0x0d, r24	; 13
     b8a:	08 95       	ret

00000b8c <SPI_MasterTransmit>:
}

uint8_t SPI_MasterTransmit(char cData){
	//SPI_SS_low();
	SPDR = cData; //Start transmission
     b8c:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))); //Wait for transmission complete
     b8e:	77 9b       	sbis	0x0e, 7	; 14
     b90:	fe cf       	rjmp	.-4      	; 0xb8e <SPI_MasterTransmit+0x2>
	//SPI_SS_high();
	return SPDR;
     b92:	8f b1       	in	r24, 0x0f	; 15
}
     b94:	08 95       	ret

00000b96 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
     b96:	90 bd       	out	0x20, r25	; 32
     b98:	89 b9       	out	0x09, r24	; 9
     b9a:	88 e1       	ldi	r24, 0x18	; 24
     b9c:	8a b9       	out	0x0a, r24	; 10
     b9e:	8e e8       	ldi	r24, 0x8E	; 142
     ba0:	80 bd       	out	0x20, r24	; 32
     ba2:	08 95       	ret

00000ba4 <USART_Transmit>:
     ba4:	5d 9b       	sbis	0x0b, 5	; 11
     ba6:	fe cf       	rjmp	.-4      	; 0xba4 <USART_Transmit>
     ba8:	8c b9       	out	0x0c, r24	; 12
     baa:	08 95       	ret

00000bac <uart_putchar>:
     bac:	cf 93       	push	r28
     bae:	c8 2f       	mov	r28, r24
     bb0:	8a 30       	cpi	r24, 0x0A	; 10
     bb2:	19 f4       	brne	.+6      	; 0xbba <uart_putchar+0xe>
     bb4:	8d e0       	ldi	r24, 0x0D	; 13
     bb6:	0e 94 d2 05 	call	0xba4	; 0xba4 <USART_Transmit>
     bba:	8c 2f       	mov	r24, r28
     bbc:	0e 94 d2 05 	call	0xba4	; 0xba4 <USART_Transmit>
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	cf 91       	pop	r28
     bc6:	08 95       	ret

00000bc8 <init_printf>:


void init_printf(void)
{
	static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
	stdout = &uart_stdout;  // Set stdout to use uart_putchar
     bc8:	86 e0       	ldi	r24, 0x06	; 6
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <__iob+0x3>
     bd0:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <__iob+0x2>
     bd4:	08 95       	ret

00000bd6 <xmem_init>:
#include "xmem.h"
#include <avr/io.h>


void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     bd6:	85 b7       	in	r24, 0x35	; 53
     bd8:	80 68       	ori	r24, 0x80	; 128
     bda:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(1 << XMM0 | 1 << XMM1 ); // mask bits / reduce bus width
     bdc:	80 b7       	in	r24, 0x30	; 48
     bde:	87 7e       	andi	r24, 0xE7	; 231
     be0:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2 );
     be2:	80 b7       	in	r24, 0x30	; 48
     be4:	80 62       	ori	r24, 0x20	; 32
     be6:	80 bf       	out	0x30, r24	; 48
     be8:	08 95       	ret

00000bea <xmem_write>:
}

void xmem_write ( uint8_t data , uint16_t addr, uint16_t base_address){
	volatile char * ext_mem = ( char *) base_address ;
	ext_mem [ addr ]= data ;
     bea:	fa 01       	movw	r30, r20
     bec:	e6 0f       	add	r30, r22
     bee:	f7 1f       	adc	r31, r23
     bf0:	80 83       	st	Z, r24
     bf2:	08 95       	ret

00000bf4 <xmem_read>:
}


uint8_t xmem_read ( uint16_t addr, uint16_t base_address){
	volatile char * ext_mem = ( char *) base_address;
	uint8_t ret_val = ext_mem [ addr ];
     bf4:	86 0f       	add	r24, r22
     bf6:	97 1f       	adc	r25, r23
     bf8:	fc 01       	movw	r30, r24
     bfa:	80 81       	ld	r24, Z
	return ret_val ;
}
     bfc:	08 95       	ret

00000bfe <__divmodhi4>:
     bfe:	97 fb       	bst	r25, 7
     c00:	07 2e       	mov	r0, r23
     c02:	16 f4       	brtc	.+4      	; 0xc08 <__divmodhi4+0xa>
     c04:	00 94       	com	r0
     c06:	07 d0       	rcall	.+14     	; 0xc16 <__divmodhi4_neg1>
     c08:	77 fd       	sbrc	r23, 7
     c0a:	09 d0       	rcall	.+18     	; 0xc1e <__divmodhi4_neg2>
     c0c:	0e 94 13 06 	call	0xc26	; 0xc26 <__udivmodhi4>
     c10:	07 fc       	sbrc	r0, 7
     c12:	05 d0       	rcall	.+10     	; 0xc1e <__divmodhi4_neg2>
     c14:	3e f4       	brtc	.+14     	; 0xc24 <__divmodhi4_exit>

00000c16 <__divmodhi4_neg1>:
     c16:	90 95       	com	r25
     c18:	81 95       	neg	r24
     c1a:	9f 4f       	sbci	r25, 0xFF	; 255
     c1c:	08 95       	ret

00000c1e <__divmodhi4_neg2>:
     c1e:	70 95       	com	r23
     c20:	61 95       	neg	r22
     c22:	7f 4f       	sbci	r23, 0xFF	; 255

00000c24 <__divmodhi4_exit>:
     c24:	08 95       	ret

00000c26 <__udivmodhi4>:
     c26:	aa 1b       	sub	r26, r26
     c28:	bb 1b       	sub	r27, r27
     c2a:	51 e1       	ldi	r21, 0x11	; 17
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <__udivmodhi4_ep>

00000c2e <__udivmodhi4_loop>:
     c2e:	aa 1f       	adc	r26, r26
     c30:	bb 1f       	adc	r27, r27
     c32:	a6 17       	cp	r26, r22
     c34:	b7 07       	cpc	r27, r23
     c36:	10 f0       	brcs	.+4      	; 0xc3c <__udivmodhi4_ep>
     c38:	a6 1b       	sub	r26, r22
     c3a:	b7 0b       	sbc	r27, r23

00000c3c <__udivmodhi4_ep>:
     c3c:	88 1f       	adc	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	5a 95       	dec	r21
     c42:	a9 f7       	brne	.-22     	; 0xc2e <__udivmodhi4_loop>
     c44:	80 95       	com	r24
     c46:	90 95       	com	r25
     c48:	bc 01       	movw	r22, r24
     c4a:	cd 01       	movw	r24, r26
     c4c:	08 95       	ret

00000c4e <malloc>:
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	82 30       	cpi	r24, 0x02	; 2
     c58:	91 05       	cpc	r25, r1
     c5a:	10 f4       	brcc	.+4      	; 0xc60 <malloc+0x12>
     c5c:	82 e0       	ldi	r24, 0x02	; 2
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <__flp>
     c64:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <__flp+0x1>
     c68:	20 e0       	ldi	r18, 0x00	; 0
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	a0 e0       	ldi	r26, 0x00	; 0
     c6e:	b0 e0       	ldi	r27, 0x00	; 0
     c70:	30 97       	sbiw	r30, 0x00	; 0
     c72:	19 f1       	breq	.+70     	; 0xcba <malloc+0x6c>
     c74:	40 81       	ld	r20, Z
     c76:	51 81       	ldd	r21, Z+1	; 0x01
     c78:	02 81       	ldd	r16, Z+2	; 0x02
     c7a:	13 81       	ldd	r17, Z+3	; 0x03
     c7c:	48 17       	cp	r20, r24
     c7e:	59 07       	cpc	r21, r25
     c80:	c8 f0       	brcs	.+50     	; 0xcb4 <malloc+0x66>
     c82:	84 17       	cp	r24, r20
     c84:	95 07       	cpc	r25, r21
     c86:	69 f4       	brne	.+26     	; 0xca2 <malloc+0x54>
     c88:	10 97       	sbiw	r26, 0x00	; 0
     c8a:	31 f0       	breq	.+12     	; 0xc98 <malloc+0x4a>
     c8c:	12 96       	adiw	r26, 0x02	; 2
     c8e:	0c 93       	st	X, r16
     c90:	12 97       	sbiw	r26, 0x02	; 2
     c92:	13 96       	adiw	r26, 0x03	; 3
     c94:	1c 93       	st	X, r17
     c96:	27 c0       	rjmp	.+78     	; 0xce6 <malloc+0x98>
     c98:	00 93 da 01 	sts	0x01DA, r16	; 0x8001da <__flp>
     c9c:	10 93 db 01 	sts	0x01DB, r17	; 0x8001db <__flp+0x1>
     ca0:	22 c0       	rjmp	.+68     	; 0xce6 <malloc+0x98>
     ca2:	21 15       	cp	r18, r1
     ca4:	31 05       	cpc	r19, r1
     ca6:	19 f0       	breq	.+6      	; 0xcae <malloc+0x60>
     ca8:	42 17       	cp	r20, r18
     caa:	53 07       	cpc	r21, r19
     cac:	18 f4       	brcc	.+6      	; 0xcb4 <malloc+0x66>
     cae:	9a 01       	movw	r18, r20
     cb0:	bd 01       	movw	r22, r26
     cb2:	ef 01       	movw	r28, r30
     cb4:	df 01       	movw	r26, r30
     cb6:	f8 01       	movw	r30, r16
     cb8:	db cf       	rjmp	.-74     	; 0xc70 <malloc+0x22>
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	f9 f0       	breq	.+62     	; 0xcfe <malloc+0xb0>
     cc0:	28 1b       	sub	r18, r24
     cc2:	39 0b       	sbc	r19, r25
     cc4:	24 30       	cpi	r18, 0x04	; 4
     cc6:	31 05       	cpc	r19, r1
     cc8:	80 f4       	brcc	.+32     	; 0xcea <malloc+0x9c>
     cca:	8a 81       	ldd	r24, Y+2	; 0x02
     ccc:	9b 81       	ldd	r25, Y+3	; 0x03
     cce:	61 15       	cp	r22, r1
     cd0:	71 05       	cpc	r23, r1
     cd2:	21 f0       	breq	.+8      	; 0xcdc <malloc+0x8e>
     cd4:	fb 01       	movw	r30, r22
     cd6:	93 83       	std	Z+3, r25	; 0x03
     cd8:	82 83       	std	Z+2, r24	; 0x02
     cda:	04 c0       	rjmp	.+8      	; 0xce4 <malloc+0x96>
     cdc:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <__flp+0x1>
     ce0:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <__flp>
     ce4:	fe 01       	movw	r30, r28
     ce6:	32 96       	adiw	r30, 0x02	; 2
     ce8:	44 c0       	rjmp	.+136    	; 0xd72 <malloc+0x124>
     cea:	fe 01       	movw	r30, r28
     cec:	e2 0f       	add	r30, r18
     cee:	f3 1f       	adc	r31, r19
     cf0:	81 93       	st	Z+, r24
     cf2:	91 93       	st	Z+, r25
     cf4:	22 50       	subi	r18, 0x02	; 2
     cf6:	31 09       	sbc	r19, r1
     cf8:	39 83       	std	Y+1, r19	; 0x01
     cfa:	28 83       	st	Y, r18
     cfc:	3a c0       	rjmp	.+116    	; 0xd72 <malloc+0x124>
     cfe:	20 91 d8 01 	lds	r18, 0x01D8	; 0x8001d8 <__data_end>
     d02:	30 91 d9 01 	lds	r19, 0x01D9	; 0x8001d9 <__data_end+0x1>
     d06:	23 2b       	or	r18, r19
     d08:	41 f4       	brne	.+16     	; 0xd1a <malloc+0xcc>
     d0a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     d0e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     d12:	30 93 d9 01 	sts	0x01D9, r19	; 0x8001d9 <__data_end+0x1>
     d16:	20 93 d8 01 	sts	0x01D8, r18	; 0x8001d8 <__data_end>
     d1a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     d1e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     d22:	21 15       	cp	r18, r1
     d24:	31 05       	cpc	r19, r1
     d26:	41 f4       	brne	.+16     	; 0xd38 <malloc+0xea>
     d28:	2d b7       	in	r18, 0x3d	; 61
     d2a:	3e b7       	in	r19, 0x3e	; 62
     d2c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     d30:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     d34:	24 1b       	sub	r18, r20
     d36:	35 0b       	sbc	r19, r21
     d38:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <__data_end>
     d3c:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <__data_end+0x1>
     d40:	e2 17       	cp	r30, r18
     d42:	f3 07       	cpc	r31, r19
     d44:	a0 f4       	brcc	.+40     	; 0xd6e <malloc+0x120>
     d46:	2e 1b       	sub	r18, r30
     d48:	3f 0b       	sbc	r19, r31
     d4a:	28 17       	cp	r18, r24
     d4c:	39 07       	cpc	r19, r25
     d4e:	78 f0       	brcs	.+30     	; 0xd6e <malloc+0x120>
     d50:	ac 01       	movw	r20, r24
     d52:	4e 5f       	subi	r20, 0xFE	; 254
     d54:	5f 4f       	sbci	r21, 0xFF	; 255
     d56:	24 17       	cp	r18, r20
     d58:	35 07       	cpc	r19, r21
     d5a:	48 f0       	brcs	.+18     	; 0xd6e <malloc+0x120>
     d5c:	4e 0f       	add	r20, r30
     d5e:	5f 1f       	adc	r21, r31
     d60:	50 93 d9 01 	sts	0x01D9, r21	; 0x8001d9 <__data_end+0x1>
     d64:	40 93 d8 01 	sts	0x01D8, r20	; 0x8001d8 <__data_end>
     d68:	81 93       	st	Z+, r24
     d6a:	91 93       	st	Z+, r25
     d6c:	02 c0       	rjmp	.+4      	; 0xd72 <malloc+0x124>
     d6e:	e0 e0       	ldi	r30, 0x00	; 0
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	cf 01       	movw	r24, r30
     d74:	df 91       	pop	r29
     d76:	cf 91       	pop	r28
     d78:	1f 91       	pop	r17
     d7a:	0f 91       	pop	r16
     d7c:	08 95       	ret

00000d7e <free>:
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	00 97       	sbiw	r24, 0x00	; 0
     d84:	09 f4       	brne	.+2      	; 0xd88 <free+0xa>
     d86:	81 c0       	rjmp	.+258    	; 0xe8a <free+0x10c>
     d88:	fc 01       	movw	r30, r24
     d8a:	32 97       	sbiw	r30, 0x02	; 2
     d8c:	13 82       	std	Z+3, r1	; 0x03
     d8e:	12 82       	std	Z+2, r1	; 0x02
     d90:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <__flp>
     d94:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <__flp+0x1>
     d98:	10 97       	sbiw	r26, 0x00	; 0
     d9a:	81 f4       	brne	.+32     	; 0xdbc <free+0x3e>
     d9c:	20 81       	ld	r18, Z
     d9e:	31 81       	ldd	r19, Z+1	; 0x01
     da0:	82 0f       	add	r24, r18
     da2:	93 1f       	adc	r25, r19
     da4:	20 91 d8 01 	lds	r18, 0x01D8	; 0x8001d8 <__data_end>
     da8:	30 91 d9 01 	lds	r19, 0x01D9	; 0x8001d9 <__data_end+0x1>
     dac:	28 17       	cp	r18, r24
     dae:	39 07       	cpc	r19, r25
     db0:	51 f5       	brne	.+84     	; 0xe06 <free+0x88>
     db2:	f0 93 d9 01 	sts	0x01D9, r31	; 0x8001d9 <__data_end+0x1>
     db6:	e0 93 d8 01 	sts	0x01D8, r30	; 0x8001d8 <__data_end>
     dba:	67 c0       	rjmp	.+206    	; 0xe8a <free+0x10c>
     dbc:	ed 01       	movw	r28, r26
     dbe:	20 e0       	ldi	r18, 0x00	; 0
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	ce 17       	cp	r28, r30
     dc4:	df 07       	cpc	r29, r31
     dc6:	40 f4       	brcc	.+16     	; 0xdd8 <free+0x5a>
     dc8:	4a 81       	ldd	r20, Y+2	; 0x02
     dca:	5b 81       	ldd	r21, Y+3	; 0x03
     dcc:	9e 01       	movw	r18, r28
     dce:	41 15       	cp	r20, r1
     dd0:	51 05       	cpc	r21, r1
     dd2:	f1 f0       	breq	.+60     	; 0xe10 <free+0x92>
     dd4:	ea 01       	movw	r28, r20
     dd6:	f5 cf       	rjmp	.-22     	; 0xdc2 <free+0x44>
     dd8:	d3 83       	std	Z+3, r29	; 0x03
     dda:	c2 83       	std	Z+2, r28	; 0x02
     ddc:	40 81       	ld	r20, Z
     dde:	51 81       	ldd	r21, Z+1	; 0x01
     de0:	84 0f       	add	r24, r20
     de2:	95 1f       	adc	r25, r21
     de4:	c8 17       	cp	r28, r24
     de6:	d9 07       	cpc	r29, r25
     de8:	59 f4       	brne	.+22     	; 0xe00 <free+0x82>
     dea:	88 81       	ld	r24, Y
     dec:	99 81       	ldd	r25, Y+1	; 0x01
     dee:	84 0f       	add	r24, r20
     df0:	95 1f       	adc	r25, r21
     df2:	02 96       	adiw	r24, 0x02	; 2
     df4:	91 83       	std	Z+1, r25	; 0x01
     df6:	80 83       	st	Z, r24
     df8:	8a 81       	ldd	r24, Y+2	; 0x02
     dfa:	9b 81       	ldd	r25, Y+3	; 0x03
     dfc:	93 83       	std	Z+3, r25	; 0x03
     dfe:	82 83       	std	Z+2, r24	; 0x02
     e00:	21 15       	cp	r18, r1
     e02:	31 05       	cpc	r19, r1
     e04:	29 f4       	brne	.+10     	; 0xe10 <free+0x92>
     e06:	f0 93 db 01 	sts	0x01DB, r31	; 0x8001db <__flp+0x1>
     e0a:	e0 93 da 01 	sts	0x01DA, r30	; 0x8001da <__flp>
     e0e:	3d c0       	rjmp	.+122    	; 0xe8a <free+0x10c>
     e10:	e9 01       	movw	r28, r18
     e12:	fb 83       	std	Y+3, r31	; 0x03
     e14:	ea 83       	std	Y+2, r30	; 0x02
     e16:	49 91       	ld	r20, Y+
     e18:	59 91       	ld	r21, Y+
     e1a:	c4 0f       	add	r28, r20
     e1c:	d5 1f       	adc	r29, r21
     e1e:	ec 17       	cp	r30, r28
     e20:	fd 07       	cpc	r31, r29
     e22:	61 f4       	brne	.+24     	; 0xe3c <free+0xbe>
     e24:	80 81       	ld	r24, Z
     e26:	91 81       	ldd	r25, Z+1	; 0x01
     e28:	84 0f       	add	r24, r20
     e2a:	95 1f       	adc	r25, r21
     e2c:	02 96       	adiw	r24, 0x02	; 2
     e2e:	e9 01       	movw	r28, r18
     e30:	99 83       	std	Y+1, r25	; 0x01
     e32:	88 83       	st	Y, r24
     e34:	82 81       	ldd	r24, Z+2	; 0x02
     e36:	93 81       	ldd	r25, Z+3	; 0x03
     e38:	9b 83       	std	Y+3, r25	; 0x03
     e3a:	8a 83       	std	Y+2, r24	; 0x02
     e3c:	e0 e0       	ldi	r30, 0x00	; 0
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	12 96       	adiw	r26, 0x02	; 2
     e42:	8d 91       	ld	r24, X+
     e44:	9c 91       	ld	r25, X
     e46:	13 97       	sbiw	r26, 0x03	; 3
     e48:	00 97       	sbiw	r24, 0x00	; 0
     e4a:	19 f0       	breq	.+6      	; 0xe52 <free+0xd4>
     e4c:	fd 01       	movw	r30, r26
     e4e:	dc 01       	movw	r26, r24
     e50:	f7 cf       	rjmp	.-18     	; 0xe40 <free+0xc2>
     e52:	8d 91       	ld	r24, X+
     e54:	9c 91       	ld	r25, X
     e56:	11 97       	sbiw	r26, 0x01	; 1
     e58:	9d 01       	movw	r18, r26
     e5a:	2e 5f       	subi	r18, 0xFE	; 254
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	82 0f       	add	r24, r18
     e60:	93 1f       	adc	r25, r19
     e62:	20 91 d8 01 	lds	r18, 0x01D8	; 0x8001d8 <__data_end>
     e66:	30 91 d9 01 	lds	r19, 0x01D9	; 0x8001d9 <__data_end+0x1>
     e6a:	28 17       	cp	r18, r24
     e6c:	39 07       	cpc	r19, r25
     e6e:	69 f4       	brne	.+26     	; 0xe8a <free+0x10c>
     e70:	30 97       	sbiw	r30, 0x00	; 0
     e72:	29 f4       	brne	.+10     	; 0xe7e <free+0x100>
     e74:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <__flp+0x1>
     e78:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <__flp>
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <free+0x104>
     e7e:	13 82       	std	Z+3, r1	; 0x03
     e80:	12 82       	std	Z+2, r1	; 0x02
     e82:	b0 93 d9 01 	sts	0x01D9, r27	; 0x8001d9 <__data_end+0x1>
     e86:	a0 93 d8 01 	sts	0x01D8, r26	; 0x8001d8 <__data_end>
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	08 95       	ret

00000e90 <strdup>:
     e90:	0f 93       	push	r16
     e92:	1f 93       	push	r17
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
     e98:	8c 01       	movw	r16, r24
     e9a:	fc 01       	movw	r30, r24
     e9c:	01 90       	ld	r0, Z+
     e9e:	00 20       	and	r0, r0
     ea0:	e9 f7       	brne	.-6      	; 0xe9c <strdup+0xc>
     ea2:	cf 01       	movw	r24, r30
     ea4:	80 1b       	sub	r24, r16
     ea6:	91 0b       	sbc	r25, r17
     ea8:	0e 94 27 06 	call	0xc4e	; 0xc4e <malloc>
     eac:	ec 01       	movw	r28, r24
     eae:	00 97       	sbiw	r24, 0x00	; 0
     eb0:	19 f0       	breq	.+6      	; 0xeb8 <strdup+0x28>
     eb2:	b8 01       	movw	r22, r16
     eb4:	0e 94 6b 07 	call	0xed6	; 0xed6 <strcpy>
     eb8:	ce 01       	movw	r24, r28
     eba:	df 91       	pop	r29
     ebc:	cf 91       	pop	r28
     ebe:	1f 91       	pop	r17
     ec0:	0f 91       	pop	r16
     ec2:	08 95       	ret

00000ec4 <strcmp>:
     ec4:	fb 01       	movw	r30, r22
     ec6:	dc 01       	movw	r26, r24
     ec8:	8d 91       	ld	r24, X+
     eca:	01 90       	ld	r0, Z+
     ecc:	80 19       	sub	r24, r0
     ece:	01 10       	cpse	r0, r1
     ed0:	d9 f3       	breq	.-10     	; 0xec8 <strcmp+0x4>
     ed2:	99 0b       	sbc	r25, r25
     ed4:	08 95       	ret

00000ed6 <strcpy>:
     ed6:	fb 01       	movw	r30, r22
     ed8:	dc 01       	movw	r26, r24
     eda:	01 90       	ld	r0, Z+
     edc:	0d 92       	st	X+, r0
     ede:	00 20       	and	r0, r0
     ee0:	e1 f7       	brne	.-8      	; 0xeda <strcpy+0x4>
     ee2:	08 95       	ret

00000ee4 <printf>:
     ee4:	a0 e0       	ldi	r26, 0x00	; 0
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	e8 e7       	ldi	r30, 0x78	; 120
     eea:	f7 e0       	ldi	r31, 0x07	; 7
     eec:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <__prologue_saves__+0x20>
     ef0:	ae 01       	movw	r20, r28
     ef2:	4b 5f       	subi	r20, 0xFB	; 251
     ef4:	5f 4f       	sbci	r21, 0xFF	; 255
     ef6:	fa 01       	movw	r30, r20
     ef8:	61 91       	ld	r22, Z+
     efa:	71 91       	ld	r23, Z+
     efc:	af 01       	movw	r20, r30
     efe:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <__iob+0x2>
     f02:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <__iob+0x3>
     f06:	0e 94 8f 07 	call	0xf1e	; 0xf1e <vfprintf>
     f0a:	e2 e0       	ldi	r30, 0x02	; 2
     f0c:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__epilogue_restores__+0x20>

00000f10 <putchar>:
     f10:	60 91 de 01 	lds	r22, 0x01DE	; 0x8001de <__iob+0x2>
     f14:	70 91 df 01 	lds	r23, 0x01DF	; 0x8001df <__iob+0x3>
     f18:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
     f1c:	08 95       	ret

00000f1e <vfprintf>:
     f1e:	ab e0       	ldi	r26, 0x0B	; 11
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	e5 e9       	ldi	r30, 0x95	; 149
     f24:	f7 e0       	ldi	r31, 0x07	; 7
     f26:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__prologue_saves__>
     f2a:	6c 01       	movw	r12, r24
     f2c:	7b 01       	movw	r14, r22
     f2e:	8a 01       	movw	r16, r20
     f30:	fc 01       	movw	r30, r24
     f32:	17 82       	std	Z+7, r1	; 0x07
     f34:	16 82       	std	Z+6, r1	; 0x06
     f36:	83 81       	ldd	r24, Z+3	; 0x03
     f38:	81 ff       	sbrs	r24, 1
     f3a:	cc c1       	rjmp	.+920    	; 0x12d4 <vfprintf+0x3b6>
     f3c:	ce 01       	movw	r24, r28
     f3e:	01 96       	adiw	r24, 0x01	; 1
     f40:	3c 01       	movw	r6, r24
     f42:	f6 01       	movw	r30, r12
     f44:	93 81       	ldd	r25, Z+3	; 0x03
     f46:	f7 01       	movw	r30, r14
     f48:	93 fd       	sbrc	r25, 3
     f4a:	85 91       	lpm	r24, Z+
     f4c:	93 ff       	sbrs	r25, 3
     f4e:	81 91       	ld	r24, Z+
     f50:	7f 01       	movw	r14, r30
     f52:	88 23       	and	r24, r24
     f54:	09 f4       	brne	.+2      	; 0xf58 <vfprintf+0x3a>
     f56:	ba c1       	rjmp	.+884    	; 0x12cc <vfprintf+0x3ae>
     f58:	85 32       	cpi	r24, 0x25	; 37
     f5a:	39 f4       	brne	.+14     	; 0xf6a <vfprintf+0x4c>
     f5c:	93 fd       	sbrc	r25, 3
     f5e:	85 91       	lpm	r24, Z+
     f60:	93 ff       	sbrs	r25, 3
     f62:	81 91       	ld	r24, Z+
     f64:	7f 01       	movw	r14, r30
     f66:	85 32       	cpi	r24, 0x25	; 37
     f68:	29 f4       	brne	.+10     	; 0xf74 <vfprintf+0x56>
     f6a:	b6 01       	movw	r22, r12
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
     f72:	e7 cf       	rjmp	.-50     	; 0xf42 <vfprintf+0x24>
     f74:	91 2c       	mov	r9, r1
     f76:	21 2c       	mov	r2, r1
     f78:	31 2c       	mov	r3, r1
     f7a:	ff e1       	ldi	r31, 0x1F	; 31
     f7c:	f3 15       	cp	r31, r3
     f7e:	d8 f0       	brcs	.+54     	; 0xfb6 <vfprintf+0x98>
     f80:	8b 32       	cpi	r24, 0x2B	; 43
     f82:	79 f0       	breq	.+30     	; 0xfa2 <vfprintf+0x84>
     f84:	38 f4       	brcc	.+14     	; 0xf94 <vfprintf+0x76>
     f86:	80 32       	cpi	r24, 0x20	; 32
     f88:	79 f0       	breq	.+30     	; 0xfa8 <vfprintf+0x8a>
     f8a:	83 32       	cpi	r24, 0x23	; 35
     f8c:	a1 f4       	brne	.+40     	; 0xfb6 <vfprintf+0x98>
     f8e:	23 2d       	mov	r18, r3
     f90:	20 61       	ori	r18, 0x10	; 16
     f92:	1d c0       	rjmp	.+58     	; 0xfce <vfprintf+0xb0>
     f94:	8d 32       	cpi	r24, 0x2D	; 45
     f96:	61 f0       	breq	.+24     	; 0xfb0 <vfprintf+0x92>
     f98:	80 33       	cpi	r24, 0x30	; 48
     f9a:	69 f4       	brne	.+26     	; 0xfb6 <vfprintf+0x98>
     f9c:	23 2d       	mov	r18, r3
     f9e:	21 60       	ori	r18, 0x01	; 1
     fa0:	16 c0       	rjmp	.+44     	; 0xfce <vfprintf+0xb0>
     fa2:	83 2d       	mov	r24, r3
     fa4:	82 60       	ori	r24, 0x02	; 2
     fa6:	38 2e       	mov	r3, r24
     fa8:	e3 2d       	mov	r30, r3
     faa:	e4 60       	ori	r30, 0x04	; 4
     fac:	3e 2e       	mov	r3, r30
     fae:	2a c0       	rjmp	.+84     	; 0x1004 <vfprintf+0xe6>
     fb0:	f3 2d       	mov	r31, r3
     fb2:	f8 60       	ori	r31, 0x08	; 8
     fb4:	1d c0       	rjmp	.+58     	; 0xff0 <vfprintf+0xd2>
     fb6:	37 fc       	sbrc	r3, 7
     fb8:	2d c0       	rjmp	.+90     	; 0x1014 <vfprintf+0xf6>
     fba:	20 ed       	ldi	r18, 0xD0	; 208
     fbc:	28 0f       	add	r18, r24
     fbe:	2a 30       	cpi	r18, 0x0A	; 10
     fc0:	40 f0       	brcs	.+16     	; 0xfd2 <vfprintf+0xb4>
     fc2:	8e 32       	cpi	r24, 0x2E	; 46
     fc4:	b9 f4       	brne	.+46     	; 0xff4 <vfprintf+0xd6>
     fc6:	36 fc       	sbrc	r3, 6
     fc8:	81 c1       	rjmp	.+770    	; 0x12cc <vfprintf+0x3ae>
     fca:	23 2d       	mov	r18, r3
     fcc:	20 64       	ori	r18, 0x40	; 64
     fce:	32 2e       	mov	r3, r18
     fd0:	19 c0       	rjmp	.+50     	; 0x1004 <vfprintf+0xe6>
     fd2:	36 fe       	sbrs	r3, 6
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0xc4>
     fd6:	8a e0       	ldi	r24, 0x0A	; 10
     fd8:	98 9e       	mul	r9, r24
     fda:	20 0d       	add	r18, r0
     fdc:	11 24       	eor	r1, r1
     fde:	92 2e       	mov	r9, r18
     fe0:	11 c0       	rjmp	.+34     	; 0x1004 <vfprintf+0xe6>
     fe2:	ea e0       	ldi	r30, 0x0A	; 10
     fe4:	2e 9e       	mul	r2, r30
     fe6:	20 0d       	add	r18, r0
     fe8:	11 24       	eor	r1, r1
     fea:	22 2e       	mov	r2, r18
     fec:	f3 2d       	mov	r31, r3
     fee:	f0 62       	ori	r31, 0x20	; 32
     ff0:	3f 2e       	mov	r3, r31
     ff2:	08 c0       	rjmp	.+16     	; 0x1004 <vfprintf+0xe6>
     ff4:	8c 36       	cpi	r24, 0x6C	; 108
     ff6:	21 f4       	brne	.+8      	; 0x1000 <vfprintf+0xe2>
     ff8:	83 2d       	mov	r24, r3
     ffa:	80 68       	ori	r24, 0x80	; 128
     ffc:	38 2e       	mov	r3, r24
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <vfprintf+0xe6>
    1000:	88 36       	cpi	r24, 0x68	; 104
    1002:	41 f4       	brne	.+16     	; 0x1014 <vfprintf+0xf6>
    1004:	f7 01       	movw	r30, r14
    1006:	93 fd       	sbrc	r25, 3
    1008:	85 91       	lpm	r24, Z+
    100a:	93 ff       	sbrs	r25, 3
    100c:	81 91       	ld	r24, Z+
    100e:	7f 01       	movw	r14, r30
    1010:	81 11       	cpse	r24, r1
    1012:	b3 cf       	rjmp	.-154    	; 0xf7a <vfprintf+0x5c>
    1014:	98 2f       	mov	r25, r24
    1016:	9f 7d       	andi	r25, 0xDF	; 223
    1018:	95 54       	subi	r25, 0x45	; 69
    101a:	93 30       	cpi	r25, 0x03	; 3
    101c:	28 f4       	brcc	.+10     	; 0x1028 <vfprintf+0x10a>
    101e:	0c 5f       	subi	r16, 0xFC	; 252
    1020:	1f 4f       	sbci	r17, 0xFF	; 255
    1022:	9f e3       	ldi	r25, 0x3F	; 63
    1024:	99 83       	std	Y+1, r25	; 0x01
    1026:	0d c0       	rjmp	.+26     	; 0x1042 <vfprintf+0x124>
    1028:	83 36       	cpi	r24, 0x63	; 99
    102a:	31 f0       	breq	.+12     	; 0x1038 <vfprintf+0x11a>
    102c:	83 37       	cpi	r24, 0x73	; 115
    102e:	71 f0       	breq	.+28     	; 0x104c <vfprintf+0x12e>
    1030:	83 35       	cpi	r24, 0x53	; 83
    1032:	09 f0       	breq	.+2      	; 0x1036 <vfprintf+0x118>
    1034:	59 c0       	rjmp	.+178    	; 0x10e8 <vfprintf+0x1ca>
    1036:	21 c0       	rjmp	.+66     	; 0x107a <vfprintf+0x15c>
    1038:	f8 01       	movw	r30, r16
    103a:	80 81       	ld	r24, Z
    103c:	89 83       	std	Y+1, r24	; 0x01
    103e:	0e 5f       	subi	r16, 0xFE	; 254
    1040:	1f 4f       	sbci	r17, 0xFF	; 255
    1042:	88 24       	eor	r8, r8
    1044:	83 94       	inc	r8
    1046:	91 2c       	mov	r9, r1
    1048:	53 01       	movw	r10, r6
    104a:	13 c0       	rjmp	.+38     	; 0x1072 <vfprintf+0x154>
    104c:	28 01       	movw	r4, r16
    104e:	f2 e0       	ldi	r31, 0x02	; 2
    1050:	4f 0e       	add	r4, r31
    1052:	51 1c       	adc	r5, r1
    1054:	f8 01       	movw	r30, r16
    1056:	a0 80       	ld	r10, Z
    1058:	b1 80       	ldd	r11, Z+1	; 0x01
    105a:	36 fe       	sbrs	r3, 6
    105c:	03 c0       	rjmp	.+6      	; 0x1064 <vfprintf+0x146>
    105e:	69 2d       	mov	r22, r9
    1060:	70 e0       	ldi	r23, 0x00	; 0
    1062:	02 c0       	rjmp	.+4      	; 0x1068 <vfprintf+0x14a>
    1064:	6f ef       	ldi	r22, 0xFF	; 255
    1066:	7f ef       	ldi	r23, 0xFF	; 255
    1068:	c5 01       	movw	r24, r10
    106a:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <strnlen>
    106e:	4c 01       	movw	r8, r24
    1070:	82 01       	movw	r16, r4
    1072:	f3 2d       	mov	r31, r3
    1074:	ff 77       	andi	r31, 0x7F	; 127
    1076:	3f 2e       	mov	r3, r31
    1078:	16 c0       	rjmp	.+44     	; 0x10a6 <vfprintf+0x188>
    107a:	28 01       	movw	r4, r16
    107c:	22 e0       	ldi	r18, 0x02	; 2
    107e:	42 0e       	add	r4, r18
    1080:	51 1c       	adc	r5, r1
    1082:	f8 01       	movw	r30, r16
    1084:	a0 80       	ld	r10, Z
    1086:	b1 80       	ldd	r11, Z+1	; 0x01
    1088:	36 fe       	sbrs	r3, 6
    108a:	03 c0       	rjmp	.+6      	; 0x1092 <vfprintf+0x174>
    108c:	69 2d       	mov	r22, r9
    108e:	70 e0       	ldi	r23, 0x00	; 0
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <vfprintf+0x178>
    1092:	6f ef       	ldi	r22, 0xFF	; 255
    1094:	7f ef       	ldi	r23, 0xFF	; 255
    1096:	c5 01       	movw	r24, r10
    1098:	0e 94 70 09 	call	0x12e0	; 0x12e0 <strnlen_P>
    109c:	4c 01       	movw	r8, r24
    109e:	f3 2d       	mov	r31, r3
    10a0:	f0 68       	ori	r31, 0x80	; 128
    10a2:	3f 2e       	mov	r3, r31
    10a4:	82 01       	movw	r16, r4
    10a6:	33 fc       	sbrc	r3, 3
    10a8:	1b c0       	rjmp	.+54     	; 0x10e0 <vfprintf+0x1c2>
    10aa:	82 2d       	mov	r24, r2
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	88 16       	cp	r8, r24
    10b0:	99 06       	cpc	r9, r25
    10b2:	b0 f4       	brcc	.+44     	; 0x10e0 <vfprintf+0x1c2>
    10b4:	b6 01       	movw	r22, r12
    10b6:	80 e2       	ldi	r24, 0x20	; 32
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    10be:	2a 94       	dec	r2
    10c0:	f4 cf       	rjmp	.-24     	; 0x10aa <vfprintf+0x18c>
    10c2:	f5 01       	movw	r30, r10
    10c4:	37 fc       	sbrc	r3, 7
    10c6:	85 91       	lpm	r24, Z+
    10c8:	37 fe       	sbrs	r3, 7
    10ca:	81 91       	ld	r24, Z+
    10cc:	5f 01       	movw	r10, r30
    10ce:	b6 01       	movw	r22, r12
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    10d6:	21 10       	cpse	r2, r1
    10d8:	2a 94       	dec	r2
    10da:	21 e0       	ldi	r18, 0x01	; 1
    10dc:	82 1a       	sub	r8, r18
    10de:	91 08       	sbc	r9, r1
    10e0:	81 14       	cp	r8, r1
    10e2:	91 04       	cpc	r9, r1
    10e4:	71 f7       	brne	.-36     	; 0x10c2 <vfprintf+0x1a4>
    10e6:	e8 c0       	rjmp	.+464    	; 0x12b8 <vfprintf+0x39a>
    10e8:	84 36       	cpi	r24, 0x64	; 100
    10ea:	11 f0       	breq	.+4      	; 0x10f0 <vfprintf+0x1d2>
    10ec:	89 36       	cpi	r24, 0x69	; 105
    10ee:	41 f5       	brne	.+80     	; 0x1140 <vfprintf+0x222>
    10f0:	f8 01       	movw	r30, r16
    10f2:	37 fe       	sbrs	r3, 7
    10f4:	07 c0       	rjmp	.+14     	; 0x1104 <vfprintf+0x1e6>
    10f6:	60 81       	ld	r22, Z
    10f8:	71 81       	ldd	r23, Z+1	; 0x01
    10fa:	82 81       	ldd	r24, Z+2	; 0x02
    10fc:	93 81       	ldd	r25, Z+3	; 0x03
    10fe:	0c 5f       	subi	r16, 0xFC	; 252
    1100:	1f 4f       	sbci	r17, 0xFF	; 255
    1102:	08 c0       	rjmp	.+16     	; 0x1114 <vfprintf+0x1f6>
    1104:	60 81       	ld	r22, Z
    1106:	71 81       	ldd	r23, Z+1	; 0x01
    1108:	07 2e       	mov	r0, r23
    110a:	00 0c       	add	r0, r0
    110c:	88 0b       	sbc	r24, r24
    110e:	99 0b       	sbc	r25, r25
    1110:	0e 5f       	subi	r16, 0xFE	; 254
    1112:	1f 4f       	sbci	r17, 0xFF	; 255
    1114:	f3 2d       	mov	r31, r3
    1116:	ff 76       	andi	r31, 0x6F	; 111
    1118:	3f 2e       	mov	r3, r31
    111a:	97 ff       	sbrs	r25, 7
    111c:	09 c0       	rjmp	.+18     	; 0x1130 <vfprintf+0x212>
    111e:	90 95       	com	r25
    1120:	80 95       	com	r24
    1122:	70 95       	com	r23
    1124:	61 95       	neg	r22
    1126:	7f 4f       	sbci	r23, 0xFF	; 255
    1128:	8f 4f       	sbci	r24, 0xFF	; 255
    112a:	9f 4f       	sbci	r25, 0xFF	; 255
    112c:	f0 68       	ori	r31, 0x80	; 128
    112e:	3f 2e       	mov	r3, r31
    1130:	2a e0       	ldi	r18, 0x0A	; 10
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	a3 01       	movw	r20, r6
    1136:	0e 94 c2 09 	call	0x1384	; 0x1384 <__ultoa_invert>
    113a:	88 2e       	mov	r8, r24
    113c:	86 18       	sub	r8, r6
    113e:	45 c0       	rjmp	.+138    	; 0x11ca <vfprintf+0x2ac>
    1140:	85 37       	cpi	r24, 0x75	; 117
    1142:	31 f4       	brne	.+12     	; 0x1150 <vfprintf+0x232>
    1144:	23 2d       	mov	r18, r3
    1146:	2f 7e       	andi	r18, 0xEF	; 239
    1148:	b2 2e       	mov	r11, r18
    114a:	2a e0       	ldi	r18, 0x0A	; 10
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	25 c0       	rjmp	.+74     	; 0x119a <vfprintf+0x27c>
    1150:	93 2d       	mov	r25, r3
    1152:	99 7f       	andi	r25, 0xF9	; 249
    1154:	b9 2e       	mov	r11, r25
    1156:	8f 36       	cpi	r24, 0x6F	; 111
    1158:	c1 f0       	breq	.+48     	; 0x118a <vfprintf+0x26c>
    115a:	18 f4       	brcc	.+6      	; 0x1162 <vfprintf+0x244>
    115c:	88 35       	cpi	r24, 0x58	; 88
    115e:	79 f0       	breq	.+30     	; 0x117e <vfprintf+0x260>
    1160:	b5 c0       	rjmp	.+362    	; 0x12cc <vfprintf+0x3ae>
    1162:	80 37       	cpi	r24, 0x70	; 112
    1164:	19 f0       	breq	.+6      	; 0x116c <vfprintf+0x24e>
    1166:	88 37       	cpi	r24, 0x78	; 120
    1168:	21 f0       	breq	.+8      	; 0x1172 <vfprintf+0x254>
    116a:	b0 c0       	rjmp	.+352    	; 0x12cc <vfprintf+0x3ae>
    116c:	e9 2f       	mov	r30, r25
    116e:	e0 61       	ori	r30, 0x10	; 16
    1170:	be 2e       	mov	r11, r30
    1172:	b4 fe       	sbrs	r11, 4
    1174:	0d c0       	rjmp	.+26     	; 0x1190 <vfprintf+0x272>
    1176:	fb 2d       	mov	r31, r11
    1178:	f4 60       	ori	r31, 0x04	; 4
    117a:	bf 2e       	mov	r11, r31
    117c:	09 c0       	rjmp	.+18     	; 0x1190 <vfprintf+0x272>
    117e:	34 fe       	sbrs	r3, 4
    1180:	0a c0       	rjmp	.+20     	; 0x1196 <vfprintf+0x278>
    1182:	29 2f       	mov	r18, r25
    1184:	26 60       	ori	r18, 0x06	; 6
    1186:	b2 2e       	mov	r11, r18
    1188:	06 c0       	rjmp	.+12     	; 0x1196 <vfprintf+0x278>
    118a:	28 e0       	ldi	r18, 0x08	; 8
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	05 c0       	rjmp	.+10     	; 0x119a <vfprintf+0x27c>
    1190:	20 e1       	ldi	r18, 0x10	; 16
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	02 c0       	rjmp	.+4      	; 0x119a <vfprintf+0x27c>
    1196:	20 e1       	ldi	r18, 0x10	; 16
    1198:	32 e0       	ldi	r19, 0x02	; 2
    119a:	f8 01       	movw	r30, r16
    119c:	b7 fe       	sbrs	r11, 7
    119e:	07 c0       	rjmp	.+14     	; 0x11ae <vfprintf+0x290>
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	0c 5f       	subi	r16, 0xFC	; 252
    11aa:	1f 4f       	sbci	r17, 0xFF	; 255
    11ac:	06 c0       	rjmp	.+12     	; 0x11ba <vfprintf+0x29c>
    11ae:	60 81       	ld	r22, Z
    11b0:	71 81       	ldd	r23, Z+1	; 0x01
    11b2:	80 e0       	ldi	r24, 0x00	; 0
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 5f       	subi	r16, 0xFE	; 254
    11b8:	1f 4f       	sbci	r17, 0xFF	; 255
    11ba:	a3 01       	movw	r20, r6
    11bc:	0e 94 c2 09 	call	0x1384	; 0x1384 <__ultoa_invert>
    11c0:	88 2e       	mov	r8, r24
    11c2:	86 18       	sub	r8, r6
    11c4:	fb 2d       	mov	r31, r11
    11c6:	ff 77       	andi	r31, 0x7F	; 127
    11c8:	3f 2e       	mov	r3, r31
    11ca:	36 fe       	sbrs	r3, 6
    11cc:	0d c0       	rjmp	.+26     	; 0x11e8 <vfprintf+0x2ca>
    11ce:	23 2d       	mov	r18, r3
    11d0:	2e 7f       	andi	r18, 0xFE	; 254
    11d2:	a2 2e       	mov	r10, r18
    11d4:	89 14       	cp	r8, r9
    11d6:	58 f4       	brcc	.+22     	; 0x11ee <vfprintf+0x2d0>
    11d8:	34 fe       	sbrs	r3, 4
    11da:	0b c0       	rjmp	.+22     	; 0x11f2 <vfprintf+0x2d4>
    11dc:	32 fc       	sbrc	r3, 2
    11de:	09 c0       	rjmp	.+18     	; 0x11f2 <vfprintf+0x2d4>
    11e0:	83 2d       	mov	r24, r3
    11e2:	8e 7e       	andi	r24, 0xEE	; 238
    11e4:	a8 2e       	mov	r10, r24
    11e6:	05 c0       	rjmp	.+10     	; 0x11f2 <vfprintf+0x2d4>
    11e8:	b8 2c       	mov	r11, r8
    11ea:	a3 2c       	mov	r10, r3
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <vfprintf+0x2d6>
    11ee:	b8 2c       	mov	r11, r8
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <vfprintf+0x2d6>
    11f2:	b9 2c       	mov	r11, r9
    11f4:	a4 fe       	sbrs	r10, 4
    11f6:	0f c0       	rjmp	.+30     	; 0x1216 <vfprintf+0x2f8>
    11f8:	fe 01       	movw	r30, r28
    11fa:	e8 0d       	add	r30, r8
    11fc:	f1 1d       	adc	r31, r1
    11fe:	80 81       	ld	r24, Z
    1200:	80 33       	cpi	r24, 0x30	; 48
    1202:	21 f4       	brne	.+8      	; 0x120c <vfprintf+0x2ee>
    1204:	9a 2d       	mov	r25, r10
    1206:	99 7e       	andi	r25, 0xE9	; 233
    1208:	a9 2e       	mov	r10, r25
    120a:	09 c0       	rjmp	.+18     	; 0x121e <vfprintf+0x300>
    120c:	a2 fe       	sbrs	r10, 2
    120e:	06 c0       	rjmp	.+12     	; 0x121c <vfprintf+0x2fe>
    1210:	b3 94       	inc	r11
    1212:	b3 94       	inc	r11
    1214:	04 c0       	rjmp	.+8      	; 0x121e <vfprintf+0x300>
    1216:	8a 2d       	mov	r24, r10
    1218:	86 78       	andi	r24, 0x86	; 134
    121a:	09 f0       	breq	.+2      	; 0x121e <vfprintf+0x300>
    121c:	b3 94       	inc	r11
    121e:	a3 fc       	sbrc	r10, 3
    1220:	11 c0       	rjmp	.+34     	; 0x1244 <vfprintf+0x326>
    1222:	a0 fe       	sbrs	r10, 0
    1224:	06 c0       	rjmp	.+12     	; 0x1232 <vfprintf+0x314>
    1226:	b2 14       	cp	r11, r2
    1228:	88 f4       	brcc	.+34     	; 0x124c <vfprintf+0x32e>
    122a:	28 0c       	add	r2, r8
    122c:	92 2c       	mov	r9, r2
    122e:	9b 18       	sub	r9, r11
    1230:	0e c0       	rjmp	.+28     	; 0x124e <vfprintf+0x330>
    1232:	b2 14       	cp	r11, r2
    1234:	60 f4       	brcc	.+24     	; 0x124e <vfprintf+0x330>
    1236:	b6 01       	movw	r22, r12
    1238:	80 e2       	ldi	r24, 0x20	; 32
    123a:	90 e0       	ldi	r25, 0x00	; 0
    123c:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    1240:	b3 94       	inc	r11
    1242:	f7 cf       	rjmp	.-18     	; 0x1232 <vfprintf+0x314>
    1244:	b2 14       	cp	r11, r2
    1246:	18 f4       	brcc	.+6      	; 0x124e <vfprintf+0x330>
    1248:	2b 18       	sub	r2, r11
    124a:	02 c0       	rjmp	.+4      	; 0x1250 <vfprintf+0x332>
    124c:	98 2c       	mov	r9, r8
    124e:	21 2c       	mov	r2, r1
    1250:	a4 fe       	sbrs	r10, 4
    1252:	10 c0       	rjmp	.+32     	; 0x1274 <vfprintf+0x356>
    1254:	b6 01       	movw	r22, r12
    1256:	80 e3       	ldi	r24, 0x30	; 48
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    125e:	a2 fe       	sbrs	r10, 2
    1260:	17 c0       	rjmp	.+46     	; 0x1290 <vfprintf+0x372>
    1262:	a1 fc       	sbrc	r10, 1
    1264:	03 c0       	rjmp	.+6      	; 0x126c <vfprintf+0x34e>
    1266:	88 e7       	ldi	r24, 0x78	; 120
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <vfprintf+0x352>
    126c:	88 e5       	ldi	r24, 0x58	; 88
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	b6 01       	movw	r22, r12
    1272:	0c c0       	rjmp	.+24     	; 0x128c <vfprintf+0x36e>
    1274:	8a 2d       	mov	r24, r10
    1276:	86 78       	andi	r24, 0x86	; 134
    1278:	59 f0       	breq	.+22     	; 0x1290 <vfprintf+0x372>
    127a:	a1 fe       	sbrs	r10, 1
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <vfprintf+0x364>
    127e:	8b e2       	ldi	r24, 0x2B	; 43
    1280:	01 c0       	rjmp	.+2      	; 0x1284 <vfprintf+0x366>
    1282:	80 e2       	ldi	r24, 0x20	; 32
    1284:	a7 fc       	sbrc	r10, 7
    1286:	8d e2       	ldi	r24, 0x2D	; 45
    1288:	b6 01       	movw	r22, r12
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    1290:	89 14       	cp	r8, r9
    1292:	38 f4       	brcc	.+14     	; 0x12a2 <vfprintf+0x384>
    1294:	b6 01       	movw	r22, r12
    1296:	80 e3       	ldi	r24, 0x30	; 48
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    129e:	9a 94       	dec	r9
    12a0:	f7 cf       	rjmp	.-18     	; 0x1290 <vfprintf+0x372>
    12a2:	8a 94       	dec	r8
    12a4:	f3 01       	movw	r30, r6
    12a6:	e8 0d       	add	r30, r8
    12a8:	f1 1d       	adc	r31, r1
    12aa:	80 81       	ld	r24, Z
    12ac:	b6 01       	movw	r22, r12
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    12b4:	81 10       	cpse	r8, r1
    12b6:	f5 cf       	rjmp	.-22     	; 0x12a2 <vfprintf+0x384>
    12b8:	22 20       	and	r2, r2
    12ba:	09 f4       	brne	.+2      	; 0x12be <vfprintf+0x3a0>
    12bc:	42 ce       	rjmp	.-892    	; 0xf42 <vfprintf+0x24>
    12be:	b6 01       	movw	r22, r12
    12c0:	80 e2       	ldi	r24, 0x20	; 32
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	0e 94 86 09 	call	0x130c	; 0x130c <fputc>
    12c8:	2a 94       	dec	r2
    12ca:	f6 cf       	rjmp	.-20     	; 0x12b8 <vfprintf+0x39a>
    12cc:	f6 01       	movw	r30, r12
    12ce:	86 81       	ldd	r24, Z+6	; 0x06
    12d0:	97 81       	ldd	r25, Z+7	; 0x07
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <vfprintf+0x3ba>
    12d4:	8f ef       	ldi	r24, 0xFF	; 255
    12d6:	9f ef       	ldi	r25, 0xFF	; 255
    12d8:	2b 96       	adiw	r28, 0x0b	; 11
    12da:	e2 e1       	ldi	r30, 0x12	; 18
    12dc:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <__epilogue_restores__>

000012e0 <strnlen_P>:
    12e0:	fc 01       	movw	r30, r24
    12e2:	05 90       	lpm	r0, Z+
    12e4:	61 50       	subi	r22, 0x01	; 1
    12e6:	70 40       	sbci	r23, 0x00	; 0
    12e8:	01 10       	cpse	r0, r1
    12ea:	d8 f7       	brcc	.-10     	; 0x12e2 <strnlen_P+0x2>
    12ec:	80 95       	com	r24
    12ee:	90 95       	com	r25
    12f0:	8e 0f       	add	r24, r30
    12f2:	9f 1f       	adc	r25, r31
    12f4:	08 95       	ret

000012f6 <strnlen>:
    12f6:	fc 01       	movw	r30, r24
    12f8:	61 50       	subi	r22, 0x01	; 1
    12fa:	70 40       	sbci	r23, 0x00	; 0
    12fc:	01 90       	ld	r0, Z+
    12fe:	01 10       	cpse	r0, r1
    1300:	d8 f7       	brcc	.-10     	; 0x12f8 <strnlen+0x2>
    1302:	80 95       	com	r24
    1304:	90 95       	com	r25
    1306:	8e 0f       	add	r24, r30
    1308:	9f 1f       	adc	r25, r31
    130a:	08 95       	ret

0000130c <fputc>:
    130c:	0f 93       	push	r16
    130e:	1f 93       	push	r17
    1310:	cf 93       	push	r28
    1312:	df 93       	push	r29
    1314:	fb 01       	movw	r30, r22
    1316:	23 81       	ldd	r18, Z+3	; 0x03
    1318:	21 fd       	sbrc	r18, 1
    131a:	03 c0       	rjmp	.+6      	; 0x1322 <fputc+0x16>
    131c:	8f ef       	ldi	r24, 0xFF	; 255
    131e:	9f ef       	ldi	r25, 0xFF	; 255
    1320:	2c c0       	rjmp	.+88     	; 0x137a <fputc+0x6e>
    1322:	22 ff       	sbrs	r18, 2
    1324:	16 c0       	rjmp	.+44     	; 0x1352 <fputc+0x46>
    1326:	46 81       	ldd	r20, Z+6	; 0x06
    1328:	57 81       	ldd	r21, Z+7	; 0x07
    132a:	24 81       	ldd	r18, Z+4	; 0x04
    132c:	35 81       	ldd	r19, Z+5	; 0x05
    132e:	42 17       	cp	r20, r18
    1330:	53 07       	cpc	r21, r19
    1332:	44 f4       	brge	.+16     	; 0x1344 <fputc+0x38>
    1334:	a0 81       	ld	r26, Z
    1336:	b1 81       	ldd	r27, Z+1	; 0x01
    1338:	9d 01       	movw	r18, r26
    133a:	2f 5f       	subi	r18, 0xFF	; 255
    133c:	3f 4f       	sbci	r19, 0xFF	; 255
    133e:	31 83       	std	Z+1, r19	; 0x01
    1340:	20 83       	st	Z, r18
    1342:	8c 93       	st	X, r24
    1344:	26 81       	ldd	r18, Z+6	; 0x06
    1346:	37 81       	ldd	r19, Z+7	; 0x07
    1348:	2f 5f       	subi	r18, 0xFF	; 255
    134a:	3f 4f       	sbci	r19, 0xFF	; 255
    134c:	37 83       	std	Z+7, r19	; 0x07
    134e:	26 83       	std	Z+6, r18	; 0x06
    1350:	14 c0       	rjmp	.+40     	; 0x137a <fputc+0x6e>
    1352:	8b 01       	movw	r16, r22
    1354:	ec 01       	movw	r28, r24
    1356:	fb 01       	movw	r30, r22
    1358:	00 84       	ldd	r0, Z+8	; 0x08
    135a:	f1 85       	ldd	r31, Z+9	; 0x09
    135c:	e0 2d       	mov	r30, r0
    135e:	09 95       	icall
    1360:	89 2b       	or	r24, r25
    1362:	e1 f6       	brne	.-72     	; 0x131c <fputc+0x10>
    1364:	d8 01       	movw	r26, r16
    1366:	16 96       	adiw	r26, 0x06	; 6
    1368:	8d 91       	ld	r24, X+
    136a:	9c 91       	ld	r25, X
    136c:	17 97       	sbiw	r26, 0x07	; 7
    136e:	01 96       	adiw	r24, 0x01	; 1
    1370:	17 96       	adiw	r26, 0x07	; 7
    1372:	9c 93       	st	X, r25
    1374:	8e 93       	st	-X, r24
    1376:	16 97       	sbiw	r26, 0x06	; 6
    1378:	ce 01       	movw	r24, r28
    137a:	df 91       	pop	r29
    137c:	cf 91       	pop	r28
    137e:	1f 91       	pop	r17
    1380:	0f 91       	pop	r16
    1382:	08 95       	ret

00001384 <__ultoa_invert>:
    1384:	fa 01       	movw	r30, r20
    1386:	aa 27       	eor	r26, r26
    1388:	28 30       	cpi	r18, 0x08	; 8
    138a:	51 f1       	breq	.+84     	; 0x13e0 <__ultoa_invert+0x5c>
    138c:	20 31       	cpi	r18, 0x10	; 16
    138e:	81 f1       	breq	.+96     	; 0x13f0 <__ultoa_invert+0x6c>
    1390:	e8 94       	clt
    1392:	6f 93       	push	r22
    1394:	6e 7f       	andi	r22, 0xFE	; 254
    1396:	6e 5f       	subi	r22, 0xFE	; 254
    1398:	7f 4f       	sbci	r23, 0xFF	; 255
    139a:	8f 4f       	sbci	r24, 0xFF	; 255
    139c:	9f 4f       	sbci	r25, 0xFF	; 255
    139e:	af 4f       	sbci	r26, 0xFF	; 255
    13a0:	b1 e0       	ldi	r27, 0x01	; 1
    13a2:	3e d0       	rcall	.+124    	; 0x1420 <__ultoa_invert+0x9c>
    13a4:	b4 e0       	ldi	r27, 0x04	; 4
    13a6:	3c d0       	rcall	.+120    	; 0x1420 <__ultoa_invert+0x9c>
    13a8:	67 0f       	add	r22, r23
    13aa:	78 1f       	adc	r23, r24
    13ac:	89 1f       	adc	r24, r25
    13ae:	9a 1f       	adc	r25, r26
    13b0:	a1 1d       	adc	r26, r1
    13b2:	68 0f       	add	r22, r24
    13b4:	79 1f       	adc	r23, r25
    13b6:	8a 1f       	adc	r24, r26
    13b8:	91 1d       	adc	r25, r1
    13ba:	a1 1d       	adc	r26, r1
    13bc:	6a 0f       	add	r22, r26
    13be:	71 1d       	adc	r23, r1
    13c0:	81 1d       	adc	r24, r1
    13c2:	91 1d       	adc	r25, r1
    13c4:	a1 1d       	adc	r26, r1
    13c6:	20 d0       	rcall	.+64     	; 0x1408 <__ultoa_invert+0x84>
    13c8:	09 f4       	brne	.+2      	; 0x13cc <__ultoa_invert+0x48>
    13ca:	68 94       	set
    13cc:	3f 91       	pop	r19
    13ce:	2a e0       	ldi	r18, 0x0A	; 10
    13d0:	26 9f       	mul	r18, r22
    13d2:	11 24       	eor	r1, r1
    13d4:	30 19       	sub	r19, r0
    13d6:	30 5d       	subi	r19, 0xD0	; 208
    13d8:	31 93       	st	Z+, r19
    13da:	de f6       	brtc	.-74     	; 0x1392 <__ultoa_invert+0xe>
    13dc:	cf 01       	movw	r24, r30
    13de:	08 95       	ret
    13e0:	46 2f       	mov	r20, r22
    13e2:	47 70       	andi	r20, 0x07	; 7
    13e4:	40 5d       	subi	r20, 0xD0	; 208
    13e6:	41 93       	st	Z+, r20
    13e8:	b3 e0       	ldi	r27, 0x03	; 3
    13ea:	0f d0       	rcall	.+30     	; 0x140a <__ultoa_invert+0x86>
    13ec:	c9 f7       	brne	.-14     	; 0x13e0 <__ultoa_invert+0x5c>
    13ee:	f6 cf       	rjmp	.-20     	; 0x13dc <__ultoa_invert+0x58>
    13f0:	46 2f       	mov	r20, r22
    13f2:	4f 70       	andi	r20, 0x0F	; 15
    13f4:	40 5d       	subi	r20, 0xD0	; 208
    13f6:	4a 33       	cpi	r20, 0x3A	; 58
    13f8:	18 f0       	brcs	.+6      	; 0x1400 <__ultoa_invert+0x7c>
    13fa:	49 5d       	subi	r20, 0xD9	; 217
    13fc:	31 fd       	sbrc	r19, 1
    13fe:	40 52       	subi	r20, 0x20	; 32
    1400:	41 93       	st	Z+, r20
    1402:	02 d0       	rcall	.+4      	; 0x1408 <__ultoa_invert+0x84>
    1404:	a9 f7       	brne	.-22     	; 0x13f0 <__ultoa_invert+0x6c>
    1406:	ea cf       	rjmp	.-44     	; 0x13dc <__ultoa_invert+0x58>
    1408:	b4 e0       	ldi	r27, 0x04	; 4
    140a:	a6 95       	lsr	r26
    140c:	97 95       	ror	r25
    140e:	87 95       	ror	r24
    1410:	77 95       	ror	r23
    1412:	67 95       	ror	r22
    1414:	ba 95       	dec	r27
    1416:	c9 f7       	brne	.-14     	; 0x140a <__ultoa_invert+0x86>
    1418:	00 97       	sbiw	r24, 0x00	; 0
    141a:	61 05       	cpc	r22, r1
    141c:	71 05       	cpc	r23, r1
    141e:	08 95       	ret
    1420:	9b 01       	movw	r18, r22
    1422:	ac 01       	movw	r20, r24
    1424:	0a 2e       	mov	r0, r26
    1426:	06 94       	lsr	r0
    1428:	57 95       	ror	r21
    142a:	47 95       	ror	r20
    142c:	37 95       	ror	r19
    142e:	27 95       	ror	r18
    1430:	ba 95       	dec	r27
    1432:	c9 f7       	brne	.-14     	; 0x1426 <__ultoa_invert+0xa2>
    1434:	62 0f       	add	r22, r18
    1436:	73 1f       	adc	r23, r19
    1438:	84 1f       	adc	r24, r20
    143a:	95 1f       	adc	r25, r21
    143c:	a0 1d       	adc	r26, r0
    143e:	08 95       	ret

00001440 <__prologue_saves__>:
    1440:	2f 92       	push	r2
    1442:	3f 92       	push	r3
    1444:	4f 92       	push	r4
    1446:	5f 92       	push	r5
    1448:	6f 92       	push	r6
    144a:	7f 92       	push	r7
    144c:	8f 92       	push	r8
    144e:	9f 92       	push	r9
    1450:	af 92       	push	r10
    1452:	bf 92       	push	r11
    1454:	cf 92       	push	r12
    1456:	df 92       	push	r13
    1458:	ef 92       	push	r14
    145a:	ff 92       	push	r15
    145c:	0f 93       	push	r16
    145e:	1f 93       	push	r17
    1460:	cf 93       	push	r28
    1462:	df 93       	push	r29
    1464:	cd b7       	in	r28, 0x3d	; 61
    1466:	de b7       	in	r29, 0x3e	; 62
    1468:	ca 1b       	sub	r28, r26
    146a:	db 0b       	sbc	r29, r27
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	09 94       	ijmp

00001478 <__epilogue_restores__>:
    1478:	2a 88       	ldd	r2, Y+18	; 0x12
    147a:	39 88       	ldd	r3, Y+17	; 0x11
    147c:	48 88       	ldd	r4, Y+16	; 0x10
    147e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1480:	6e 84       	ldd	r6, Y+14	; 0x0e
    1482:	7d 84       	ldd	r7, Y+13	; 0x0d
    1484:	8c 84       	ldd	r8, Y+12	; 0x0c
    1486:	9b 84       	ldd	r9, Y+11	; 0x0b
    1488:	aa 84       	ldd	r10, Y+10	; 0x0a
    148a:	b9 84       	ldd	r11, Y+9	; 0x09
    148c:	c8 84       	ldd	r12, Y+8	; 0x08
    148e:	df 80       	ldd	r13, Y+7	; 0x07
    1490:	ee 80       	ldd	r14, Y+6	; 0x06
    1492:	fd 80       	ldd	r15, Y+5	; 0x05
    1494:	0c 81       	ldd	r16, Y+4	; 0x04
    1496:	1b 81       	ldd	r17, Y+3	; 0x03
    1498:	aa 81       	ldd	r26, Y+2	; 0x02
    149a:	b9 81       	ldd	r27, Y+1	; 0x01
    149c:	ce 0f       	add	r28, r30
    149e:	d1 1d       	adc	r29, r1
    14a0:	0f b6       	in	r0, 0x3f	; 63
    14a2:	f8 94       	cli
    14a4:	de bf       	out	0x3e, r29	; 62
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	cd bf       	out	0x3d, r28	; 61
    14aa:	ed 01       	movw	r28, r26
    14ac:	08 95       	ret

000014ae <_exit>:
    14ae:	f8 94       	cli

000014b0 <__stop_program>:
    14b0:	ff cf       	rjmp	.-2      	; 0x14b0 <__stop_program>
