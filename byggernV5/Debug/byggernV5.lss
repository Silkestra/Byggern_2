
byggernV5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e2  00800100  00001642  000016d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001642  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  008001e2  008001e2  000017b8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001814  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000268  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b12  00000000  00000000  00001ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef6  00000000  00000000  000045ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011ba  00000000  00000000  000054c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000620  00000000  00000000  0000667c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090a  00000000  00000000  00006c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001585  00000000  00000000  000075a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  00008b2b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <menu_init+0x8c>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 e4       	ldi	r30, 0x42	; 66
     37c:	f6 e1       	ldi	r31, 0x16	; 22
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a2 3e       	cpi	r26, 0xE2	; 226
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a2 ee       	ldi	r26, 0xE2	; 226
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ac 3e       	cpi	r26, 0xEC	; 236
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 5f 06 	call	0xcbe	; 0xcbe <main>
     39e:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_cntrl_read>:
	SPI_SS_low();
	SPI_MasterTransmit(0xA0);
	int8_t result = SPI_MasterTransmit(0x0); //Output
	SPI_SS_high();
	return result;
}
     3a6:	cf 93       	push	r28
     3a8:	c8 2f       	mov	r28, r24
     3aa:	0e 94 a7 06 	call	0xd4e	; 0xd4e <SPI_SS_low>
     3ae:	83 e0       	ldi	r24, 0x03	; 3
     3b0:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3b4:	8c 2f       	mov	r24, r28
     3b6:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3c0:	c8 2f       	mov	r28, r24
     3c2:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
     3c6:	8c 2f       	mov	r24, r28
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <can_cntrl_write>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	d8 2f       	mov	r29, r24
     3d4:	c6 2f       	mov	r28, r22
     3d6:	0e 94 a7 06 	call	0xd4e	; 0xd4e <SPI_SS_low>
     3da:	82 e0       	ldi	r24, 0x02	; 2
     3dc:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3e0:	8d 2f       	mov	r24, r29
     3e2:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3e6:	8c 2f       	mov	r24, r28
     3e8:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     3ec:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <can_cntrl_reset>:
     3f6:	0e 94 a7 06 	call	0xd4e	; 0xd4e <SPI_SS_low>
     3fa:	80 ec       	ldi	r24, 0xC0	; 192
     3fc:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     400:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
     404:	08 95       	ret

00000406 <can_cntrl_RTS>:
     406:	cf 93       	push	r28
     408:	c8 2f       	mov	r28, r24
     40a:	0e 94 a7 06 	call	0xd4e	; 0xd4e <SPI_SS_low>
     40e:	8c 2f       	mov	r24, r28
     410:	81 68       	ori	r24, 0x81	; 129
     412:	0e 94 b6 06 	call	0xd6c	; 0xd6c <SPI_MasterTransmit>
     416:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <can_cntrl_config>:
}
*/


void can_cntrl_config(void){
	can_cntrl_reset();
     41e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <can_cntrl_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     422:	89 ef       	ldi	r24, 0xF9	; 249
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	01 97       	sbiw	r24, 0x01	; 1
     428:	f1 f7       	brne	.-4      	; 0x426 <can_cntrl_config+0x8>
     42a:	00 c0       	rjmp	.+0      	; 0x42c <can_cntrl_config+0xe>
     42c:	00 00       	nop
	_delay_ms(1); //delay viktig 
	SPI_SS_low();
     42e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <SPI_SS_low>
	
	uint8_t cnf1_value = (2 << 6) | 3;
	uint8_t cnf2_value = (1 << 7) | (6 << 3) | 0 << 6;
	uint8_t cnf3_value = 5;
	
	can_cntrl_write(CNF1, cnf1_value);
     432:	63 e8       	ldi	r22, 0x83	; 131
     434:	8a e2       	ldi	r24, 0x2A	; 42
     436:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(CNF2, cnf2_value);
     43a:	60 eb       	ldi	r22, 0xB0	; 176
     43c:	89 e2       	ldi	r24, 0x29	; 41
     43e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(CNF3, cnf3_value);
     442:	65 e0       	ldi	r22, 0x05	; 5
     444:	88 e2       	ldi	r24, 0x28	; 40
     446:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	
	//Set operation mode
	int8_t canctrl_value = can_cntrl_read(CANCTRL);
     44a:	8f e0       	ldi	r24, 0x0F	; 15
     44c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_cntrl_read>
	//printf("%d", canctrl_value);
	canctrl_value &= ~(0xE0);
     450:	68 2f       	mov	r22, r24
     452:	6f 71       	andi	r22, 0x1F	; 31
	canctrl_value |= (0x00 << 5);
	//printf("%d", canctrl_value);
	
	can_cntrl_write(CANCTRL, canctrl_value);
     454:	8f e0       	ldi	r24, 0x0F	; 15
     456:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(RXF0SIDH, 0x00);
	can_cntrl_write(RXF0SIDL, 0x00);
	can_cntrl_write(RXF1SIDH, 0x00);
	can_cntrl_write(RXF1SIDL, 0x00);*/
	
	SPI_SS_high();
     45a:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
     45e:	08 95       	ret

00000460 <can_message_send>:
}



void can_message_send (can_message * msg ) {
     460:	0f 93       	push	r16
     462:	1f 93       	push	r17
     464:	cf 93       	push	r28
     466:	df 93       	push	r29
     468:	8c 01       	movw	r16, r24
	can_cntrl_write(TXB0SIDH, msg->id >> 3);
     46a:	fc 01       	movw	r30, r24
     46c:	60 81       	ld	r22, Z
     46e:	71 81       	ldd	r23, Z+1	; 0x01
     470:	76 95       	lsr	r23
     472:	67 95       	ror	r22
     474:	76 95       	lsr	r23
     476:	67 95       	ror	r22
     478:	76 95       	lsr	r23
     47a:	67 95       	ror	r22
     47c:	81 e3       	ldi	r24, 0x31	; 49
     47e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(TXB0SIDL, (msg->id & 0x07) << 5);
     482:	f8 01       	movw	r30, r16
     484:	60 81       	ld	r22, Z
     486:	62 95       	swap	r22
     488:	66 0f       	add	r22, r22
     48a:	60 7e       	andi	r22, 0xE0	; 224
     48c:	82 e3       	ldi	r24, 0x32	; 50
     48e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	can_cntrl_write(TXB0DLC, msg->data_length);
     492:	f8 01       	movw	r30, r16
     494:	62 81       	ldd	r22, Z+2	; 0x02
     496:	85 e3       	ldi	r24, 0x35	; 53
     498:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
	
	for (int i = 0; i < msg->data_length; i++){
     49c:	c0 e0       	ldi	r28, 0x00	; 0
     49e:	d0 e0       	ldi	r29, 0x00	; 0
     4a0:	09 c0       	rjmp	.+18     	; 0x4b4 <can_message_send+0x54>
		can_cntrl_write(TXB0D0+i, msg->data[i]);
     4a2:	f8 01       	movw	r30, r16
     4a4:	ec 0f       	add	r30, r28
     4a6:	fd 1f       	adc	r31, r29
     4a8:	63 81       	ldd	r22, Z+3	; 0x03
     4aa:	8c 2f       	mov	r24, r28
     4ac:	8a 5c       	subi	r24, 0xCA	; 202
     4ae:	0e 94 e7 01 	call	0x3ce	; 0x3ce <can_cntrl_write>
void can_message_send (can_message * msg ) {
	can_cntrl_write(TXB0SIDH, msg->id >> 3);
	can_cntrl_write(TXB0SIDL, (msg->id & 0x07) << 5);
	can_cntrl_write(TXB0DLC, msg->data_length);
	
	for (int i = 0; i < msg->data_length; i++){
     4b2:	21 96       	adiw	r28, 0x01	; 1
     4b4:	f8 01       	movw	r30, r16
     4b6:	82 81       	ldd	r24, Z+2	; 0x02
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	c8 17       	cp	r28, r24
     4bc:	d9 07       	cpc	r29, r25
     4be:	8c f3       	brlt	.-30     	; 0x4a2 <can_message_send+0x42>
		can_cntrl_write(TXB0D0+i, msg->data[i]);
	}
	can_cntrl_RTS(0x01);
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	0e 94 03 02 	call	0x406	; 0x406 <can_cntrl_RTS>
	
}
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	1f 91       	pop	r17
     4cc:	0f 91       	pop	r16
     4ce:	08 95       	ret

000004d0 <joy_init>:
	}
}


void OLED_home(char* menu_list[], int16_t length){
	OLED_print_menu(menu_list, length);
     4d0:	28 e8       	ldi	r18, 0x88	; 136
     4d2:	fc 01       	movw	r30, r24
     4d4:	27 87       	std	Z+15, r18	; 0x0f
     4d6:	20 8b       	std	Z+16, r18	; 0x10
     4d8:	08 95       	ret

000004da <io_init>:
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	ec 01       	movw	r28, r24
     4e0:	0e 94 68 02 	call	0x4d0	; 0x4d0 <joy_init>
     4e4:	1d 82       	std	Y+5, r1	; 0x05
     4e6:	1c 82       	std	Y+4, r1	; 0x04
     4e8:	1f 82       	std	Y+7, r1	; 0x07
     4ea:	1e 82       	std	Y+6, r1	; 0x06
     4ec:	84 e0       	ldi	r24, 0x04	; 4
     4ee:	88 87       	std	Y+8, r24	; 0x08
     4f0:	19 86       	std	Y+9, r1	; 0x09
     4f2:	82 e0       	ldi	r24, 0x02	; 2
     4f4:	8a 87       	std	Y+10, r24	; 0x0a
     4f6:	1b 86       	std	Y+11, r1	; 0x0b
     4f8:	1d 86       	std	Y+13, r1	; 0x0d
     4fa:	1c 86       	std	Y+12, r1	; 0x0c
     4fc:	1e 86       	std	Y+14, r1	; 0x0e
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <convert_x>:
     504:	fc 01       	movw	r30, r24
     506:	87 85       	ldd	r24, Z+15	; 0x0f
     508:	68 0f       	add	r22, r24
     50a:	71 1d       	adc	r23, r1
     50c:	87 fd       	sbrc	r24, 7
     50e:	7a 95       	dec	r23
     510:	24 e6       	ldi	r18, 0x64	; 100
     512:	26 9f       	mul	r18, r22
     514:	c0 01       	movw	r24, r0
     516:	27 9f       	mul	r18, r23
     518:	90 0d       	add	r25, r0
     51a:	11 24       	eor	r1, r1
     51c:	99 23       	and	r25, r25
     51e:	14 f4       	brge	.+4      	; 0x524 <convert_x+0x20>
     520:	81 58       	subi	r24, 0x81	; 129
     522:	9f 4f       	sbci	r25, 0xFF	; 255
     524:	88 0f       	add	r24, r24
     526:	89 2f       	mov	r24, r25
     528:	88 1f       	adc	r24, r24
     52a:	99 0b       	sbc	r25, r25
     52c:	08 95       	ret

0000052e <convert_y>:
     52e:	fc 01       	movw	r30, r24
     530:	80 89       	ldd	r24, Z+16	; 0x10
     532:	68 0f       	add	r22, r24
     534:	71 1d       	adc	r23, r1
     536:	87 fd       	sbrc	r24, 7
     538:	7a 95       	dec	r23
     53a:	24 e6       	ldi	r18, 0x64	; 100
     53c:	26 9f       	mul	r18, r22
     53e:	c0 01       	movw	r24, r0
     540:	27 9f       	mul	r18, r23
     542:	90 0d       	add	r25, r0
     544:	11 24       	eor	r1, r1
     546:	99 23       	and	r25, r25
     548:	14 f4       	brge	.+4      	; 0x54e <convert_y+0x20>
     54a:	81 58       	subi	r24, 0x81	; 129
     54c:	9f 4f       	sbci	r25, 0xFF	; 255
     54e:	88 0f       	add	r24, r24
     550:	89 2f       	mov	r24, r25
     552:	88 1f       	adc	r24, r24
     554:	99 0b       	sbc	r25, r25
     556:	08 95       	ret

00000558 <find_joy_dir>:
     558:	fc 01       	movw	r30, r24
     55a:	80 81       	ld	r24, Z
     55c:	91 81       	ldd	r25, Z+1	; 0x01
     55e:	cd 97       	sbiw	r24, 0x3d	; 61
     560:	54 f0       	brlt	.+20     	; 0x576 <find_joy_dir+0x1e>
     562:	80 85       	ldd	r24, Z+8	; 0x08
     564:	82 30       	cpi	r24, 0x02	; 2
     566:	19 f0       	breq	.+6      	; 0x56e <find_joy_dir+0x16>
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	83 87       	std	Z+11, r24	; 0x0b
     56c:	01 c0       	rjmp	.+2      	; 0x570 <find_joy_dir+0x18>
     56e:	13 86       	std	Z+11, r1	; 0x0b
     570:	82 e0       	ldi	r24, 0x02	; 2
     572:	80 87       	std	Z+8, r24	; 0x08
     574:	08 95       	ret
     576:	80 81       	ld	r24, Z
     578:	91 81       	ldd	r25, Z+1	; 0x01
     57a:	84 3c       	cpi	r24, 0xC4	; 196
     57c:	9f 4f       	sbci	r25, 0xFF	; 255
     57e:	54 f4       	brge	.+20     	; 0x594 <find_joy_dir+0x3c>
     580:	80 85       	ldd	r24, Z+8	; 0x08
     582:	83 30       	cpi	r24, 0x03	; 3
     584:	19 f0       	breq	.+6      	; 0x58c <find_joy_dir+0x34>
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	83 87       	std	Z+11, r24	; 0x0b
     58a:	01 c0       	rjmp	.+2      	; 0x58e <find_joy_dir+0x36>
     58c:	13 86       	std	Z+11, r1	; 0x0b
     58e:	83 e0       	ldi	r24, 0x03	; 3
     590:	80 87       	std	Z+8, r24	; 0x08
     592:	08 95       	ret
     594:	82 81       	ldd	r24, Z+2	; 0x02
     596:	93 81       	ldd	r25, Z+3	; 0x03
     598:	cd 97       	sbiw	r24, 0x3d	; 61
     59a:	54 f0       	brlt	.+20     	; 0x5b0 <find_joy_dir+0x58>
     59c:	80 85       	ldd	r24, Z+8	; 0x08
     59e:	81 30       	cpi	r24, 0x01	; 1
     5a0:	19 f0       	breq	.+6      	; 0x5a8 <find_joy_dir+0x50>
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	83 87       	std	Z+11, r24	; 0x0b
     5a6:	01 c0       	rjmp	.+2      	; 0x5aa <find_joy_dir+0x52>
     5a8:	13 86       	std	Z+11, r1	; 0x0b
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	80 87       	std	Z+8, r24	; 0x08
     5ae:	08 95       	ret
     5b0:	82 81       	ldd	r24, Z+2	; 0x02
     5b2:	93 81       	ldd	r25, Z+3	; 0x03
     5b4:	84 3c       	cpi	r24, 0xC4	; 196
     5b6:	9f 4f       	sbci	r25, 0xFF	; 255
     5b8:	4c f4       	brge	.+18     	; 0x5cc <find_joy_dir+0x74>
     5ba:	80 85       	ldd	r24, Z+8	; 0x08
     5bc:	88 23       	and	r24, r24
     5be:	19 f0       	breq	.+6      	; 0x5c6 <find_joy_dir+0x6e>
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	83 87       	std	Z+11, r24	; 0x0b
     5c4:	01 c0       	rjmp	.+2      	; 0x5c8 <find_joy_dir+0x70>
     5c6:	13 86       	std	Z+11, r1	; 0x0b
     5c8:	10 86       	std	Z+8, r1	; 0x08
     5ca:	08 95       	ret
     5cc:	80 85       	ldd	r24, Z+8	; 0x08
     5ce:	84 30       	cpi	r24, 0x04	; 4
     5d0:	19 f0       	breq	.+6      	; 0x5d8 <find_joy_dir+0x80>
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	83 87       	std	Z+11, r24	; 0x0b
     5d6:	01 c0       	rjmp	.+2      	; 0x5da <find_joy_dir+0x82>
     5d8:	13 86       	std	Z+11, r1	; 0x0b
     5da:	84 e0       	ldi	r24, 0x04	; 4
     5dc:	80 87       	std	Z+8, r24	; 0x08
     5de:	08 95       	ret

000005e0 <get_states>:
     5e0:	cf 93       	push	r28
     5e2:	df 93       	push	r29
     5e4:	ec 01       	movw	r28, r24
     5e6:	8a 85       	ldd	r24, Y+10	; 0x0a
     5e8:	28 2f       	mov	r18, r24
     5ea:	08 2e       	mov	r0, r24
     5ec:	00 0c       	add	r0, r0
     5ee:	33 0b       	sbc	r19, r19
     5f0:	3f 93       	push	r19
     5f2:	8f 93       	push	r24
     5f4:	88 e2       	ldi	r24, 0x28	; 40
     5f6:	91 e0       	ldi	r25, 0x01	; 1
     5f8:	9f 93       	push	r25
     5fa:	8f 93       	push	r24
     5fc:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     600:	89 85       	ldd	r24, Y+9	; 0x09
     602:	1f 92       	push	r1
     604:	8f 93       	push	r24
     606:	8b e3       	ldi	r24, 0x3B	; 59
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	9f 93       	push	r25
     60c:	8f 93       	push	r24
     60e:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     612:	88 85       	ldd	r24, Y+8	; 0x08
     614:	1f 92       	push	r1
     616:	8f 93       	push	r24
     618:	88 e4       	ldi	r24, 0x48	; 72
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     624:	88 81       	ld	r24, Y
     626:	99 81       	ldd	r25, Y+1	; 0x01
     628:	9f 93       	push	r25
     62a:	8f 93       	push	r24
     62c:	81 e6       	ldi	r24, 0x61	; 97
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	9f 93       	push	r25
     632:	8f 93       	push	r24
     634:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     638:	8a 81       	ldd	r24, Y+2	; 0x02
     63a:	9b 81       	ldd	r25, Y+3	; 0x03
     63c:	9f 93       	push	r25
     63e:	8f 93       	push	r24
     640:	85 e7       	ldi	r24, 0x75	; 117
     642:	91 e0       	ldi	r25, 0x01	; 1
     644:	9f 93       	push	r25
     646:	8f 93       	push	r24
     648:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     64c:	8c 81       	ldd	r24, Y+4	; 0x04
     64e:	9d 81       	ldd	r25, Y+5	; 0x05
     650:	9f 93       	push	r25
     652:	8f 93       	push	r24
     654:	89 e8       	ldi	r24, 0x89	; 137
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	9f 93       	push	r25
     65a:	8f 93       	push	r24
     65c:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     660:	8e 81       	ldd	r24, Y+6	; 0x06
     662:	9f 81       	ldd	r25, Y+7	; 0x07
     664:	9f 93       	push	r25
     666:	8f 93       	push	r24
     668:	8b e9       	ldi	r24, 0x9B	; 155
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	9f 93       	push	r25
     66e:	8f 93       	push	r24
     670:	0e 94 3a 08 	call	0x1074	; 0x1074 <printf>
     674:	8a e0       	ldi	r24, 0x0A	; 10
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	0e 94 50 08 	call	0x10a0	; 0x10a0 <putchar>
     67c:	8d b7       	in	r24, 0x3d	; 61
     67e:	9e b7       	in	r25, 0x3e	; 62
     680:	4c 96       	adiw	r24, 0x1c	; 28
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	9e bf       	out	0x3e, r25	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	8d bf       	out	0x3d, r24	; 61
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	08 95       	ret

00000692 <get_joy_x>:
     692:	fc 01       	movw	r30, r24
     694:	80 81       	ld	r24, Z
     696:	91 81       	ldd	r25, Z+1	; 0x01
     698:	08 95       	ret

0000069a <get_joy_y>:
     69a:	fc 01       	movw	r30, r24
     69c:	82 81       	ldd	r24, Z+2	; 0x02
     69e:	93 81       	ldd	r25, Z+3	; 0x03
     6a0:	08 95       	ret

000006a2 <read_button>:
     6a2:	84 e0       	ldi	r24, 0x04	; 4
     6a4:	88 bb       	out	0x18, r24	; 24
     6a6:	87 b3       	in	r24, 0x17	; 23
     6a8:	8b 7f       	andi	r24, 0xFB	; 251
     6aa:	87 bb       	out	0x17, r24	; 23
     6ac:	10 be       	out	0x30, r1	; 48
     6ae:	b2 9b       	sbis	0x16, 2	; 22
     6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <read_button+0x14>
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	08 95       	ret
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	08 95       	ret

000006ba <oled_init>:
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	50 e1       	ldi	r21, 0x10	; 16
     6be:	60 e0       	ldi	r22, 0x00	; 0
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	8e ea       	ldi	r24, 0xAE	; 174
     6c4:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     6c8:	40 e0       	ldi	r20, 0x00	; 0
     6ca:	50 e1       	ldi	r21, 0x10	; 16
     6cc:	60 e0       	ldi	r22, 0x00	; 0
     6ce:	70 e0       	ldi	r23, 0x00	; 0
     6d0:	81 ea       	ldi	r24, 0xA1	; 161
     6d2:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     6d6:	40 e0       	ldi	r20, 0x00	; 0
     6d8:	50 e1       	ldi	r21, 0x10	; 16
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	70 e0       	ldi	r23, 0x00	; 0
     6de:	8a ed       	ldi	r24, 0xDA	; 218
     6e0:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     6e4:	40 e0       	ldi	r20, 0x00	; 0
     6e6:	50 e1       	ldi	r21, 0x10	; 16
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	82 e1       	ldi	r24, 0x12	; 18
     6ee:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e1       	ldi	r21, 0x10	; 16
     6f6:	60 e0       	ldi	r22, 0x00	; 0
     6f8:	70 e0       	ldi	r23, 0x00	; 0
     6fa:	88 ec       	ldi	r24, 0xC8	; 200
     6fc:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e1       	ldi	r21, 0x10	; 16
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	88 ea       	ldi	r24, 0xA8	; 168
     70a:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     70e:	40 e0       	ldi	r20, 0x00	; 0
     710:	50 e1       	ldi	r21, 0x10	; 16
     712:	60 e0       	ldi	r22, 0x00	; 0
     714:	70 e0       	ldi	r23, 0x00	; 0
     716:	8f e3       	ldi	r24, 0x3F	; 63
     718:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     71c:	40 e0       	ldi	r20, 0x00	; 0
     71e:	50 e1       	ldi	r21, 0x10	; 16
     720:	60 e0       	ldi	r22, 0x00	; 0
     722:	70 e0       	ldi	r23, 0x00	; 0
     724:	85 ed       	ldi	r24, 0xD5	; 213
     726:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     72a:	40 e0       	ldi	r20, 0x00	; 0
     72c:	50 e1       	ldi	r21, 0x10	; 16
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	80 e8       	ldi	r24, 0x80	; 128
     734:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     738:	40 e0       	ldi	r20, 0x00	; 0
     73a:	50 e1       	ldi	r21, 0x10	; 16
     73c:	60 e0       	ldi	r22, 0x00	; 0
     73e:	70 e0       	ldi	r23, 0x00	; 0
     740:	81 e8       	ldi	r24, 0x81	; 129
     742:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     746:	40 e0       	ldi	r20, 0x00	; 0
     748:	50 e1       	ldi	r21, 0x10	; 16
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	70 e0       	ldi	r23, 0x00	; 0
     74e:	80 e5       	ldi	r24, 0x50	; 80
     750:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     754:	40 e0       	ldi	r20, 0x00	; 0
     756:	50 e1       	ldi	r21, 0x10	; 16
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	89 ed       	ldi	r24, 0xD9	; 217
     75e:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     762:	40 e0       	ldi	r20, 0x00	; 0
     764:	50 e1       	ldi	r21, 0x10	; 16
     766:	60 e0       	ldi	r22, 0x00	; 0
     768:	70 e0       	ldi	r23, 0x00	; 0
     76a:	81 e2       	ldi	r24, 0x21	; 33
     76c:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     770:	40 e0       	ldi	r20, 0x00	; 0
     772:	50 e1       	ldi	r21, 0x10	; 16
     774:	60 e0       	ldi	r22, 0x00	; 0
     776:	70 e0       	ldi	r23, 0x00	; 0
     778:	80 e2       	ldi	r24, 0x20	; 32
     77a:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     77e:	40 e0       	ldi	r20, 0x00	; 0
     780:	50 e1       	ldi	r21, 0x10	; 16
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	70 e0       	ldi	r23, 0x00	; 0
     786:	82 e0       	ldi	r24, 0x02	; 2
     788:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     78c:	40 e0       	ldi	r20, 0x00	; 0
     78e:	50 e1       	ldi	r21, 0x10	; 16
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	70 e0       	ldi	r23, 0x00	; 0
     794:	8b ed       	ldi	r24, 0xDB	; 219
     796:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     79a:	40 e0       	ldi	r20, 0x00	; 0
     79c:	50 e1       	ldi	r21, 0x10	; 16
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	70 e0       	ldi	r23, 0x00	; 0
     7a2:	80 e3       	ldi	r24, 0x30	; 48
     7a4:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7a8:	40 e0       	ldi	r20, 0x00	; 0
     7aa:	50 e1       	ldi	r21, 0x10	; 16
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	8d ea       	ldi	r24, 0xAD	; 173
     7b2:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7b6:	40 e0       	ldi	r20, 0x00	; 0
     7b8:	50 e1       	ldi	r21, 0x10	; 16
     7ba:	60 e0       	ldi	r22, 0x00	; 0
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7c4:	40 e0       	ldi	r20, 0x00	; 0
     7c6:	50 e1       	ldi	r21, 0x10	; 16
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	70 e0       	ldi	r23, 0x00	; 0
     7cc:	84 ea       	ldi	r24, 0xA4	; 164
     7ce:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	50 e1       	ldi	r21, 0x10	; 16
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	70 e0       	ldi	r23, 0x00	; 0
     7da:	86 ea       	ldi	r24, 0xA6	; 166
     7dc:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7e0:	40 e0       	ldi	r20, 0x00	; 0
     7e2:	50 e1       	ldi	r21, 0x10	; 16
     7e4:	60 e0       	ldi	r22, 0x00	; 0
     7e6:	70 e0       	ldi	r23, 0x00	; 0
     7e8:	8f ea       	ldi	r24, 0xAF	; 175
     7ea:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7ee:	08 95       	ret

000007f0 <OLED_goto_row>:
     7f0:	40 e0       	ldi	r20, 0x00	; 0
     7f2:	50 e1       	ldi	r21, 0x10	; 16
     7f4:	60 e0       	ldi	r22, 0x00	; 0
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	80 55       	subi	r24, 0x50	; 80
     7fa:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     7fe:	08 95       	ret

00000800 <OLED_goto_column>:
     800:	cf 93       	push	r28
     802:	c8 2f       	mov	r28, r24
     804:	40 e0       	ldi	r20, 0x00	; 0
     806:	50 e1       	ldi	r21, 0x10	; 16
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	8f 70       	andi	r24, 0x0F	; 15
     80e:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     812:	8c 2f       	mov	r24, r28
     814:	85 95       	asr	r24
     816:	85 95       	asr	r24
     818:	85 95       	asr	r24
     81a:	85 95       	asr	r24
     81c:	40 e0       	ldi	r20, 0x00	; 0
     81e:	50 e1       	ldi	r21, 0x10	; 16
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	80 61       	ori	r24, 0x10	; 16
     826:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <OLED_pos>:
     82e:	cf 93       	push	r28
     830:	c6 2f       	mov	r28, r22
     832:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <OLED_goto_row>
     836:	8c 2f       	mov	r24, r28
     838:	0e 94 00 04 	call	0x800	; 0x800 <OLED_goto_column>
     83c:	cf 91       	pop	r28
     83e:	08 95       	ret

00000840 <OLED_clear_row>:
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	60 e0       	ldi	r22, 0x00	; 0
     846:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
     84a:	c0 e0       	ldi	r28, 0x00	; 0
     84c:	d0 e0       	ldi	r29, 0x00	; 0
     84e:	08 c0       	rjmp	.+16     	; 0x860 <OLED_clear_row+0x20>
     850:	40 e0       	ldi	r20, 0x00	; 0
     852:	52 e1       	ldi	r21, 0x12	; 18
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     85e:	21 96       	adiw	r28, 0x01	; 1
     860:	c0 38       	cpi	r28, 0x80	; 128
     862:	d1 05       	cpc	r29, r1
     864:	ac f3       	brlt	.-22     	; 0x850 <OLED_clear_row+0x10>
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	08 95       	ret

0000086c <OLED_reset>:
     86c:	cf 93       	push	r28
     86e:	df 93       	push	r29
     870:	60 e0       	ldi	r22, 0x00	; 0
     872:	80 e0       	ldi	r24, 0x00	; 0
     874:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
     878:	c0 e0       	ldi	r28, 0x00	; 0
     87a:	d0 e0       	ldi	r29, 0x00	; 0
     87c:	07 c0       	rjmp	.+14     	; 0x88c <OLED_reset+0x20>
     87e:	8c 2f       	mov	r24, r28
     880:	0e 94 20 04 	call	0x840	; 0x840 <OLED_clear_row>
     884:	8c 2f       	mov	r24, r28
     886:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <OLED_goto_row>
     88a:	21 96       	adiw	r28, 0x01	; 1
     88c:	c8 30       	cpi	r28, 0x08	; 8
     88e:	d1 05       	cpc	r29, r1
     890:	b4 f3       	brlt	.-20     	; 0x87e <OLED_reset+0x12>
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <OLED_write_data>:
     898:	1f 93       	push	r17
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
     89e:	18 2f       	mov	r17, r24
     8a0:	c0 e0       	ldi	r28, 0x00	; 0
     8a2:	d0 e0       	ldi	r29, 0x00	; 0
     8a4:	15 c0       	rjmp	.+42     	; 0x8d0 <OLED_write_data+0x38>
     8a6:	e1 2f       	mov	r30, r17
     8a8:	f0 e0       	ldi	r31, 0x00	; 0
     8aa:	b0 97       	sbiw	r30, 0x20	; 32
     8ac:	ee 0f       	add	r30, r30
     8ae:	ff 1f       	adc	r31, r31
     8b0:	ee 0f       	add	r30, r30
     8b2:	ff 1f       	adc	r31, r31
     8b4:	ee 0f       	add	r30, r30
     8b6:	ff 1f       	adc	r31, r31
     8b8:	ec 0f       	add	r30, r28
     8ba:	fd 1f       	adc	r31, r29
     8bc:	e0 59       	subi	r30, 0x90	; 144
     8be:	ff 4f       	sbci	r31, 0xFF	; 255
     8c0:	84 91       	lpm	r24, Z
     8c2:	40 e0       	ldi	r20, 0x00	; 0
     8c4:	52 e1       	ldi	r21, 0x12	; 18
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     8ce:	21 96       	adiw	r28, 0x01	; 1
     8d0:	c8 30       	cpi	r28, 0x08	; 8
     8d2:	d1 05       	cpc	r29, r1
     8d4:	44 f3       	brlt	.-48     	; 0x8a6 <OLED_write_data+0xe>
     8d6:	df 91       	pop	r29
     8d8:	cf 91       	pop	r28
     8da:	1f 91       	pop	r17
     8dc:	08 95       	ret

000008de <OLED_print>:
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	ec 01       	movw	r28, r24
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e1       	ldi	r21, 0x10	; 16
     8e8:	60 e0       	ldi	r22, 0x00	; 0
     8ea:	70 e0       	ldi	r23, 0x00	; 0
     8ec:	80 e2       	ldi	r24, 0x20	; 32
     8ee:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     8f2:	40 e0       	ldi	r20, 0x00	; 0
     8f4:	50 e1       	ldi	r21, 0x10	; 16
     8f6:	60 e0       	ldi	r22, 0x00	; 0
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	82 e0       	ldi	r24, 0x02	; 2
     8fc:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
     900:	03 c0       	rjmp	.+6      	; 0x908 <OLED_print+0x2a>
     902:	0e 94 4c 04 	call	0x898	; 0x898 <OLED_write_data>
     906:	21 96       	adiw	r28, 0x01	; 1
     908:	88 81       	ld	r24, Y
     90a:	81 11       	cpse	r24, r1
     90c:	fa cf       	rjmp	.-12     	; 0x902 <OLED_print+0x24>
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	08 95       	ret

00000914 <set_menu_ptr>:
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	ec 01       	movw	r28, r24
     91a:	98 85       	ldd	r25, Y+8	; 0x08
     91c:	93 30       	cpi	r25, 0x03	; 3
     91e:	b9 f4       	brne	.+46     	; 0x94e <set_menu_ptr+0x3a>
     920:	8b 85       	ldd	r24, Y+11	; 0x0b
     922:	88 23       	and	r24, r24
     924:	a1 f0       	breq	.+40     	; 0x94e <set_menu_ptr+0x3a>
     926:	8a 85       	ldd	r24, Y+10	; 0x0a
     928:	87 30       	cpi	r24, 0x07	; 7
     92a:	8c f4       	brge	.+34     	; 0x94e <set_menu_ptr+0x3a>
     92c:	6e e6       	ldi	r22, 0x6E	; 110
     92e:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
     932:	8e ea       	ldi	r24, 0xAE	; 174
     934:	91 e0       	ldi	r25, 0x01	; 1
     936:	0e 94 6f 04 	call	0x8de	; 0x8de <OLED_print>
     93a:	8a 85       	ldd	r24, Y+10	; 0x0a
     93c:	8f 5f       	subi	r24, 0xFF	; 255
     93e:	8a 87       	std	Y+10, r24	; 0x0a
     940:	ec 85       	ldd	r30, Y+12	; 0x0c
     942:	fd 85       	ldd	r31, Y+13	; 0x0d
     944:	86 81       	ldd	r24, Z+6	; 0x06
     946:	97 81       	ldd	r25, Z+7	; 0x07
     948:	9d 87       	std	Y+13, r25	; 0x0d
     94a:	8c 87       	std	Y+12, r24	; 0x0c
     94c:	18 c0       	rjmp	.+48     	; 0x97e <set_menu_ptr+0x6a>
     94e:	92 30       	cpi	r25, 0x02	; 2
     950:	b1 f4       	brne	.+44     	; 0x97e <set_menu_ptr+0x6a>
     952:	8b 85       	ldd	r24, Y+11	; 0x0b
     954:	88 23       	and	r24, r24
     956:	99 f0       	breq	.+38     	; 0x97e <set_menu_ptr+0x6a>
     958:	8a 85       	ldd	r24, Y+10	; 0x0a
     95a:	83 30       	cpi	r24, 0x03	; 3
     95c:	84 f0       	brlt	.+32     	; 0x97e <set_menu_ptr+0x6a>
     95e:	6e e6       	ldi	r22, 0x6E	; 110
     960:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
     964:	8e ea       	ldi	r24, 0xAE	; 174
     966:	91 e0       	ldi	r25, 0x01	; 1
     968:	0e 94 6f 04 	call	0x8de	; 0x8de <OLED_print>
     96c:	8a 85       	ldd	r24, Y+10	; 0x0a
     96e:	81 50       	subi	r24, 0x01	; 1
     970:	8a 87       	std	Y+10, r24	; 0x0a
     972:	ec 85       	ldd	r30, Y+12	; 0x0c
     974:	fd 85       	ldd	r31, Y+13	; 0x0d
     976:	84 81       	ldd	r24, Z+4	; 0x04
     978:	95 81       	ldd	r25, Z+5	; 0x05
     97a:	9d 87       	std	Y+13, r25	; 0x0d
     97c:	8c 87       	std	Y+12, r24	; 0x0c
     97e:	6e e6       	ldi	r22, 0x6E	; 110
     980:	8a 85       	ldd	r24, Y+10	; 0x0a
     982:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
     986:	81 eb       	ldi	r24, 0xB1	; 177
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	0e 94 6f 04 	call	0x8de	; 0x8de <OLED_print>
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	08 95       	ret

00000994 <create_menu_item>:
}

menu_item *create_menu_item (const char *name, menu_item *parent){
     994:	ef 92       	push	r14
     996:	ff 92       	push	r15
     998:	0f 93       	push	r16
     99a:	1f 93       	push	r17
     99c:	cf 93       	push	r28
     99e:	df 93       	push	r29
     9a0:	7c 01       	movw	r14, r24
     9a2:	8b 01       	movw	r16, r22
	menu_item *new_item = (menu_item*) malloc(sizeof(menu_item));
     9a4:	8b e0       	ldi	r24, 0x0B	; 11
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	0e 94 ef 06 	call	0xdde	; 0xdde <malloc>
     9ac:	ec 01       	movw	r28, r24
	new_item->menu_name = strdup(name);
     9ae:	c7 01       	movw	r24, r14
     9b0:	0e 94 10 08 	call	0x1020	; 0x1020 <strdup>
     9b4:	99 87       	std	Y+9, r25	; 0x09
     9b6:	88 87       	std	Y+8, r24	; 0x08
	new_item->parent = parent;
     9b8:	19 83       	std	Y+1, r17	; 0x01
     9ba:	08 83       	st	Y, r16
	new_item->first_child = NULL;
     9bc:	1b 82       	std	Y+3, r1	; 0x03
     9be:	1a 82       	std	Y+2, r1	; 0x02
	new_item->previous_sibling=NULL;
     9c0:	1d 82       	std	Y+5, r1	; 0x05
     9c2:	1c 82       	std	Y+4, r1	; 0x04
	new_item->next_sibling = NULL;
     9c4:	1f 82       	std	Y+7, r1	; 0x07
     9c6:	1e 82       	std	Y+6, r1	; 0x06
	return new_item;
}
     9c8:	ce 01       	movw	r24, r28
     9ca:	df 91       	pop	r29
     9cc:	cf 91       	pop	r28
     9ce:	1f 91       	pop	r17
     9d0:	0f 91       	pop	r16
     9d2:	ff 90       	pop	r15
     9d4:	ef 90       	pop	r14
     9d6:	08 95       	ret

000009d8 <add_submenu>:

void add_submenu(menu_item *parent, const char *name){
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	ec 01       	movw	r28, r24
     9de:	cb 01       	movw	r24, r22
	menu_item *new_item=create_menu_item(name,parent);
     9e0:	be 01       	movw	r22, r28
     9e2:	0e 94 ca 04 	call	0x994	; 0x994 <create_menu_item>
	if (parent->first_child==NULL){
     9e6:	ea 81       	ldd	r30, Y+2	; 0x02
     9e8:	fb 81       	ldd	r31, Y+3	; 0x03
     9ea:	30 97       	sbiw	r30, 0x00	; 0
     9ec:	21 f4       	brne	.+8      	; 0x9f6 <add_submenu+0x1e>
		parent->first_child = new_item;
     9ee:	9b 83       	std	Y+3, r25	; 0x03
     9f0:	8a 83       	std	Y+2, r24	; 0x02
     9f2:	0d c0       	rjmp	.+26     	; 0xa0e <add_submenu+0x36>
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
			current = current->next_sibling;
     9f4:	f9 01       	movw	r30, r18
	if (parent->first_child==NULL){
		parent->first_child = new_item;
		} else {
		menu_item *current= parent->first_child;
		
		while(current->next_sibling!=NULL){
     9f6:	26 81       	ldd	r18, Z+6	; 0x06
     9f8:	37 81       	ldd	r19, Z+7	; 0x07
     9fa:	21 15       	cp	r18, r1
     9fc:	31 05       	cpc	r19, r1
     9fe:	d1 f7       	brne	.-12     	; 0x9f4 <add_submenu+0x1c>
			current = current->next_sibling;
		}
		current->next_sibling=new_item;
     a00:	97 83       	std	Z+7, r25	; 0x07
     a02:	86 83       	std	Z+6, r24	; 0x06
		new_item->previous_sibling=current;
     a04:	dc 01       	movw	r26, r24
     a06:	15 96       	adiw	r26, 0x05	; 5
     a08:	fc 93       	st	X, r31
     a0a:	ee 93       	st	-X, r30
     a0c:	14 97       	sbiw	r26, 0x04	; 4
	}
}
     a0e:	df 91       	pop	r29
     a10:	cf 91       	pop	r28
     a12:	08 95       	ret

00000a14 <add_submenu_from_list>:

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
     a14:	df 92       	push	r13
     a16:	ef 92       	push	r14
     a18:	ff 92       	push	r15
     a1a:	0f 93       	push	r16
     a1c:	1f 93       	push	r17
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	7c 01       	movw	r14, r24
     a24:	8b 01       	movw	r16, r22
     a26:	d4 2e       	mov	r13, r20
	for(int i=0; i<length; i++){
     a28:	c0 e0       	ldi	r28, 0x00	; 0
     a2a:	d0 e0       	ldi	r29, 0x00	; 0
     a2c:	0b c0       	rjmp	.+22     	; 0xa44 <add_submenu_from_list+0x30>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
     a2e:	fe 01       	movw	r30, r28
     a30:	ee 0f       	add	r30, r30
     a32:	ff 1f       	adc	r31, r31
     a34:	e0 0f       	add	r30, r16
     a36:	f1 1f       	adc	r31, r17
     a38:	60 81       	ld	r22, Z
     a3a:	71 81       	ldd	r23, Z+1	; 0x01
     a3c:	c7 01       	movw	r24, r14
     a3e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <add_submenu>
		new_item->previous_sibling=current;
	}
}

void add_submenu_from_list(menu_item *parent, const char** menu_list, int8_t length){
	for(int i=0; i<length; i++){
     a42:	21 96       	adiw	r28, 0x01	; 1
     a44:	8d 2d       	mov	r24, r13
     a46:	0d 2c       	mov	r0, r13
     a48:	00 0c       	add	r0, r0
     a4a:	99 0b       	sbc	r25, r25
     a4c:	c8 17       	cp	r28, r24
     a4e:	d9 07       	cpc	r29, r25
     a50:	74 f3       	brlt	.-36     	; 0xa2e <add_submenu_from_list+0x1a>
		/*printf("%s: %s\n", parent->menu_name, menu_list[i]);*/
		add_submenu(parent, menu_list[i]);
	}
}
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	1f 91       	pop	r17
     a58:	0f 91       	pop	r16
     a5a:	ff 90       	pop	r15
     a5c:	ef 90       	pop	r14
     a5e:	df 90       	pop	r13
     a60:	08 95       	ret

00000a62 <OLED_print_menu_2>:


void OLED_print_menu_2(menu_item* parent){
     a62:	0f 93       	push	r16
     a64:	1f 93       	push	r17
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	ec 01       	movw	r28, r24
	OLED_reset();
     a6c:	0e 94 36 04 	call	0x86c	; 0x86c <OLED_reset>
	OLED_pos(0, 50);
     a70:	62 e3       	ldi	r22, 0x32	; 50
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
	OLED_print(parent->menu_name);
     a78:	88 85       	ldd	r24, Y+8	; 0x08
     a7a:	99 85       	ldd	r25, Y+9	; 0x09
     a7c:	0e 94 6f 04 	call	0x8de	; 0x8de <OLED_print>
	menu_item *current=parent->first_child;
     a80:	0a 80       	ldd	r0, Y+2	; 0x02
     a82:	db 81       	ldd	r29, Y+3	; 0x03
     a84:	c0 2d       	mov	r28, r0
	int i=1;
     a86:	01 e0       	ldi	r16, 0x01	; 1
     a88:	10 e0       	ldi	r17, 0x00	; 0
	while(current!=NULL){
     a8a:	0e c0       	rjmp	.+28     	; 0xaa8 <OLED_print_menu_2+0x46>
		OLED_pos(i+1, 10);
     a8c:	6a e0       	ldi	r22, 0x0A	; 10
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	80 0f       	add	r24, r16
     a92:	0e 94 17 04 	call	0x82e	; 0x82e <OLED_pos>
		OLED_print(current->menu_name);
     a96:	88 85       	ldd	r24, Y+8	; 0x08
     a98:	99 85       	ldd	r25, Y+9	; 0x09
     a9a:	0e 94 6f 04 	call	0x8de	; 0x8de <OLED_print>
		current=current->next_sibling;
     a9e:	0e 80       	ldd	r0, Y+6	; 0x06
     aa0:	df 81       	ldd	r29, Y+7	; 0x07
     aa2:	c0 2d       	mov	r28, r0
		i++;
     aa4:	0f 5f       	subi	r16, 0xFF	; 255
     aa6:	1f 4f       	sbci	r17, 0xFF	; 255
	OLED_reset();
	OLED_pos(0, 50);
	OLED_print(parent->menu_name);
	menu_item *current=parent->first_child;
	int i=1;
	while(current!=NULL){
     aa8:	20 97       	sbiw	r28, 0x00	; 0
     aaa:	81 f7       	brne	.-32     	; 0xa8c <OLED_print_menu_2+0x2a>
		OLED_pos(i+1, 10);
		OLED_print(current->menu_name);
		current=current->next_sibling;
		i++;
	}
}
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	08 95       	ret

00000ab6 <menu_init>:
	for(int i=0; i<page_number; i++){
		
	} 
}*/

void menu_init(IO *io){
     ab6:	ef 92       	push	r14
     ab8:	ff 92       	push	r15
     aba:	0f 93       	push	r16
     abc:	1f 93       	push	r17
     abe:	cf 93       	push	r28
     ac0:	df 93       	push	r29
     ac2:	cd b7       	in	r28, 0x3d	; 61
     ac4:	de b7       	in	r29, 0x3e	; 62
     ac6:	64 97       	sbiw	r28, 0x14	; 20
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	f8 94       	cli
     acc:	de bf       	out	0x3e, r29	; 62
     ace:	0f be       	out	0x3f, r0	; 63
     ad0:	cd bf       	out	0x3d, r28	; 61
     ad2:	7c 01       	movw	r14, r24
	menu_item *menu = create_menu_item("Home", NULL); 
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	70 e0       	ldi	r23, 0x00	; 0
     ad8:	84 eb       	ldi	r24, 0xB4	; 180
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	0e 94 ca 04 	call	0x994	; 0x994 <create_menu_item>
     ae0:	8c 01       	movw	r16, r24
	
	const char* home_menu[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4", "Menu 5"};
     ae2:	8a e0       	ldi	r24, 0x0A	; 10
     ae4:	e4 e1       	ldi	r30, 0x14	; 20
     ae6:	f1 e0       	ldi	r31, 0x01	; 1
     ae8:	de 01       	movw	r26, r28
     aea:	11 96       	adiw	r26, 0x01	; 1
     aec:	01 90       	ld	r0, Z+
     aee:	0d 92       	st	X+, r0
     af0:	8a 95       	dec	r24
     af2:	e1 f7       	brne	.-8      	; 0xaec <menu_init+0x36>
	add_submenu_from_list(menu, home_menu, 5);
     af4:	45 e0       	ldi	r20, 0x05	; 5
     af6:	be 01       	movw	r22, r28
     af8:	6f 5f       	subi	r22, 0xFF	; 255
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	c8 01       	movw	r24, r16
     afe:	0e 94 0a 05 	call	0xa14	; 0xa14 <add_submenu_from_list>
	io->current_node = menu->first_child;
     b02:	f8 01       	movw	r30, r16
     b04:	82 81       	ldd	r24, Z+2	; 0x02
     b06:	93 81       	ldd	r25, Z+3	; 0x03
     b08:	f7 01       	movw	r30, r14
     b0a:	95 87       	std	Z+13, r25	; 0x0d
     b0c:	84 87       	std	Z+12, r24	; 0x0c
	const char* home_menu1[] = {"Menu 1", "Menu 2", "Menu 3", "Menu 4", "Back"};
     b0e:	8a e0       	ldi	r24, 0x0A	; 10
     b10:	ee e1       	ldi	r30, 0x1E	; 30
     b12:	f1 e0       	ldi	r31, 0x01	; 1
     b14:	de 01       	movw	r26, r28
     b16:	1b 96       	adiw	r26, 0x0b	; 11
     b18:	01 90       	ld	r0, Z+
     b1a:	0d 92       	st	X+, r0
     b1c:	8a 95       	dec	r24
     b1e:	e1 f7       	brne	.-8      	; 0xb18 <menu_init+0x62>
	add_submenu_from_list(menu->first_child, home_menu1, 5);
     b20:	45 e0       	ldi	r20, 0x05	; 5
     b22:	be 01       	movw	r22, r28
     b24:	65 5f       	subi	r22, 0xF5	; 245
     b26:	7f 4f       	sbci	r23, 0xFF	; 255
     b28:	f8 01       	movw	r30, r16
     b2a:	82 81       	ldd	r24, Z+2	; 0x02
     b2c:	93 81       	ldd	r25, Z+3	; 0x03
     b2e:	0e 94 0a 05 	call	0xa14	; 0xa14 <add_submenu_from_list>
	OLED_print_menu_2(menu);
     b32:	c8 01       	movw	r24, r16
     b34:	0e 94 31 05 	call	0xa62	; 0xa62 <OLED_print_menu_2>
	
}
     b38:	64 96       	adiw	r28, 0x14	; 20
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	ff 90       	pop	r15
     b4e:	ef 90       	pop	r14
     b50:	08 95       	ret

00000b52 <button_clicked>:

void button_clicked(IO* io){
     b52:	0f 93       	push	r16
     b54:	1f 93       	push	r17
     b56:	cf 93       	push	r28
     b58:	df 93       	push	r29
	if(io->button_used == false){
     b5a:	dc 01       	movw	r26, r24
     b5c:	1e 96       	adiw	r26, 0x0e	; 14
     b5e:	2c 91       	ld	r18, X
     b60:	1e 97       	sbiw	r26, 0x0e	; 14
     b62:	21 11       	cpse	r18, r1
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <button_clicked+0x1c>
		io->button_used = true;
     b66:	21 e0       	ldi	r18, 0x01	; 1
     b68:	1e 96       	adiw	r26, 0x0e	; 14
     b6a:	2c 93       	st	X, r18
		return;
     b6c:	27 c0       	rjmp	.+78     	; 0xbbc <button_clicked+0x6a>
	}
	
	if(io->button_state){
     b6e:	fc 01       	movw	r30, r24
     b70:	21 85       	ldd	r18, Z+9	; 0x09
     b72:	22 23       	and	r18, r18
     b74:	19 f1       	breq	.+70     	; 0xbbc <button_clicked+0x6a>
     b76:	ec 01       	movw	r28, r24
		if(strcmp(io->current_node->menu_name, "Back") == 0){
     b78:	04 85       	ldd	r16, Z+12	; 0x0c
     b7a:	15 85       	ldd	r17, Z+13	; 0x0d
     b7c:	6c ed       	ldi	r22, 0xDC	; 220
     b7e:	71 e0       	ldi	r23, 0x01	; 1
     b80:	d8 01       	movw	r26, r16
     b82:	18 96       	adiw	r26, 0x08	; 8
     b84:	8d 91       	ld	r24, X+
     b86:	9c 91       	ld	r25, X
     b88:	19 97       	sbiw	r26, 0x09	; 9
     b8a:	0e 94 2a 08 	call	0x1054	; 0x1054 <strcmp>
     b8e:	89 2b       	or	r24, r25
     b90:	49 f4       	brne	.+18     	; 0xba4 <button_clicked+0x52>
			io->current_node = io->current_node->parent;
     b92:	d8 01       	movw	r26, r16
     b94:	ed 91       	ld	r30, X+
     b96:	fc 91       	ld	r31, X
     b98:	fd 87       	std	Y+13, r31	; 0x0d
     b9a:	ec 87       	std	Y+12, r30	; 0x0c
			io->current_node = io->current_node->parent;
     b9c:	80 81       	ld	r24, Z
     b9e:	91 81       	ldd	r25, Z+1	; 0x01
     ba0:	9d 87       	std	Y+13, r25	; 0x0d
     ba2:	8c 87       	std	Y+12, r24	; 0x0c
		}
		
		OLED_print_menu_2(io->current_node);
     ba4:	8c 85       	ldd	r24, Y+12	; 0x0c
     ba6:	9d 85       	ldd	r25, Y+13	; 0x0d
     ba8:	0e 94 31 05 	call	0xa62	; 0xa62 <OLED_print_menu_2>
		io->current_node = io->current_node->first_child;
     bac:	ec 85       	ldd	r30, Y+12	; 0x0c
     bae:	fd 85       	ldd	r31, Y+13	; 0x0d
     bb0:	82 81       	ldd	r24, Z+2	; 0x02
     bb2:	93 81       	ldd	r25, Z+3	; 0x03
     bb4:	9d 87       	std	Y+13, r25	; 0x0d
     bb6:	8c 87       	std	Y+12, r24	; 0x0c
		io->menu_ptr = 2;
     bb8:	82 e0       	ldi	r24, 0x02	; 2
     bba:	8a 87       	std	Y+10, r24	; 0x0a
	}
}
     bbc:	df 91       	pop	r29
     bbe:	cf 91       	pop	r28
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	08 95       	ret

00000bc6 <set_states>:
		}
		io->joy_dir = NEUTRAL;
	}
}

void set_states(IO* io){
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	ec 01       	movw	r28, r24
	xmem_write(16, adc_adr, BASE_ADDRESS);
     bcc:	40 e0       	ldi	r20, 0x00	; 0
     bce:	50 e1       	ldi	r21, 0x10	; 16
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	74 e1       	ldi	r23, 0x14	; 20
     bd4:	80 e1       	ldi	r24, 0x10	; 16
     bd6:	0e 94 e5 06 	call	0xdca	; 0xdca <xmem_write>
	io->joy_x = convert_x(io, xmem_read(adc_adr, BASE_ADDRESS));
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	70 e1       	ldi	r23, 0x10	; 16
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	94 e1       	ldi	r25, 0x14	; 20
     be2:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xmem_read>
     be6:	68 2f       	mov	r22, r24
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	ce 01       	movw	r24, r28
     bec:	0e 94 82 02 	call	0x504	; 0x504 <convert_x>
     bf0:	99 83       	std	Y+1, r25	; 0x01
     bf2:	88 83       	st	Y, r24
	io->joy_y = convert_y(io, xmem_read(adc_adr, BASE_ADDRESS));
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e1       	ldi	r23, 0x10	; 16
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	94 e1       	ldi	r25, 0x14	; 20
     bfc:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xmem_read>
     c00:	68 2f       	mov	r22, r24
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	ce 01       	movw	r24, r28
     c06:	0e 94 97 02 	call	0x52e	; 0x52e <convert_y>
     c0a:	9b 83       	std	Y+3, r25	; 0x03
     c0c:	8a 83       	std	Y+2, r24	; 0x02
	//io->slider_l = xmem_read(adc_adr,BASE_ADDRESS)-9216;
	//io->slider_r = xmem_read(adc_adr, BASE_ADDRESS)-9216;
	io->slider_l = xmem_read(adc_adr,BASE_ADDRESS);
     c0e:	60 e0       	ldi	r22, 0x00	; 0
     c10:	70 e1       	ldi	r23, 0x10	; 16
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	94 e1       	ldi	r25, 0x14	; 20
     c16:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xmem_read>
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	9d 83       	std	Y+5, r25	; 0x05
     c1e:	8c 83       	std	Y+4, r24	; 0x04
	io->slider_r = xmem_read(adc_adr,BASE_ADDRESS);
     c20:	60 e0       	ldi	r22, 0x00	; 0
     c22:	70 e1       	ldi	r23, 0x10	; 16
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	94 e1       	ldi	r25, 0x14	; 20
     c28:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xmem_read>
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	9f 83       	std	Y+7, r25	; 0x07
     c30:	8e 83       	std	Y+6, r24	; 0x06
	find_joy_dir(io);
     c32:	ce 01       	movw	r24, r28
     c34:	0e 94 ac 02 	call	0x558	; 0x558 <find_joy_dir>
	io->button_state = read_button(io);
     c38:	ce 01       	movw	r24, r28
     c3a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <read_button>
     c3e:	89 87       	std	Y+9, r24	; 0x09
	set_menu_ptr(io);
     c40:	ce 01       	movw	r24, r28
     c42:	0e 94 8a 04 	call	0x914	; 0x914 <set_menu_ptr>
	button_clicked(io);
     c46:	ce 01       	movw	r24, r28
     c48:	0e 94 a9 05 	call	0xb52	; 0xb52 <button_clicked>
}
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <send_joy_pos>:
		io->current_node = io->current_node->first_child;
		io->menu_ptr = 2;
	}
}

can_message send_joy_pos(IO* io){
     c52:	ef 92       	push	r14
     c54:	ff 92       	push	r15
     c56:	1f 93       	push	r17
     c58:	cf 93       	push	r28
     c5a:	df 93       	push	r29
     c5c:	ec 01       	movw	r28, r24
     c5e:	7b 01       	movw	r14, r22
	//get_joy_x(&)
	char x_position = get_joy_x(io);
     c60:	cb 01       	movw	r24, r22
     c62:	0e 94 49 03 	call	0x692	; 0x692 <get_joy_x>
     c66:	18 2f       	mov	r17, r24
	if(x_position > 249){
     c68:	8a 3f       	cpi	r24, 0xFA	; 250
     c6a:	08 f0       	brcs	.+2      	; 0xc6e <send_joy_pos+0x1c>
		x_position = 0;
     c6c:	10 e0       	ldi	r17, 0x00	; 0
	}
	char y_position = get_joy_y(io);
     c6e:	c7 01       	movw	r24, r14
     c70:	0e 94 4d 03 	call	0x69a	; 0x69a <get_joy_y>
	if(y_position > 249){
     c74:	8a 3f       	cpi	r24, 0xFA	; 250
     c76:	08 f0       	brcs	.+2      	; 0xc7a <send_joy_pos+0x28>
		y_position = 0;
     c78:	80 e0       	ldi	r24, 0x00	; 0
	}
	
	can_message msg = {0x7ff, 0x02, {x_position, y_position}};
     c7a:	9b e0       	ldi	r25, 0x0B	; 11
     c7c:	fe 01       	movw	r30, r28
     c7e:	11 92       	st	Z+, r1
     c80:	9a 95       	dec	r25
     c82:	e9 f7       	brne	.-6      	; 0xc7e <send_joy_pos+0x2c>
     c84:	2f ef       	ldi	r18, 0xFF	; 255
     c86:	37 e0       	ldi	r19, 0x07	; 7
     c88:	39 83       	std	Y+1, r19	; 0x01
     c8a:	28 83       	st	Y, r18
     c8c:	92 e0       	ldi	r25, 0x02	; 2
     c8e:	9a 83       	std	Y+2, r25	; 0x02
     c90:	1b 83       	std	Y+3, r17	; 0x03
     c92:	8c 83       	std	Y+4, r24	; 0x04
	return msg;
     c94:	ce 01       	movw	r24, r28
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	1f 91       	pop	r17
     c9c:	ff 90       	pop	r15
     c9e:	ef 90       	pop	r14
     ca0:	08 95       	ret

00000ca2 <pwm_init>:
	TCCR3B = (0<<WGM33) | (1<<WGM32) |(1<<CS30);
	OCR3B = 0;
};
		
void pwm_init(void) {
	DDRD |=(1<<DDD4);
     ca2:	81 b3       	in	r24, 0x11	; 17
     ca4:	80 61       	ori	r24, 0x10	; 16
     ca6:	81 bb       	out	0x11, r24	; 17
	TCCR3A = (0<<COM3A0) | (1<<COM3A1) | (0<<WGM31) | (1<<WGM30);
     ca8:	81 e8       	ldi	r24, 0x81	; 129
     caa:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
	TCCR3B = (0<<ICES3) | (1<<WGM32) |(1<<CS30);
     cae:	89 e0       	ldi	r24, 0x09	; 9
     cb0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
	OCR3B = 0;
     cb4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cb8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cbc:	08 95       	ret

00000cbe <main>:
};

int main(void)
{
     cbe:	cf 93       	push	r28
     cc0:	df 93       	push	r29
     cc2:	cd b7       	in	r28, 0x3d	; 61
     cc4:	de b7       	in	r29, 0x3e	; 62
     cc6:	a7 97       	sbiw	r28, 0x27	; 39
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	f8 94       	cli
     ccc:	de bf       	out	0x3e, r29	; 62
     cce:	0f be       	out	0x3f, r0	; 63
     cd0:	cd bf       	out	0x3d, r28	; 61
	/* Replace with your application code */
	pwm_init();
     cd2:	0e 94 51 06 	call	0xca2	; 0xca2 <pwm_init>
	USART_Init(MYUBRR);
     cd6:	8f e1       	ldi	r24, 0x1F	; 31
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 bb 06 	call	0xd76	; 0xd76 <USART_Init>

	init_printf();
     cde:	0e 94 d4 06 	call	0xda8	; 0xda8 <init_printf>
	xmem_init();
     ce2:	0e 94 db 06 	call	0xdb6	; 0xdb6 <xmem_init>
	oled_init();
     ce6:	0e 94 5d 03 	call	0x6ba	; 0x6ba <oled_init>
	IO io;
	io_init(&io);
     cea:	ce 01       	movw	r24, r28
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	0e 94 6d 02 	call	0x4da	; 0x4da <io_init>
	OLED_reset();
     cf2:	0e 94 36 04 	call	0x86c	; 0x86c <OLED_reset>
	//OLED_print_menu((char** ) current_menu->items, current_menu->num_items);
	
	//const char* menu1[] = {"Menu 1", "HOME", "Test 1", "Test 2"};
	//int16_t menu1_length = sizeof(menu1) / sizeof(menu1[0]);
	
	menu_init(&io);
     cf6:	ce 01       	movw	r24, r28
     cf8:	01 96       	adiw	r24, 0x01	; 1
     cfa:	0e 94 5b 05 	call	0xab6	; 0xab6 <menu_init>
	SPI_master_init();
     cfe:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_master_init>
	can_cntrl_config();
     d02:	0e 94 0f 02 	call	0x41e	; 0x41e <can_cntrl_config>
		uint8_t dlc = can_cntrl_read(RXB0DLC) & 0x0F; // Mask to get only the lower 4 bits (DLC)
		
		uint8_t out1 = can_cntrl_read(RXB0D0);
		uint8_t out2 = can_cntrl_read(RXB0D1);
		*/
	can_message joy_msg={};
     d06:	fe 01       	movw	r30, r28
     d08:	72 96       	adiw	r30, 0x12	; 18
     d0a:	8b e0       	ldi	r24, 0x0B	; 11
     d0c:	df 01       	movw	r26, r30
     d0e:	1d 92       	st	X+, r1
     d10:	8a 95       	dec	r24
     d12:	e9 f7       	brne	.-6      	; 0xd0e <main+0x50>
		_delay_ms(10);
		uint16_t value=adc[0];
		printf("Adc-verdi: %u\n\n",value);
		_delay_ms(10);*/
		
		set_states(&io);
     d14:	ce 01       	movw	r24, r28
     d16:	01 96       	adiw	r24, 0x01	; 1
     d18:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <set_states>
		//can_message_send(&msg);
		//_delay_ms(10);
		get_states(&io);
     d1c:	ce 01       	movw	r24, r28
     d1e:	01 96       	adiw	r24, 0x01	; 1
     d20:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <get_states>
		
		/*msg = can_message_read(2);
		printf("%x\n",msg.data[0]);
		printf("%x\n",msg.data[1]);*/
		
		joy_msg=send_joy_pos(&io);
     d24:	be 01       	movw	r22, r28
     d26:	6f 5f       	subi	r22, 0xFF	; 255
     d28:	7f 4f       	sbci	r23, 0xFF	; 255
     d2a:	ce 01       	movw	r24, r28
     d2c:	4d 96       	adiw	r24, 0x1d	; 29
     d2e:	0e 94 29 06 	call	0xc52	; 0xc52 <send_joy_pos>
     d32:	8b e0       	ldi	r24, 0x0B	; 11
     d34:	fe 01       	movw	r30, r28
     d36:	7d 96       	adiw	r30, 0x1d	; 29
     d38:	de 01       	movw	r26, r28
     d3a:	52 96       	adiw	r26, 0x12	; 18
     d3c:	01 90       	ld	r0, Z+
     d3e:	0d 92       	st	X+, r0
     d40:	8a 95       	dec	r24
     d42:	e1 f7       	brne	.-8      	; 0xd3c <main+0x7e>
		//printf("%d \n", joy_msg.data[0]);
		//printf("%d \n", joy_msg.data[1]);
		
		can_message_send(&joy_msg);
     d44:	ce 01       	movw	r24, r28
     d46:	42 96       	adiw	r24, 0x12	; 18
     d48:	0e 94 30 02 	call	0x460	; 0x460 <can_message_send>
     d4c:	e3 cf       	rjmp	.-58     	; 0xd14 <main+0x56>

00000d4e <SPI_SS_low>:
#include "SPI.h"


void SPI_SS_low(void) {
	PORTB &= ~(1 << PB4);  // Pull SS/CS (PB4) low to select the slave
     d4e:	88 b3       	in	r24, 0x18	; 24
     d50:	8f 7e       	andi	r24, 0xEF	; 239
     d52:	88 bb       	out	0x18, r24	; 24
     d54:	08 95       	ret

00000d56 <SPI_SS_high>:
}

void SPI_SS_high(void) {
	PORTB |= (1 << PB4);   // Pull SS/CS (PB4) high to deselect the slave
     d56:	88 b3       	in	r24, 0x18	; 24
     d58:	80 61       	ori	r24, 0x10	; 16
     d5a:	88 bb       	out	0x18, r24	; 24
     d5c:	08 95       	ret

00000d5e <SPI_master_init>:
}


//SPI functions
void SPI_master_init(void){
	DDRB = (1<<PB5)|(1<<PB7)|(1<<PB4); //Set MOSI and SCK output, all others input
     d5e:	80 eb       	ldi	r24, 0xB0	; 176
     d60:	87 bb       	out	0x17, r24	; 23
	SPI_SS_high();
     d62:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_SS_high>
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0); //Enable SPI, Master, set clock rate fck/16
     d66:	81 e5       	ldi	r24, 0x51	; 81
     d68:	8d b9       	out	0x0d, r24	; 13
     d6a:	08 95       	ret

00000d6c <SPI_MasterTransmit>:
}

uint8_t SPI_MasterTransmit(char cData){
	SPDR = cData; //Start transmission
     d6c:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF))){
     d6e:	77 9b       	sbis	0x0e, 7	; 14
     d70:	fe cf       	rjmp	.-4      	; 0xd6e <SPI_MasterTransmit+0x2>
		} //Wait for transmission complete
	return SPDR;
     d72:	8f b1       	in	r24, 0x0f	; 15
}
     d74:	08 95       	ret

00000d76 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
     d76:	90 bd       	out	0x20, r25	; 32
     d78:	89 b9       	out	0x09, r24	; 9
     d7a:	88 e1       	ldi	r24, 0x18	; 24
     d7c:	8a b9       	out	0x0a, r24	; 10
     d7e:	8e e8       	ldi	r24, 0x8E	; 142
     d80:	80 bd       	out	0x20, r24	; 32
     d82:	08 95       	ret

00000d84 <USART_Transmit>:
     d84:	5d 9b       	sbis	0x0b, 5	; 11
     d86:	fe cf       	rjmp	.-4      	; 0xd84 <USART_Transmit>
     d88:	8c b9       	out	0x0c, r24	; 12
     d8a:	08 95       	ret

00000d8c <uart_putchar>:
     d8c:	cf 93       	push	r28
     d8e:	c8 2f       	mov	r28, r24
     d90:	8a 30       	cpi	r24, 0x0A	; 10
     d92:	19 f4       	brne	.+6      	; 0xd9a <uart_putchar+0xe>
     d94:	8d e0       	ldi	r24, 0x0D	; 13
     d96:	0e 94 c2 06 	call	0xd84	; 0xd84 <USART_Transmit>
     d9a:	8c 2f       	mov	r24, r28
     d9c:	0e 94 c2 06 	call	0xd84	; 0xd84 <USART_Transmit>
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	cf 91       	pop	r28
     da6:	08 95       	ret

00000da8 <init_printf>:


void init_printf(void)
{
	static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
	stdout = &uart_stdout;  // Set stdout to use uart_putchar
     da8:	86 e0       	ldi	r24, 0x06	; 6
     daa:	91 e0       	ldi	r25, 0x01	; 1
     dac:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <__iob+0x3>
     db0:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <__iob+0x2>
     db4:	08 95       	ret

00000db6 <xmem_init>:
#include "xmem.h"
#include <avr/io.h>


void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
     db6:	85 b7       	in	r24, 0x35	; 53
     db8:	80 68       	ori	r24, 0x80	; 128
     dba:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(1 << XMM0 | 1 << XMM1 ); // mask bits / reduce bus width
     dbc:	80 b7       	in	r24, 0x30	; 48
     dbe:	87 7e       	andi	r24, 0xE7	; 231
     dc0:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2 );
     dc2:	80 b7       	in	r24, 0x30	; 48
     dc4:	80 62       	ori	r24, 0x20	; 32
     dc6:	80 bf       	out	0x30, r24	; 48
     dc8:	08 95       	ret

00000dca <xmem_write>:
}

void xmem_write ( uint8_t data , uint16_t addr, uint16_t base_address){
	volatile char * ext_mem = ( char *) base_address ;
	ext_mem [ addr ]= data ;
     dca:	fa 01       	movw	r30, r20
     dcc:	e6 0f       	add	r30, r22
     dce:	f7 1f       	adc	r31, r23
     dd0:	80 83       	st	Z, r24
     dd2:	08 95       	ret

00000dd4 <xmem_read>:
}


uint8_t xmem_read ( uint16_t addr, uint16_t base_address){
	volatile char * ext_mem = ( char *) base_address;
	uint8_t ret_val = ext_mem [ addr ];
     dd4:	86 0f       	add	r24, r22
     dd6:	97 1f       	adc	r25, r23
     dd8:	fc 01       	movw	r30, r24
     dda:	80 81       	ld	r24, Z
	return ret_val ;
}
     ddc:	08 95       	ret

00000dde <malloc>:
     dde:	0f 93       	push	r16
     de0:	1f 93       	push	r17
     de2:	cf 93       	push	r28
     de4:	df 93       	push	r29
     de6:	82 30       	cpi	r24, 0x02	; 2
     de8:	91 05       	cpc	r25, r1
     dea:	10 f4       	brcc	.+4      	; 0xdf0 <malloc+0x12>
     dec:	82 e0       	ldi	r24, 0x02	; 2
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <__flp>
     df4:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <__flp+0x1>
     df8:	20 e0       	ldi	r18, 0x00	; 0
     dfa:	30 e0       	ldi	r19, 0x00	; 0
     dfc:	a0 e0       	ldi	r26, 0x00	; 0
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	30 97       	sbiw	r30, 0x00	; 0
     e02:	19 f1       	breq	.+70     	; 0xe4a <malloc+0x6c>
     e04:	40 81       	ld	r20, Z
     e06:	51 81       	ldd	r21, Z+1	; 0x01
     e08:	02 81       	ldd	r16, Z+2	; 0x02
     e0a:	13 81       	ldd	r17, Z+3	; 0x03
     e0c:	48 17       	cp	r20, r24
     e0e:	59 07       	cpc	r21, r25
     e10:	c8 f0       	brcs	.+50     	; 0xe44 <malloc+0x66>
     e12:	84 17       	cp	r24, r20
     e14:	95 07       	cpc	r25, r21
     e16:	69 f4       	brne	.+26     	; 0xe32 <malloc+0x54>
     e18:	10 97       	sbiw	r26, 0x00	; 0
     e1a:	31 f0       	breq	.+12     	; 0xe28 <malloc+0x4a>
     e1c:	12 96       	adiw	r26, 0x02	; 2
     e1e:	0c 93       	st	X, r16
     e20:	12 97       	sbiw	r26, 0x02	; 2
     e22:	13 96       	adiw	r26, 0x03	; 3
     e24:	1c 93       	st	X, r17
     e26:	27 c0       	rjmp	.+78     	; 0xe76 <malloc+0x98>
     e28:	00 93 e4 01 	sts	0x01E4, r16	; 0x8001e4 <__flp>
     e2c:	10 93 e5 01 	sts	0x01E5, r17	; 0x8001e5 <__flp+0x1>
     e30:	22 c0       	rjmp	.+68     	; 0xe76 <malloc+0x98>
     e32:	21 15       	cp	r18, r1
     e34:	31 05       	cpc	r19, r1
     e36:	19 f0       	breq	.+6      	; 0xe3e <malloc+0x60>
     e38:	42 17       	cp	r20, r18
     e3a:	53 07       	cpc	r21, r19
     e3c:	18 f4       	brcc	.+6      	; 0xe44 <malloc+0x66>
     e3e:	9a 01       	movw	r18, r20
     e40:	bd 01       	movw	r22, r26
     e42:	ef 01       	movw	r28, r30
     e44:	df 01       	movw	r26, r30
     e46:	f8 01       	movw	r30, r16
     e48:	db cf       	rjmp	.-74     	; 0xe00 <malloc+0x22>
     e4a:	21 15       	cp	r18, r1
     e4c:	31 05       	cpc	r19, r1
     e4e:	f9 f0       	breq	.+62     	; 0xe8e <malloc+0xb0>
     e50:	28 1b       	sub	r18, r24
     e52:	39 0b       	sbc	r19, r25
     e54:	24 30       	cpi	r18, 0x04	; 4
     e56:	31 05       	cpc	r19, r1
     e58:	80 f4       	brcc	.+32     	; 0xe7a <malloc+0x9c>
     e5a:	8a 81       	ldd	r24, Y+2	; 0x02
     e5c:	9b 81       	ldd	r25, Y+3	; 0x03
     e5e:	61 15       	cp	r22, r1
     e60:	71 05       	cpc	r23, r1
     e62:	21 f0       	breq	.+8      	; 0xe6c <malloc+0x8e>
     e64:	fb 01       	movw	r30, r22
     e66:	93 83       	std	Z+3, r25	; 0x03
     e68:	82 83       	std	Z+2, r24	; 0x02
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <malloc+0x96>
     e6c:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <__flp+0x1>
     e70:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <__flp>
     e74:	fe 01       	movw	r30, r28
     e76:	32 96       	adiw	r30, 0x02	; 2
     e78:	44 c0       	rjmp	.+136    	; 0xf02 <malloc+0x124>
     e7a:	fe 01       	movw	r30, r28
     e7c:	e2 0f       	add	r30, r18
     e7e:	f3 1f       	adc	r31, r19
     e80:	81 93       	st	Z+, r24
     e82:	91 93       	st	Z+, r25
     e84:	22 50       	subi	r18, 0x02	; 2
     e86:	31 09       	sbc	r19, r1
     e88:	39 83       	std	Y+1, r19	; 0x01
     e8a:	28 83       	st	Y, r18
     e8c:	3a c0       	rjmp	.+116    	; 0xf02 <malloc+0x124>
     e8e:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <__data_end>
     e92:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <__data_end+0x1>
     e96:	23 2b       	or	r18, r19
     e98:	41 f4       	brne	.+16     	; 0xeaa <malloc+0xcc>
     e9a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     e9e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     ea2:	30 93 e3 01 	sts	0x01E3, r19	; 0x8001e3 <__data_end+0x1>
     ea6:	20 93 e2 01 	sts	0x01E2, r18	; 0x8001e2 <__data_end>
     eaa:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     eae:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     eb2:	21 15       	cp	r18, r1
     eb4:	31 05       	cpc	r19, r1
     eb6:	41 f4       	brne	.+16     	; 0xec8 <malloc+0xea>
     eb8:	2d b7       	in	r18, 0x3d	; 61
     eba:	3e b7       	in	r19, 0x3e	; 62
     ebc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     ec0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     ec4:	24 1b       	sub	r18, r20
     ec6:	35 0b       	sbc	r19, r21
     ec8:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <__data_end>
     ecc:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <__data_end+0x1>
     ed0:	e2 17       	cp	r30, r18
     ed2:	f3 07       	cpc	r31, r19
     ed4:	a0 f4       	brcc	.+40     	; 0xefe <malloc+0x120>
     ed6:	2e 1b       	sub	r18, r30
     ed8:	3f 0b       	sbc	r19, r31
     eda:	28 17       	cp	r18, r24
     edc:	39 07       	cpc	r19, r25
     ede:	78 f0       	brcs	.+30     	; 0xefe <malloc+0x120>
     ee0:	ac 01       	movw	r20, r24
     ee2:	4e 5f       	subi	r20, 0xFE	; 254
     ee4:	5f 4f       	sbci	r21, 0xFF	; 255
     ee6:	24 17       	cp	r18, r20
     ee8:	35 07       	cpc	r19, r21
     eea:	48 f0       	brcs	.+18     	; 0xefe <malloc+0x120>
     eec:	4e 0f       	add	r20, r30
     eee:	5f 1f       	adc	r21, r31
     ef0:	50 93 e3 01 	sts	0x01E3, r21	; 0x8001e3 <__data_end+0x1>
     ef4:	40 93 e2 01 	sts	0x01E2, r20	; 0x8001e2 <__data_end>
     ef8:	81 93       	st	Z+, r24
     efa:	91 93       	st	Z+, r25
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <malloc+0x124>
     efe:	e0 e0       	ldi	r30, 0x00	; 0
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	cf 01       	movw	r24, r30
     f04:	df 91       	pop	r29
     f06:	cf 91       	pop	r28
     f08:	1f 91       	pop	r17
     f0a:	0f 91       	pop	r16
     f0c:	08 95       	ret

00000f0e <free>:
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	00 97       	sbiw	r24, 0x00	; 0
     f14:	09 f4       	brne	.+2      	; 0xf18 <free+0xa>
     f16:	81 c0       	rjmp	.+258    	; 0x101a <free+0x10c>
     f18:	fc 01       	movw	r30, r24
     f1a:	32 97       	sbiw	r30, 0x02	; 2
     f1c:	13 82       	std	Z+3, r1	; 0x03
     f1e:	12 82       	std	Z+2, r1	; 0x02
     f20:	a0 91 e4 01 	lds	r26, 0x01E4	; 0x8001e4 <__flp>
     f24:	b0 91 e5 01 	lds	r27, 0x01E5	; 0x8001e5 <__flp+0x1>
     f28:	10 97       	sbiw	r26, 0x00	; 0
     f2a:	81 f4       	brne	.+32     	; 0xf4c <free+0x3e>
     f2c:	20 81       	ld	r18, Z
     f2e:	31 81       	ldd	r19, Z+1	; 0x01
     f30:	82 0f       	add	r24, r18
     f32:	93 1f       	adc	r25, r19
     f34:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <__data_end>
     f38:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <__data_end+0x1>
     f3c:	28 17       	cp	r18, r24
     f3e:	39 07       	cpc	r19, r25
     f40:	51 f5       	brne	.+84     	; 0xf96 <free+0x88>
     f42:	f0 93 e3 01 	sts	0x01E3, r31	; 0x8001e3 <__data_end+0x1>
     f46:	e0 93 e2 01 	sts	0x01E2, r30	; 0x8001e2 <__data_end>
     f4a:	67 c0       	rjmp	.+206    	; 0x101a <free+0x10c>
     f4c:	ed 01       	movw	r28, r26
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	ce 17       	cp	r28, r30
     f54:	df 07       	cpc	r29, r31
     f56:	40 f4       	brcc	.+16     	; 0xf68 <free+0x5a>
     f58:	4a 81       	ldd	r20, Y+2	; 0x02
     f5a:	5b 81       	ldd	r21, Y+3	; 0x03
     f5c:	9e 01       	movw	r18, r28
     f5e:	41 15       	cp	r20, r1
     f60:	51 05       	cpc	r21, r1
     f62:	f1 f0       	breq	.+60     	; 0xfa0 <free+0x92>
     f64:	ea 01       	movw	r28, r20
     f66:	f5 cf       	rjmp	.-22     	; 0xf52 <free+0x44>
     f68:	d3 83       	std	Z+3, r29	; 0x03
     f6a:	c2 83       	std	Z+2, r28	; 0x02
     f6c:	40 81       	ld	r20, Z
     f6e:	51 81       	ldd	r21, Z+1	; 0x01
     f70:	84 0f       	add	r24, r20
     f72:	95 1f       	adc	r25, r21
     f74:	c8 17       	cp	r28, r24
     f76:	d9 07       	cpc	r29, r25
     f78:	59 f4       	brne	.+22     	; 0xf90 <free+0x82>
     f7a:	88 81       	ld	r24, Y
     f7c:	99 81       	ldd	r25, Y+1	; 0x01
     f7e:	84 0f       	add	r24, r20
     f80:	95 1f       	adc	r25, r21
     f82:	02 96       	adiw	r24, 0x02	; 2
     f84:	91 83       	std	Z+1, r25	; 0x01
     f86:	80 83       	st	Z, r24
     f88:	8a 81       	ldd	r24, Y+2	; 0x02
     f8a:	9b 81       	ldd	r25, Y+3	; 0x03
     f8c:	93 83       	std	Z+3, r25	; 0x03
     f8e:	82 83       	std	Z+2, r24	; 0x02
     f90:	21 15       	cp	r18, r1
     f92:	31 05       	cpc	r19, r1
     f94:	29 f4       	brne	.+10     	; 0xfa0 <free+0x92>
     f96:	f0 93 e5 01 	sts	0x01E5, r31	; 0x8001e5 <__flp+0x1>
     f9a:	e0 93 e4 01 	sts	0x01E4, r30	; 0x8001e4 <__flp>
     f9e:	3d c0       	rjmp	.+122    	; 0x101a <free+0x10c>
     fa0:	e9 01       	movw	r28, r18
     fa2:	fb 83       	std	Y+3, r31	; 0x03
     fa4:	ea 83       	std	Y+2, r30	; 0x02
     fa6:	49 91       	ld	r20, Y+
     fa8:	59 91       	ld	r21, Y+
     faa:	c4 0f       	add	r28, r20
     fac:	d5 1f       	adc	r29, r21
     fae:	ec 17       	cp	r30, r28
     fb0:	fd 07       	cpc	r31, r29
     fb2:	61 f4       	brne	.+24     	; 0xfcc <free+0xbe>
     fb4:	80 81       	ld	r24, Z
     fb6:	91 81       	ldd	r25, Z+1	; 0x01
     fb8:	84 0f       	add	r24, r20
     fba:	95 1f       	adc	r25, r21
     fbc:	02 96       	adiw	r24, 0x02	; 2
     fbe:	e9 01       	movw	r28, r18
     fc0:	99 83       	std	Y+1, r25	; 0x01
     fc2:	88 83       	st	Y, r24
     fc4:	82 81       	ldd	r24, Z+2	; 0x02
     fc6:	93 81       	ldd	r25, Z+3	; 0x03
     fc8:	9b 83       	std	Y+3, r25	; 0x03
     fca:	8a 83       	std	Y+2, r24	; 0x02
     fcc:	e0 e0       	ldi	r30, 0x00	; 0
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	12 96       	adiw	r26, 0x02	; 2
     fd2:	8d 91       	ld	r24, X+
     fd4:	9c 91       	ld	r25, X
     fd6:	13 97       	sbiw	r26, 0x03	; 3
     fd8:	00 97       	sbiw	r24, 0x00	; 0
     fda:	19 f0       	breq	.+6      	; 0xfe2 <free+0xd4>
     fdc:	fd 01       	movw	r30, r26
     fde:	dc 01       	movw	r26, r24
     fe0:	f7 cf       	rjmp	.-18     	; 0xfd0 <free+0xc2>
     fe2:	8d 91       	ld	r24, X+
     fe4:	9c 91       	ld	r25, X
     fe6:	11 97       	sbiw	r26, 0x01	; 1
     fe8:	9d 01       	movw	r18, r26
     fea:	2e 5f       	subi	r18, 0xFE	; 254
     fec:	3f 4f       	sbci	r19, 0xFF	; 255
     fee:	82 0f       	add	r24, r18
     ff0:	93 1f       	adc	r25, r19
     ff2:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <__data_end>
     ff6:	30 91 e3 01 	lds	r19, 0x01E3	; 0x8001e3 <__data_end+0x1>
     ffa:	28 17       	cp	r18, r24
     ffc:	39 07       	cpc	r19, r25
     ffe:	69 f4       	brne	.+26     	; 0x101a <free+0x10c>
    1000:	30 97       	sbiw	r30, 0x00	; 0
    1002:	29 f4       	brne	.+10     	; 0x100e <free+0x100>
    1004:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <__flp+0x1>
    1008:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <__flp>
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <free+0x104>
    100e:	13 82       	std	Z+3, r1	; 0x03
    1010:	12 82       	std	Z+2, r1	; 0x02
    1012:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <__data_end+0x1>
    1016:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <__data_end>
    101a:	df 91       	pop	r29
    101c:	cf 91       	pop	r28
    101e:	08 95       	ret

00001020 <strdup>:
    1020:	0f 93       	push	r16
    1022:	1f 93       	push	r17
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	8c 01       	movw	r16, r24
    102a:	fc 01       	movw	r30, r24
    102c:	01 90       	ld	r0, Z+
    102e:	00 20       	and	r0, r0
    1030:	e9 f7       	brne	.-6      	; 0x102c <strdup+0xc>
    1032:	cf 01       	movw	r24, r30
    1034:	80 1b       	sub	r24, r16
    1036:	91 0b       	sbc	r25, r17
    1038:	0e 94 ef 06 	call	0xdde	; 0xdde <malloc>
    103c:	ec 01       	movw	r28, r24
    103e:	00 97       	sbiw	r24, 0x00	; 0
    1040:	19 f0       	breq	.+6      	; 0x1048 <strdup+0x28>
    1042:	b8 01       	movw	r22, r16
    1044:	0e 94 33 08 	call	0x1066	; 0x1066 <strcpy>
    1048:	ce 01       	movw	r24, r28
    104a:	df 91       	pop	r29
    104c:	cf 91       	pop	r28
    104e:	1f 91       	pop	r17
    1050:	0f 91       	pop	r16
    1052:	08 95       	ret

00001054 <strcmp>:
    1054:	fb 01       	movw	r30, r22
    1056:	dc 01       	movw	r26, r24
    1058:	8d 91       	ld	r24, X+
    105a:	01 90       	ld	r0, Z+
    105c:	80 19       	sub	r24, r0
    105e:	01 10       	cpse	r0, r1
    1060:	d9 f3       	breq	.-10     	; 0x1058 <strcmp+0x4>
    1062:	99 0b       	sbc	r25, r25
    1064:	08 95       	ret

00001066 <strcpy>:
    1066:	fb 01       	movw	r30, r22
    1068:	dc 01       	movw	r26, r24
    106a:	01 90       	ld	r0, Z+
    106c:	0d 92       	st	X+, r0
    106e:	00 20       	and	r0, r0
    1070:	e1 f7       	brne	.-8      	; 0x106a <strcpy+0x4>
    1072:	08 95       	ret

00001074 <printf>:
    1074:	a0 e0       	ldi	r26, 0x00	; 0
    1076:	b0 e0       	ldi	r27, 0x00	; 0
    1078:	e0 e4       	ldi	r30, 0x40	; 64
    107a:	f8 e0       	ldi	r31, 0x08	; 8
    107c:	0c 94 f8 0a 	jmp	0x15f0	; 0x15f0 <__prologue_saves__+0x20>
    1080:	ae 01       	movw	r20, r28
    1082:	4b 5f       	subi	r20, 0xFB	; 251
    1084:	5f 4f       	sbci	r21, 0xFF	; 255
    1086:	fa 01       	movw	r30, r20
    1088:	61 91       	ld	r22, Z+
    108a:	71 91       	ld	r23, Z+
    108c:	af 01       	movw	r20, r30
    108e:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <__iob+0x2>
    1092:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <__iob+0x3>
    1096:	0e 94 57 08 	call	0x10ae	; 0x10ae <vfprintf>
    109a:	e2 e0       	ldi	r30, 0x02	; 2
    109c:	0c 94 14 0b 	jmp	0x1628	; 0x1628 <__epilogue_restores__+0x20>

000010a0 <putchar>:
    10a0:	60 91 e8 01 	lds	r22, 0x01E8	; 0x8001e8 <__iob+0x2>
    10a4:	70 91 e9 01 	lds	r23, 0x01E9	; 0x8001e9 <__iob+0x3>
    10a8:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    10ac:	08 95       	ret

000010ae <vfprintf>:
    10ae:	ab e0       	ldi	r26, 0x0B	; 11
    10b0:	b0 e0       	ldi	r27, 0x00	; 0
    10b2:	ed e5       	ldi	r30, 0x5D	; 93
    10b4:	f8 e0       	ldi	r31, 0x08	; 8
    10b6:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__prologue_saves__>
    10ba:	6c 01       	movw	r12, r24
    10bc:	7b 01       	movw	r14, r22
    10be:	8a 01       	movw	r16, r20
    10c0:	fc 01       	movw	r30, r24
    10c2:	17 82       	std	Z+7, r1	; 0x07
    10c4:	16 82       	std	Z+6, r1	; 0x06
    10c6:	83 81       	ldd	r24, Z+3	; 0x03
    10c8:	81 ff       	sbrs	r24, 1
    10ca:	cc c1       	rjmp	.+920    	; 0x1464 <vfprintf+0x3b6>
    10cc:	ce 01       	movw	r24, r28
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	3c 01       	movw	r6, r24
    10d2:	f6 01       	movw	r30, r12
    10d4:	93 81       	ldd	r25, Z+3	; 0x03
    10d6:	f7 01       	movw	r30, r14
    10d8:	93 fd       	sbrc	r25, 3
    10da:	85 91       	lpm	r24, Z+
    10dc:	93 ff       	sbrs	r25, 3
    10de:	81 91       	ld	r24, Z+
    10e0:	7f 01       	movw	r14, r30
    10e2:	88 23       	and	r24, r24
    10e4:	09 f4       	brne	.+2      	; 0x10e8 <vfprintf+0x3a>
    10e6:	ba c1       	rjmp	.+884    	; 0x145c <vfprintf+0x3ae>
    10e8:	85 32       	cpi	r24, 0x25	; 37
    10ea:	39 f4       	brne	.+14     	; 0x10fa <vfprintf+0x4c>
    10ec:	93 fd       	sbrc	r25, 3
    10ee:	85 91       	lpm	r24, Z+
    10f0:	93 ff       	sbrs	r25, 3
    10f2:	81 91       	ld	r24, Z+
    10f4:	7f 01       	movw	r14, r30
    10f6:	85 32       	cpi	r24, 0x25	; 37
    10f8:	29 f4       	brne	.+10     	; 0x1104 <vfprintf+0x56>
    10fa:	b6 01       	movw	r22, r12
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    1102:	e7 cf       	rjmp	.-50     	; 0x10d2 <vfprintf+0x24>
    1104:	91 2c       	mov	r9, r1
    1106:	21 2c       	mov	r2, r1
    1108:	31 2c       	mov	r3, r1
    110a:	ff e1       	ldi	r31, 0x1F	; 31
    110c:	f3 15       	cp	r31, r3
    110e:	d8 f0       	brcs	.+54     	; 0x1146 <vfprintf+0x98>
    1110:	8b 32       	cpi	r24, 0x2B	; 43
    1112:	79 f0       	breq	.+30     	; 0x1132 <vfprintf+0x84>
    1114:	38 f4       	brcc	.+14     	; 0x1124 <vfprintf+0x76>
    1116:	80 32       	cpi	r24, 0x20	; 32
    1118:	79 f0       	breq	.+30     	; 0x1138 <vfprintf+0x8a>
    111a:	83 32       	cpi	r24, 0x23	; 35
    111c:	a1 f4       	brne	.+40     	; 0x1146 <vfprintf+0x98>
    111e:	23 2d       	mov	r18, r3
    1120:	20 61       	ori	r18, 0x10	; 16
    1122:	1d c0       	rjmp	.+58     	; 0x115e <vfprintf+0xb0>
    1124:	8d 32       	cpi	r24, 0x2D	; 45
    1126:	61 f0       	breq	.+24     	; 0x1140 <vfprintf+0x92>
    1128:	80 33       	cpi	r24, 0x30	; 48
    112a:	69 f4       	brne	.+26     	; 0x1146 <vfprintf+0x98>
    112c:	23 2d       	mov	r18, r3
    112e:	21 60       	ori	r18, 0x01	; 1
    1130:	16 c0       	rjmp	.+44     	; 0x115e <vfprintf+0xb0>
    1132:	83 2d       	mov	r24, r3
    1134:	82 60       	ori	r24, 0x02	; 2
    1136:	38 2e       	mov	r3, r24
    1138:	e3 2d       	mov	r30, r3
    113a:	e4 60       	ori	r30, 0x04	; 4
    113c:	3e 2e       	mov	r3, r30
    113e:	2a c0       	rjmp	.+84     	; 0x1194 <vfprintf+0xe6>
    1140:	f3 2d       	mov	r31, r3
    1142:	f8 60       	ori	r31, 0x08	; 8
    1144:	1d c0       	rjmp	.+58     	; 0x1180 <vfprintf+0xd2>
    1146:	37 fc       	sbrc	r3, 7
    1148:	2d c0       	rjmp	.+90     	; 0x11a4 <vfprintf+0xf6>
    114a:	20 ed       	ldi	r18, 0xD0	; 208
    114c:	28 0f       	add	r18, r24
    114e:	2a 30       	cpi	r18, 0x0A	; 10
    1150:	40 f0       	brcs	.+16     	; 0x1162 <vfprintf+0xb4>
    1152:	8e 32       	cpi	r24, 0x2E	; 46
    1154:	b9 f4       	brne	.+46     	; 0x1184 <vfprintf+0xd6>
    1156:	36 fc       	sbrc	r3, 6
    1158:	81 c1       	rjmp	.+770    	; 0x145c <vfprintf+0x3ae>
    115a:	23 2d       	mov	r18, r3
    115c:	20 64       	ori	r18, 0x40	; 64
    115e:	32 2e       	mov	r3, r18
    1160:	19 c0       	rjmp	.+50     	; 0x1194 <vfprintf+0xe6>
    1162:	36 fe       	sbrs	r3, 6
    1164:	06 c0       	rjmp	.+12     	; 0x1172 <vfprintf+0xc4>
    1166:	8a e0       	ldi	r24, 0x0A	; 10
    1168:	98 9e       	mul	r9, r24
    116a:	20 0d       	add	r18, r0
    116c:	11 24       	eor	r1, r1
    116e:	92 2e       	mov	r9, r18
    1170:	11 c0       	rjmp	.+34     	; 0x1194 <vfprintf+0xe6>
    1172:	ea e0       	ldi	r30, 0x0A	; 10
    1174:	2e 9e       	mul	r2, r30
    1176:	20 0d       	add	r18, r0
    1178:	11 24       	eor	r1, r1
    117a:	22 2e       	mov	r2, r18
    117c:	f3 2d       	mov	r31, r3
    117e:	f0 62       	ori	r31, 0x20	; 32
    1180:	3f 2e       	mov	r3, r31
    1182:	08 c0       	rjmp	.+16     	; 0x1194 <vfprintf+0xe6>
    1184:	8c 36       	cpi	r24, 0x6C	; 108
    1186:	21 f4       	brne	.+8      	; 0x1190 <vfprintf+0xe2>
    1188:	83 2d       	mov	r24, r3
    118a:	80 68       	ori	r24, 0x80	; 128
    118c:	38 2e       	mov	r3, r24
    118e:	02 c0       	rjmp	.+4      	; 0x1194 <vfprintf+0xe6>
    1190:	88 36       	cpi	r24, 0x68	; 104
    1192:	41 f4       	brne	.+16     	; 0x11a4 <vfprintf+0xf6>
    1194:	f7 01       	movw	r30, r14
    1196:	93 fd       	sbrc	r25, 3
    1198:	85 91       	lpm	r24, Z+
    119a:	93 ff       	sbrs	r25, 3
    119c:	81 91       	ld	r24, Z+
    119e:	7f 01       	movw	r14, r30
    11a0:	81 11       	cpse	r24, r1
    11a2:	b3 cf       	rjmp	.-154    	; 0x110a <vfprintf+0x5c>
    11a4:	98 2f       	mov	r25, r24
    11a6:	9f 7d       	andi	r25, 0xDF	; 223
    11a8:	95 54       	subi	r25, 0x45	; 69
    11aa:	93 30       	cpi	r25, 0x03	; 3
    11ac:	28 f4       	brcc	.+10     	; 0x11b8 <vfprintf+0x10a>
    11ae:	0c 5f       	subi	r16, 0xFC	; 252
    11b0:	1f 4f       	sbci	r17, 0xFF	; 255
    11b2:	9f e3       	ldi	r25, 0x3F	; 63
    11b4:	99 83       	std	Y+1, r25	; 0x01
    11b6:	0d c0       	rjmp	.+26     	; 0x11d2 <vfprintf+0x124>
    11b8:	83 36       	cpi	r24, 0x63	; 99
    11ba:	31 f0       	breq	.+12     	; 0x11c8 <vfprintf+0x11a>
    11bc:	83 37       	cpi	r24, 0x73	; 115
    11be:	71 f0       	breq	.+28     	; 0x11dc <vfprintf+0x12e>
    11c0:	83 35       	cpi	r24, 0x53	; 83
    11c2:	09 f0       	breq	.+2      	; 0x11c6 <vfprintf+0x118>
    11c4:	59 c0       	rjmp	.+178    	; 0x1278 <vfprintf+0x1ca>
    11c6:	21 c0       	rjmp	.+66     	; 0x120a <vfprintf+0x15c>
    11c8:	f8 01       	movw	r30, r16
    11ca:	80 81       	ld	r24, Z
    11cc:	89 83       	std	Y+1, r24	; 0x01
    11ce:	0e 5f       	subi	r16, 0xFE	; 254
    11d0:	1f 4f       	sbci	r17, 0xFF	; 255
    11d2:	88 24       	eor	r8, r8
    11d4:	83 94       	inc	r8
    11d6:	91 2c       	mov	r9, r1
    11d8:	53 01       	movw	r10, r6
    11da:	13 c0       	rjmp	.+38     	; 0x1202 <vfprintf+0x154>
    11dc:	28 01       	movw	r4, r16
    11de:	f2 e0       	ldi	r31, 0x02	; 2
    11e0:	4f 0e       	add	r4, r31
    11e2:	51 1c       	adc	r5, r1
    11e4:	f8 01       	movw	r30, r16
    11e6:	a0 80       	ld	r10, Z
    11e8:	b1 80       	ldd	r11, Z+1	; 0x01
    11ea:	36 fe       	sbrs	r3, 6
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <vfprintf+0x146>
    11ee:	69 2d       	mov	r22, r9
    11f0:	70 e0       	ldi	r23, 0x00	; 0
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <vfprintf+0x14a>
    11f4:	6f ef       	ldi	r22, 0xFF	; 255
    11f6:	7f ef       	ldi	r23, 0xFF	; 255
    11f8:	c5 01       	movw	r24, r10
    11fa:	0e 94 43 0a 	call	0x1486	; 0x1486 <strnlen>
    11fe:	4c 01       	movw	r8, r24
    1200:	82 01       	movw	r16, r4
    1202:	f3 2d       	mov	r31, r3
    1204:	ff 77       	andi	r31, 0x7F	; 127
    1206:	3f 2e       	mov	r3, r31
    1208:	16 c0       	rjmp	.+44     	; 0x1236 <vfprintf+0x188>
    120a:	28 01       	movw	r4, r16
    120c:	22 e0       	ldi	r18, 0x02	; 2
    120e:	42 0e       	add	r4, r18
    1210:	51 1c       	adc	r5, r1
    1212:	f8 01       	movw	r30, r16
    1214:	a0 80       	ld	r10, Z
    1216:	b1 80       	ldd	r11, Z+1	; 0x01
    1218:	36 fe       	sbrs	r3, 6
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <vfprintf+0x174>
    121c:	69 2d       	mov	r22, r9
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <vfprintf+0x178>
    1222:	6f ef       	ldi	r22, 0xFF	; 255
    1224:	7f ef       	ldi	r23, 0xFF	; 255
    1226:	c5 01       	movw	r24, r10
    1228:	0e 94 38 0a 	call	0x1470	; 0x1470 <strnlen_P>
    122c:	4c 01       	movw	r8, r24
    122e:	f3 2d       	mov	r31, r3
    1230:	f0 68       	ori	r31, 0x80	; 128
    1232:	3f 2e       	mov	r3, r31
    1234:	82 01       	movw	r16, r4
    1236:	33 fc       	sbrc	r3, 3
    1238:	1b c0       	rjmp	.+54     	; 0x1270 <vfprintf+0x1c2>
    123a:	82 2d       	mov	r24, r2
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	88 16       	cp	r8, r24
    1240:	99 06       	cpc	r9, r25
    1242:	b0 f4       	brcc	.+44     	; 0x1270 <vfprintf+0x1c2>
    1244:	b6 01       	movw	r22, r12
    1246:	80 e2       	ldi	r24, 0x20	; 32
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    124e:	2a 94       	dec	r2
    1250:	f4 cf       	rjmp	.-24     	; 0x123a <vfprintf+0x18c>
    1252:	f5 01       	movw	r30, r10
    1254:	37 fc       	sbrc	r3, 7
    1256:	85 91       	lpm	r24, Z+
    1258:	37 fe       	sbrs	r3, 7
    125a:	81 91       	ld	r24, Z+
    125c:	5f 01       	movw	r10, r30
    125e:	b6 01       	movw	r22, r12
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    1266:	21 10       	cpse	r2, r1
    1268:	2a 94       	dec	r2
    126a:	21 e0       	ldi	r18, 0x01	; 1
    126c:	82 1a       	sub	r8, r18
    126e:	91 08       	sbc	r9, r1
    1270:	81 14       	cp	r8, r1
    1272:	91 04       	cpc	r9, r1
    1274:	71 f7       	brne	.-36     	; 0x1252 <vfprintf+0x1a4>
    1276:	e8 c0       	rjmp	.+464    	; 0x1448 <vfprintf+0x39a>
    1278:	84 36       	cpi	r24, 0x64	; 100
    127a:	11 f0       	breq	.+4      	; 0x1280 <vfprintf+0x1d2>
    127c:	89 36       	cpi	r24, 0x69	; 105
    127e:	41 f5       	brne	.+80     	; 0x12d0 <vfprintf+0x222>
    1280:	f8 01       	movw	r30, r16
    1282:	37 fe       	sbrs	r3, 7
    1284:	07 c0       	rjmp	.+14     	; 0x1294 <vfprintf+0x1e6>
    1286:	60 81       	ld	r22, Z
    1288:	71 81       	ldd	r23, Z+1	; 0x01
    128a:	82 81       	ldd	r24, Z+2	; 0x02
    128c:	93 81       	ldd	r25, Z+3	; 0x03
    128e:	0c 5f       	subi	r16, 0xFC	; 252
    1290:	1f 4f       	sbci	r17, 0xFF	; 255
    1292:	08 c0       	rjmp	.+16     	; 0x12a4 <vfprintf+0x1f6>
    1294:	60 81       	ld	r22, Z
    1296:	71 81       	ldd	r23, Z+1	; 0x01
    1298:	07 2e       	mov	r0, r23
    129a:	00 0c       	add	r0, r0
    129c:	88 0b       	sbc	r24, r24
    129e:	99 0b       	sbc	r25, r25
    12a0:	0e 5f       	subi	r16, 0xFE	; 254
    12a2:	1f 4f       	sbci	r17, 0xFF	; 255
    12a4:	f3 2d       	mov	r31, r3
    12a6:	ff 76       	andi	r31, 0x6F	; 111
    12a8:	3f 2e       	mov	r3, r31
    12aa:	97 ff       	sbrs	r25, 7
    12ac:	09 c0       	rjmp	.+18     	; 0x12c0 <vfprintf+0x212>
    12ae:	90 95       	com	r25
    12b0:	80 95       	com	r24
    12b2:	70 95       	com	r23
    12b4:	61 95       	neg	r22
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	f0 68       	ori	r31, 0x80	; 128
    12be:	3f 2e       	mov	r3, r31
    12c0:	2a e0       	ldi	r18, 0x0A	; 10
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	a3 01       	movw	r20, r6
    12c6:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__ultoa_invert>
    12ca:	88 2e       	mov	r8, r24
    12cc:	86 18       	sub	r8, r6
    12ce:	45 c0       	rjmp	.+138    	; 0x135a <vfprintf+0x2ac>
    12d0:	85 37       	cpi	r24, 0x75	; 117
    12d2:	31 f4       	brne	.+12     	; 0x12e0 <vfprintf+0x232>
    12d4:	23 2d       	mov	r18, r3
    12d6:	2f 7e       	andi	r18, 0xEF	; 239
    12d8:	b2 2e       	mov	r11, r18
    12da:	2a e0       	ldi	r18, 0x0A	; 10
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	25 c0       	rjmp	.+74     	; 0x132a <vfprintf+0x27c>
    12e0:	93 2d       	mov	r25, r3
    12e2:	99 7f       	andi	r25, 0xF9	; 249
    12e4:	b9 2e       	mov	r11, r25
    12e6:	8f 36       	cpi	r24, 0x6F	; 111
    12e8:	c1 f0       	breq	.+48     	; 0x131a <vfprintf+0x26c>
    12ea:	18 f4       	brcc	.+6      	; 0x12f2 <vfprintf+0x244>
    12ec:	88 35       	cpi	r24, 0x58	; 88
    12ee:	79 f0       	breq	.+30     	; 0x130e <vfprintf+0x260>
    12f0:	b5 c0       	rjmp	.+362    	; 0x145c <vfprintf+0x3ae>
    12f2:	80 37       	cpi	r24, 0x70	; 112
    12f4:	19 f0       	breq	.+6      	; 0x12fc <vfprintf+0x24e>
    12f6:	88 37       	cpi	r24, 0x78	; 120
    12f8:	21 f0       	breq	.+8      	; 0x1302 <vfprintf+0x254>
    12fa:	b0 c0       	rjmp	.+352    	; 0x145c <vfprintf+0x3ae>
    12fc:	e9 2f       	mov	r30, r25
    12fe:	e0 61       	ori	r30, 0x10	; 16
    1300:	be 2e       	mov	r11, r30
    1302:	b4 fe       	sbrs	r11, 4
    1304:	0d c0       	rjmp	.+26     	; 0x1320 <vfprintf+0x272>
    1306:	fb 2d       	mov	r31, r11
    1308:	f4 60       	ori	r31, 0x04	; 4
    130a:	bf 2e       	mov	r11, r31
    130c:	09 c0       	rjmp	.+18     	; 0x1320 <vfprintf+0x272>
    130e:	34 fe       	sbrs	r3, 4
    1310:	0a c0       	rjmp	.+20     	; 0x1326 <vfprintf+0x278>
    1312:	29 2f       	mov	r18, r25
    1314:	26 60       	ori	r18, 0x06	; 6
    1316:	b2 2e       	mov	r11, r18
    1318:	06 c0       	rjmp	.+12     	; 0x1326 <vfprintf+0x278>
    131a:	28 e0       	ldi	r18, 0x08	; 8
    131c:	30 e0       	ldi	r19, 0x00	; 0
    131e:	05 c0       	rjmp	.+10     	; 0x132a <vfprintf+0x27c>
    1320:	20 e1       	ldi	r18, 0x10	; 16
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	02 c0       	rjmp	.+4      	; 0x132a <vfprintf+0x27c>
    1326:	20 e1       	ldi	r18, 0x10	; 16
    1328:	32 e0       	ldi	r19, 0x02	; 2
    132a:	f8 01       	movw	r30, r16
    132c:	b7 fe       	sbrs	r11, 7
    132e:	07 c0       	rjmp	.+14     	; 0x133e <vfprintf+0x290>
    1330:	60 81       	ld	r22, Z
    1332:	71 81       	ldd	r23, Z+1	; 0x01
    1334:	82 81       	ldd	r24, Z+2	; 0x02
    1336:	93 81       	ldd	r25, Z+3	; 0x03
    1338:	0c 5f       	subi	r16, 0xFC	; 252
    133a:	1f 4f       	sbci	r17, 0xFF	; 255
    133c:	06 c0       	rjmp	.+12     	; 0x134a <vfprintf+0x29c>
    133e:	60 81       	ld	r22, Z
    1340:	71 81       	ldd	r23, Z+1	; 0x01
    1342:	80 e0       	ldi	r24, 0x00	; 0
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	0e 5f       	subi	r16, 0xFE	; 254
    1348:	1f 4f       	sbci	r17, 0xFF	; 255
    134a:	a3 01       	movw	r20, r6
    134c:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__ultoa_invert>
    1350:	88 2e       	mov	r8, r24
    1352:	86 18       	sub	r8, r6
    1354:	fb 2d       	mov	r31, r11
    1356:	ff 77       	andi	r31, 0x7F	; 127
    1358:	3f 2e       	mov	r3, r31
    135a:	36 fe       	sbrs	r3, 6
    135c:	0d c0       	rjmp	.+26     	; 0x1378 <vfprintf+0x2ca>
    135e:	23 2d       	mov	r18, r3
    1360:	2e 7f       	andi	r18, 0xFE	; 254
    1362:	a2 2e       	mov	r10, r18
    1364:	89 14       	cp	r8, r9
    1366:	58 f4       	brcc	.+22     	; 0x137e <vfprintf+0x2d0>
    1368:	34 fe       	sbrs	r3, 4
    136a:	0b c0       	rjmp	.+22     	; 0x1382 <vfprintf+0x2d4>
    136c:	32 fc       	sbrc	r3, 2
    136e:	09 c0       	rjmp	.+18     	; 0x1382 <vfprintf+0x2d4>
    1370:	83 2d       	mov	r24, r3
    1372:	8e 7e       	andi	r24, 0xEE	; 238
    1374:	a8 2e       	mov	r10, r24
    1376:	05 c0       	rjmp	.+10     	; 0x1382 <vfprintf+0x2d4>
    1378:	b8 2c       	mov	r11, r8
    137a:	a3 2c       	mov	r10, r3
    137c:	03 c0       	rjmp	.+6      	; 0x1384 <vfprintf+0x2d6>
    137e:	b8 2c       	mov	r11, r8
    1380:	01 c0       	rjmp	.+2      	; 0x1384 <vfprintf+0x2d6>
    1382:	b9 2c       	mov	r11, r9
    1384:	a4 fe       	sbrs	r10, 4
    1386:	0f c0       	rjmp	.+30     	; 0x13a6 <vfprintf+0x2f8>
    1388:	fe 01       	movw	r30, r28
    138a:	e8 0d       	add	r30, r8
    138c:	f1 1d       	adc	r31, r1
    138e:	80 81       	ld	r24, Z
    1390:	80 33       	cpi	r24, 0x30	; 48
    1392:	21 f4       	brne	.+8      	; 0x139c <vfprintf+0x2ee>
    1394:	9a 2d       	mov	r25, r10
    1396:	99 7e       	andi	r25, 0xE9	; 233
    1398:	a9 2e       	mov	r10, r25
    139a:	09 c0       	rjmp	.+18     	; 0x13ae <vfprintf+0x300>
    139c:	a2 fe       	sbrs	r10, 2
    139e:	06 c0       	rjmp	.+12     	; 0x13ac <vfprintf+0x2fe>
    13a0:	b3 94       	inc	r11
    13a2:	b3 94       	inc	r11
    13a4:	04 c0       	rjmp	.+8      	; 0x13ae <vfprintf+0x300>
    13a6:	8a 2d       	mov	r24, r10
    13a8:	86 78       	andi	r24, 0x86	; 134
    13aa:	09 f0       	breq	.+2      	; 0x13ae <vfprintf+0x300>
    13ac:	b3 94       	inc	r11
    13ae:	a3 fc       	sbrc	r10, 3
    13b0:	11 c0       	rjmp	.+34     	; 0x13d4 <vfprintf+0x326>
    13b2:	a0 fe       	sbrs	r10, 0
    13b4:	06 c0       	rjmp	.+12     	; 0x13c2 <vfprintf+0x314>
    13b6:	b2 14       	cp	r11, r2
    13b8:	88 f4       	brcc	.+34     	; 0x13dc <vfprintf+0x32e>
    13ba:	28 0c       	add	r2, r8
    13bc:	92 2c       	mov	r9, r2
    13be:	9b 18       	sub	r9, r11
    13c0:	0e c0       	rjmp	.+28     	; 0x13de <vfprintf+0x330>
    13c2:	b2 14       	cp	r11, r2
    13c4:	60 f4       	brcc	.+24     	; 0x13de <vfprintf+0x330>
    13c6:	b6 01       	movw	r22, r12
    13c8:	80 e2       	ldi	r24, 0x20	; 32
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    13d0:	b3 94       	inc	r11
    13d2:	f7 cf       	rjmp	.-18     	; 0x13c2 <vfprintf+0x314>
    13d4:	b2 14       	cp	r11, r2
    13d6:	18 f4       	brcc	.+6      	; 0x13de <vfprintf+0x330>
    13d8:	2b 18       	sub	r2, r11
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <vfprintf+0x332>
    13dc:	98 2c       	mov	r9, r8
    13de:	21 2c       	mov	r2, r1
    13e0:	a4 fe       	sbrs	r10, 4
    13e2:	10 c0       	rjmp	.+32     	; 0x1404 <vfprintf+0x356>
    13e4:	b6 01       	movw	r22, r12
    13e6:	80 e3       	ldi	r24, 0x30	; 48
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    13ee:	a2 fe       	sbrs	r10, 2
    13f0:	17 c0       	rjmp	.+46     	; 0x1420 <vfprintf+0x372>
    13f2:	a1 fc       	sbrc	r10, 1
    13f4:	03 c0       	rjmp	.+6      	; 0x13fc <vfprintf+0x34e>
    13f6:	88 e7       	ldi	r24, 0x78	; 120
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <vfprintf+0x352>
    13fc:	88 e5       	ldi	r24, 0x58	; 88
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	b6 01       	movw	r22, r12
    1402:	0c c0       	rjmp	.+24     	; 0x141c <vfprintf+0x36e>
    1404:	8a 2d       	mov	r24, r10
    1406:	86 78       	andi	r24, 0x86	; 134
    1408:	59 f0       	breq	.+22     	; 0x1420 <vfprintf+0x372>
    140a:	a1 fe       	sbrs	r10, 1
    140c:	02 c0       	rjmp	.+4      	; 0x1412 <vfprintf+0x364>
    140e:	8b e2       	ldi	r24, 0x2B	; 43
    1410:	01 c0       	rjmp	.+2      	; 0x1414 <vfprintf+0x366>
    1412:	80 e2       	ldi	r24, 0x20	; 32
    1414:	a7 fc       	sbrc	r10, 7
    1416:	8d e2       	ldi	r24, 0x2D	; 45
    1418:	b6 01       	movw	r22, r12
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    1420:	89 14       	cp	r8, r9
    1422:	38 f4       	brcc	.+14     	; 0x1432 <vfprintf+0x384>
    1424:	b6 01       	movw	r22, r12
    1426:	80 e3       	ldi	r24, 0x30	; 48
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    142e:	9a 94       	dec	r9
    1430:	f7 cf       	rjmp	.-18     	; 0x1420 <vfprintf+0x372>
    1432:	8a 94       	dec	r8
    1434:	f3 01       	movw	r30, r6
    1436:	e8 0d       	add	r30, r8
    1438:	f1 1d       	adc	r31, r1
    143a:	80 81       	ld	r24, Z
    143c:	b6 01       	movw	r22, r12
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    1444:	81 10       	cpse	r8, r1
    1446:	f5 cf       	rjmp	.-22     	; 0x1432 <vfprintf+0x384>
    1448:	22 20       	and	r2, r2
    144a:	09 f4       	brne	.+2      	; 0x144e <vfprintf+0x3a0>
    144c:	42 ce       	rjmp	.-892    	; 0x10d2 <vfprintf+0x24>
    144e:	b6 01       	movw	r22, r12
    1450:	80 e2       	ldi	r24, 0x20	; 32
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	0e 94 4e 0a 	call	0x149c	; 0x149c <fputc>
    1458:	2a 94       	dec	r2
    145a:	f6 cf       	rjmp	.-20     	; 0x1448 <vfprintf+0x39a>
    145c:	f6 01       	movw	r30, r12
    145e:	86 81       	ldd	r24, Z+6	; 0x06
    1460:	97 81       	ldd	r25, Z+7	; 0x07
    1462:	02 c0       	rjmp	.+4      	; 0x1468 <vfprintf+0x3ba>
    1464:	8f ef       	ldi	r24, 0xFF	; 255
    1466:	9f ef       	ldi	r25, 0xFF	; 255
    1468:	2b 96       	adiw	r28, 0x0b	; 11
    146a:	e2 e1       	ldi	r30, 0x12	; 18
    146c:	0c 94 04 0b 	jmp	0x1608	; 0x1608 <__epilogue_restores__>

00001470 <strnlen_P>:
    1470:	fc 01       	movw	r30, r24
    1472:	05 90       	lpm	r0, Z+
    1474:	61 50       	subi	r22, 0x01	; 1
    1476:	70 40       	sbci	r23, 0x00	; 0
    1478:	01 10       	cpse	r0, r1
    147a:	d8 f7       	brcc	.-10     	; 0x1472 <strnlen_P+0x2>
    147c:	80 95       	com	r24
    147e:	90 95       	com	r25
    1480:	8e 0f       	add	r24, r30
    1482:	9f 1f       	adc	r25, r31
    1484:	08 95       	ret

00001486 <strnlen>:
    1486:	fc 01       	movw	r30, r24
    1488:	61 50       	subi	r22, 0x01	; 1
    148a:	70 40       	sbci	r23, 0x00	; 0
    148c:	01 90       	ld	r0, Z+
    148e:	01 10       	cpse	r0, r1
    1490:	d8 f7       	brcc	.-10     	; 0x1488 <strnlen+0x2>
    1492:	80 95       	com	r24
    1494:	90 95       	com	r25
    1496:	8e 0f       	add	r24, r30
    1498:	9f 1f       	adc	r25, r31
    149a:	08 95       	ret

0000149c <fputc>:
    149c:	0f 93       	push	r16
    149e:	1f 93       	push	r17
    14a0:	cf 93       	push	r28
    14a2:	df 93       	push	r29
    14a4:	fb 01       	movw	r30, r22
    14a6:	23 81       	ldd	r18, Z+3	; 0x03
    14a8:	21 fd       	sbrc	r18, 1
    14aa:	03 c0       	rjmp	.+6      	; 0x14b2 <fputc+0x16>
    14ac:	8f ef       	ldi	r24, 0xFF	; 255
    14ae:	9f ef       	ldi	r25, 0xFF	; 255
    14b0:	2c c0       	rjmp	.+88     	; 0x150a <fputc+0x6e>
    14b2:	22 ff       	sbrs	r18, 2
    14b4:	16 c0       	rjmp	.+44     	; 0x14e2 <fputc+0x46>
    14b6:	46 81       	ldd	r20, Z+6	; 0x06
    14b8:	57 81       	ldd	r21, Z+7	; 0x07
    14ba:	24 81       	ldd	r18, Z+4	; 0x04
    14bc:	35 81       	ldd	r19, Z+5	; 0x05
    14be:	42 17       	cp	r20, r18
    14c0:	53 07       	cpc	r21, r19
    14c2:	44 f4       	brge	.+16     	; 0x14d4 <fputc+0x38>
    14c4:	a0 81       	ld	r26, Z
    14c6:	b1 81       	ldd	r27, Z+1	; 0x01
    14c8:	9d 01       	movw	r18, r26
    14ca:	2f 5f       	subi	r18, 0xFF	; 255
    14cc:	3f 4f       	sbci	r19, 0xFF	; 255
    14ce:	31 83       	std	Z+1, r19	; 0x01
    14d0:	20 83       	st	Z, r18
    14d2:	8c 93       	st	X, r24
    14d4:	26 81       	ldd	r18, Z+6	; 0x06
    14d6:	37 81       	ldd	r19, Z+7	; 0x07
    14d8:	2f 5f       	subi	r18, 0xFF	; 255
    14da:	3f 4f       	sbci	r19, 0xFF	; 255
    14dc:	37 83       	std	Z+7, r19	; 0x07
    14de:	26 83       	std	Z+6, r18	; 0x06
    14e0:	14 c0       	rjmp	.+40     	; 0x150a <fputc+0x6e>
    14e2:	8b 01       	movw	r16, r22
    14e4:	ec 01       	movw	r28, r24
    14e6:	fb 01       	movw	r30, r22
    14e8:	00 84       	ldd	r0, Z+8	; 0x08
    14ea:	f1 85       	ldd	r31, Z+9	; 0x09
    14ec:	e0 2d       	mov	r30, r0
    14ee:	09 95       	icall
    14f0:	89 2b       	or	r24, r25
    14f2:	e1 f6       	brne	.-72     	; 0x14ac <fputc+0x10>
    14f4:	d8 01       	movw	r26, r16
    14f6:	16 96       	adiw	r26, 0x06	; 6
    14f8:	8d 91       	ld	r24, X+
    14fa:	9c 91       	ld	r25, X
    14fc:	17 97       	sbiw	r26, 0x07	; 7
    14fe:	01 96       	adiw	r24, 0x01	; 1
    1500:	17 96       	adiw	r26, 0x07	; 7
    1502:	9c 93       	st	X, r25
    1504:	8e 93       	st	-X, r24
    1506:	16 97       	sbiw	r26, 0x06	; 6
    1508:	ce 01       	movw	r24, r28
    150a:	df 91       	pop	r29
    150c:	cf 91       	pop	r28
    150e:	1f 91       	pop	r17
    1510:	0f 91       	pop	r16
    1512:	08 95       	ret

00001514 <__ultoa_invert>:
    1514:	fa 01       	movw	r30, r20
    1516:	aa 27       	eor	r26, r26
    1518:	28 30       	cpi	r18, 0x08	; 8
    151a:	51 f1       	breq	.+84     	; 0x1570 <__ultoa_invert+0x5c>
    151c:	20 31       	cpi	r18, 0x10	; 16
    151e:	81 f1       	breq	.+96     	; 0x1580 <__ultoa_invert+0x6c>
    1520:	e8 94       	clt
    1522:	6f 93       	push	r22
    1524:	6e 7f       	andi	r22, 0xFE	; 254
    1526:	6e 5f       	subi	r22, 0xFE	; 254
    1528:	7f 4f       	sbci	r23, 0xFF	; 255
    152a:	8f 4f       	sbci	r24, 0xFF	; 255
    152c:	9f 4f       	sbci	r25, 0xFF	; 255
    152e:	af 4f       	sbci	r26, 0xFF	; 255
    1530:	b1 e0       	ldi	r27, 0x01	; 1
    1532:	3e d0       	rcall	.+124    	; 0x15b0 <__ultoa_invert+0x9c>
    1534:	b4 e0       	ldi	r27, 0x04	; 4
    1536:	3c d0       	rcall	.+120    	; 0x15b0 <__ultoa_invert+0x9c>
    1538:	67 0f       	add	r22, r23
    153a:	78 1f       	adc	r23, r24
    153c:	89 1f       	adc	r24, r25
    153e:	9a 1f       	adc	r25, r26
    1540:	a1 1d       	adc	r26, r1
    1542:	68 0f       	add	r22, r24
    1544:	79 1f       	adc	r23, r25
    1546:	8a 1f       	adc	r24, r26
    1548:	91 1d       	adc	r25, r1
    154a:	a1 1d       	adc	r26, r1
    154c:	6a 0f       	add	r22, r26
    154e:	71 1d       	adc	r23, r1
    1550:	81 1d       	adc	r24, r1
    1552:	91 1d       	adc	r25, r1
    1554:	a1 1d       	adc	r26, r1
    1556:	20 d0       	rcall	.+64     	; 0x1598 <__ultoa_invert+0x84>
    1558:	09 f4       	brne	.+2      	; 0x155c <__ultoa_invert+0x48>
    155a:	68 94       	set
    155c:	3f 91       	pop	r19
    155e:	2a e0       	ldi	r18, 0x0A	; 10
    1560:	26 9f       	mul	r18, r22
    1562:	11 24       	eor	r1, r1
    1564:	30 19       	sub	r19, r0
    1566:	30 5d       	subi	r19, 0xD0	; 208
    1568:	31 93       	st	Z+, r19
    156a:	de f6       	brtc	.-74     	; 0x1522 <__ultoa_invert+0xe>
    156c:	cf 01       	movw	r24, r30
    156e:	08 95       	ret
    1570:	46 2f       	mov	r20, r22
    1572:	47 70       	andi	r20, 0x07	; 7
    1574:	40 5d       	subi	r20, 0xD0	; 208
    1576:	41 93       	st	Z+, r20
    1578:	b3 e0       	ldi	r27, 0x03	; 3
    157a:	0f d0       	rcall	.+30     	; 0x159a <__ultoa_invert+0x86>
    157c:	c9 f7       	brne	.-14     	; 0x1570 <__ultoa_invert+0x5c>
    157e:	f6 cf       	rjmp	.-20     	; 0x156c <__ultoa_invert+0x58>
    1580:	46 2f       	mov	r20, r22
    1582:	4f 70       	andi	r20, 0x0F	; 15
    1584:	40 5d       	subi	r20, 0xD0	; 208
    1586:	4a 33       	cpi	r20, 0x3A	; 58
    1588:	18 f0       	brcs	.+6      	; 0x1590 <__ultoa_invert+0x7c>
    158a:	49 5d       	subi	r20, 0xD9	; 217
    158c:	31 fd       	sbrc	r19, 1
    158e:	40 52       	subi	r20, 0x20	; 32
    1590:	41 93       	st	Z+, r20
    1592:	02 d0       	rcall	.+4      	; 0x1598 <__ultoa_invert+0x84>
    1594:	a9 f7       	brne	.-22     	; 0x1580 <__ultoa_invert+0x6c>
    1596:	ea cf       	rjmp	.-44     	; 0x156c <__ultoa_invert+0x58>
    1598:	b4 e0       	ldi	r27, 0x04	; 4
    159a:	a6 95       	lsr	r26
    159c:	97 95       	ror	r25
    159e:	87 95       	ror	r24
    15a0:	77 95       	ror	r23
    15a2:	67 95       	ror	r22
    15a4:	ba 95       	dec	r27
    15a6:	c9 f7       	brne	.-14     	; 0x159a <__ultoa_invert+0x86>
    15a8:	00 97       	sbiw	r24, 0x00	; 0
    15aa:	61 05       	cpc	r22, r1
    15ac:	71 05       	cpc	r23, r1
    15ae:	08 95       	ret
    15b0:	9b 01       	movw	r18, r22
    15b2:	ac 01       	movw	r20, r24
    15b4:	0a 2e       	mov	r0, r26
    15b6:	06 94       	lsr	r0
    15b8:	57 95       	ror	r21
    15ba:	47 95       	ror	r20
    15bc:	37 95       	ror	r19
    15be:	27 95       	ror	r18
    15c0:	ba 95       	dec	r27
    15c2:	c9 f7       	brne	.-14     	; 0x15b6 <__ultoa_invert+0xa2>
    15c4:	62 0f       	add	r22, r18
    15c6:	73 1f       	adc	r23, r19
    15c8:	84 1f       	adc	r24, r20
    15ca:	95 1f       	adc	r25, r21
    15cc:	a0 1d       	adc	r26, r0
    15ce:	08 95       	ret

000015d0 <__prologue_saves__>:
    15d0:	2f 92       	push	r2
    15d2:	3f 92       	push	r3
    15d4:	4f 92       	push	r4
    15d6:	5f 92       	push	r5
    15d8:	6f 92       	push	r6
    15da:	7f 92       	push	r7
    15dc:	8f 92       	push	r8
    15de:	9f 92       	push	r9
    15e0:	af 92       	push	r10
    15e2:	bf 92       	push	r11
    15e4:	cf 92       	push	r12
    15e6:	df 92       	push	r13
    15e8:	ef 92       	push	r14
    15ea:	ff 92       	push	r15
    15ec:	0f 93       	push	r16
    15ee:	1f 93       	push	r17
    15f0:	cf 93       	push	r28
    15f2:	df 93       	push	r29
    15f4:	cd b7       	in	r28, 0x3d	; 61
    15f6:	de b7       	in	r29, 0x3e	; 62
    15f8:	ca 1b       	sub	r28, r26
    15fa:	db 0b       	sbc	r29, r27
    15fc:	0f b6       	in	r0, 0x3f	; 63
    15fe:	f8 94       	cli
    1600:	de bf       	out	0x3e, r29	; 62
    1602:	0f be       	out	0x3f, r0	; 63
    1604:	cd bf       	out	0x3d, r28	; 61
    1606:	09 94       	ijmp

00001608 <__epilogue_restores__>:
    1608:	2a 88       	ldd	r2, Y+18	; 0x12
    160a:	39 88       	ldd	r3, Y+17	; 0x11
    160c:	48 88       	ldd	r4, Y+16	; 0x10
    160e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1610:	6e 84       	ldd	r6, Y+14	; 0x0e
    1612:	7d 84       	ldd	r7, Y+13	; 0x0d
    1614:	8c 84       	ldd	r8, Y+12	; 0x0c
    1616:	9b 84       	ldd	r9, Y+11	; 0x0b
    1618:	aa 84       	ldd	r10, Y+10	; 0x0a
    161a:	b9 84       	ldd	r11, Y+9	; 0x09
    161c:	c8 84       	ldd	r12, Y+8	; 0x08
    161e:	df 80       	ldd	r13, Y+7	; 0x07
    1620:	ee 80       	ldd	r14, Y+6	; 0x06
    1622:	fd 80       	ldd	r15, Y+5	; 0x05
    1624:	0c 81       	ldd	r16, Y+4	; 0x04
    1626:	1b 81       	ldd	r17, Y+3	; 0x03
    1628:	aa 81       	ldd	r26, Y+2	; 0x02
    162a:	b9 81       	ldd	r27, Y+1	; 0x01
    162c:	ce 0f       	add	r28, r30
    162e:	d1 1d       	adc	r29, r1
    1630:	0f b6       	in	r0, 0x3f	; 63
    1632:	f8 94       	cli
    1634:	de bf       	out	0x3e, r29	; 62
    1636:	0f be       	out	0x3f, r0	; 63
    1638:	cd bf       	out	0x3d, r28	; 61
    163a:	ed 01       	movw	r28, r26
    163c:	08 95       	ret

0000163e <_exit>:
    163e:	f8 94       	cli

00001640 <__stop_program>:
    1640:	ff cf       	rjmp	.-2      	; 0x1640 <__stop_program>
