
byggernV5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00000922  000009b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000922  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800184  00800184  00000a3a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a3a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b67  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ff  00000000  00000000  000016d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b7  00000000  00000000  00001fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  0000248c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045e  00000000  00000000  000025a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001e8  00000000  00000000  000029fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002be6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 e2       	ldi	r30, 0x22	; 34
  84:	f9 e0       	ldi	r31, 0x09	; 9
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 38       	cpi	r26, 0x84	; 132
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a4 e8       	ldi	r26, 0x84	; 132
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	aa 38       	cpi	r26, 0x8A	; 138
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 8b 00 	call	0x116	; 0x116 <main>
  a6:	0c 94 8f 04 	jmp	0x91e	; 0x91e <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_test>:
#include <avr/io.h>
#include "UART.h"
#include "xmem.h"
#include <stdlib.h>
    void SRAM_test(void)
    {
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
	    volatile char *ext_ram = (char *) 0; // Start address for the SRAM 0x1800
	    uint16_t ext_ram_size = 0x1FFF;
	    uint16_t write_errors = 0;
	    uint16_t retrieval_errors = 0;
	    printf("Starting SRAM test...\n");
  b2:	82 e1       	ldi	r24, 0x12	; 18
  b4:	91 e0       	ldi	r25, 0x01	; 1
  b6:	0e 94 34 01 	call	0x268	; 0x268 <puts>
	    // rand() stores some internal state, so calling this function in a loop will
	    // yield different seeds each time (unless srand() is called before this function)
	    uint16_t seed = rand();
  ba:	0e 94 0e 01 	call	0x21c	; 0x21c <rand>
	    // Write phase: Immediately check that the correct value was stored
	    srand(seed);
  be:	0e 94 13 01 	call	0x226	; 0x226 <srand>
	    for (uint16_t i = 0; i < ext_ram_size; i += 4) {
  c2:	c0 e0       	ldi	r28, 0x00	; 0
  c4:	d0 e0       	ldi	r29, 0x00	; 0
  c6:	10 c0       	rjmp	.+32     	; 0xe8 <SRAM_test+0x3a>
		    uint8_t some_value = rand();
  c8:	0e 94 0e 01 	call	0x21c	; 0x21c <rand>
		    ext_ram[i] = some_value;
  cc:	88 83       	st	Y, r24
		    printf("%d",i);
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	88 e2       	ldi	r24, 0x28	; 40
  d4:	91 e0       	ldi	r25, 0x01	; 1
  d6:	9f 93       	push	r25
  d8:	8f 93       	push	r24
  da:	0e 94 1e 01 	call	0x23c	; 0x23c <printf>
	    // rand() stores some internal state, so calling this function in a loop will
	    // yield different seeds each time (unless srand() is called before this function)
	    uint16_t seed = rand();
	    // Write phase: Immediately check that the correct value was stored
	    srand(seed);
	    for (uint16_t i = 0; i < ext_ram_size; i += 4) {
  de:	24 96       	adiw	r28, 0x04	; 4
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	cf 3f       	cpi	r28, 0xFF	; 255
  ea:	8f e1       	ldi	r24, 0x1F	; 31
  ec:	d8 07       	cpc	r29, r24
  ee:	60 f3       	brcs	.-40     	; 0xc8 <SRAM_test+0x1a>
		    ext_ram[i] = some_value;
		    printf("%d",i);
	    }
	    // Retrieval phase: Check that no values were changed during or after the write phase
	    // reset the PRNG to the state it had before the write phase
	    printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
  f0:	1f 92       	push	r1
  f2:	1f 92       	push	r1
  f4:	1f 92       	push	r1
  f6:	1f 92       	push	r1
  f8:	8b e2       	ldi	r24, 0x2B	; 43
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	9f 93       	push	r25
  fe:	8f 93       	push	r24
 100:	0e 94 1e 01 	call	0x23c	; 0x23c <printf>
    }
 104:	0f 90       	pop	r0
 106:	0f 90       	pop	r0
 108:	0f 90       	pop	r0
 10a:	0f 90       	pop	r0
 10c:	0f 90       	pop	r0
 10e:	0f 90       	pop	r0
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <main>:

int main(void)
{
	USART_Init(MYUBRR);
 116:	8f e1       	ldi	r24, 0x1F	; 31
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 98 00 	call	0x130	; 0x130 <USART_Init>
	init_printf();
 11e:	0e 94 b1 00 	call	0x162	; 0x162 <init_printf>
	xmem_init();
 122:	0e 94 b8 00 	call	0x170	; 0x170 <xmem_init>
	SRAM_test();
 126:	0e 94 57 00 	call	0xae	; 0xae <SRAM_test>
    /* Replace with your application code */
    while (0) 
    {
    }
}
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	08 95       	ret

00000130 <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
	;
	/* Get and return received data from buffer */
	return UDR0;
}
 130:	90 bd       	out	0x20, r25	; 32
 132:	89 b9       	out	0x09, r24	; 9
 134:	88 e1       	ldi	r24, 0x18	; 24
 136:	8a b9       	out	0x0a, r24	; 10
 138:	8e e8       	ldi	r24, 0x8E	; 142
 13a:	80 bd       	out	0x20, r24	; 32
 13c:	08 95       	ret

0000013e <USART_Transmit>:
 13e:	5d 9b       	sbis	0x0b, 5	; 11
 140:	fe cf       	rjmp	.-4      	; 0x13e <USART_Transmit>
 142:	8c b9       	out	0x0c, r24	; 12
 144:	08 95       	ret

00000146 <uart_putchar>:
 146:	cf 93       	push	r28
 148:	c8 2f       	mov	r28, r24
 14a:	8a 30       	cpi	r24, 0x0A	; 10
 14c:	19 f4       	brne	.+6      	; 0x154 <uart_putchar+0xe>
 14e:	8d e0       	ldi	r24, 0x0D	; 13
 150:	0e 94 9f 00 	call	0x13e	; 0x13e <USART_Transmit>
 154:	8c 2f       	mov	r24, r28
 156:	0e 94 9f 00 	call	0x13e	; 0x13e <USART_Transmit>
 15a:	80 e0       	ldi	r24, 0x00	; 0
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <init_printf>:


void init_printf(void)
{
	static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
	stdout = &uart_stdout;  // Set stdout to use uart_putchar
 162:	84 e0       	ldi	r24, 0x04	; 4
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x3>
 16a:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end+0x2>
 16e:	08 95       	ret

00000170 <xmem_init>:
#include "xmem.h"
#include <avr/io.h>


void xmem_init ( void ){
	MCUCR |= (1 << SRE ); // enable XMEM
 170:	85 b7       	in	r24, 0x35	; 53
 172:	80 68       	ori	r24, 0x80	; 128
 174:	85 bf       	out	0x35, r24	; 53
	
	SFIOR &= ~(1 << XMM0 | 1 << XMM1 ); // mask bits / reduce bus width
 176:	80 b7       	in	r24, 0x30	; 48
 178:	87 7e       	andi	r24, 0xE7	; 231
 17a:	80 bf       	out	0x30, r24	; 48
	SFIOR |= (1 << XMM2 );
 17c:	80 b7       	in	r24, 0x30	; 48
 17e:	80 62       	ori	r24, 0x20	; 32
 180:	80 bf       	out	0x30, r24	; 48
 182:	08 95       	ret

00000184 <do_rand>:
 184:	8f 92       	push	r8
 186:	9f 92       	push	r9
 188:	af 92       	push	r10
 18a:	bf 92       	push	r11
 18c:	cf 92       	push	r12
 18e:	df 92       	push	r13
 190:	ef 92       	push	r14
 192:	ff 92       	push	r15
 194:	cf 93       	push	r28
 196:	df 93       	push	r29
 198:	ec 01       	movw	r28, r24
 19a:	68 81       	ld	r22, Y
 19c:	79 81       	ldd	r23, Y+1	; 0x01
 19e:	8a 81       	ldd	r24, Y+2	; 0x02
 1a0:	9b 81       	ldd	r25, Y+3	; 0x03
 1a2:	61 15       	cp	r22, r1
 1a4:	71 05       	cpc	r23, r1
 1a6:	81 05       	cpc	r24, r1
 1a8:	91 05       	cpc	r25, r1
 1aa:	21 f4       	brne	.+8      	; 0x1b4 <do_rand+0x30>
 1ac:	64 e2       	ldi	r22, 0x24	; 36
 1ae:	79 ed       	ldi	r23, 0xD9	; 217
 1b0:	8b e5       	ldi	r24, 0x5B	; 91
 1b2:	97 e0       	ldi	r25, 0x07	; 7
 1b4:	2d e1       	ldi	r18, 0x1D	; 29
 1b6:	33 ef       	ldi	r19, 0xF3	; 243
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__divmodsi4>
 1c0:	49 01       	movw	r8, r18
 1c2:	5a 01       	movw	r10, r20
 1c4:	9b 01       	movw	r18, r22
 1c6:	ac 01       	movw	r20, r24
 1c8:	a7 ea       	ldi	r26, 0xA7	; 167
 1ca:	b1 e4       	ldi	r27, 0x41	; 65
 1cc:	0e 94 14 04 	call	0x828	; 0x828 <__muluhisi3>
 1d0:	6b 01       	movw	r12, r22
 1d2:	7c 01       	movw	r14, r24
 1d4:	ac ee       	ldi	r26, 0xEC	; 236
 1d6:	b4 ef       	ldi	r27, 0xF4	; 244
 1d8:	a5 01       	movw	r20, r10
 1da:	94 01       	movw	r18, r8
 1dc:	0e 94 22 04 	call	0x844	; 0x844 <__mulohisi3>
 1e0:	dc 01       	movw	r26, r24
 1e2:	cb 01       	movw	r24, r22
 1e4:	8c 0d       	add	r24, r12
 1e6:	9d 1d       	adc	r25, r13
 1e8:	ae 1d       	adc	r26, r14
 1ea:	bf 1d       	adc	r27, r15
 1ec:	b7 ff       	sbrs	r27, 7
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <do_rand+0x72>
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	a1 09       	sbc	r26, r1
 1f4:	b0 48       	sbci	r27, 0x80	; 128
 1f6:	88 83       	st	Y, r24
 1f8:	99 83       	std	Y+1, r25	; 0x01
 1fa:	aa 83       	std	Y+2, r26	; 0x02
 1fc:	bb 83       	std	Y+3, r27	; 0x03
 1fe:	9f 77       	andi	r25, 0x7F	; 127
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	ff 90       	pop	r15
 206:	ef 90       	pop	r14
 208:	df 90       	pop	r13
 20a:	cf 90       	pop	r12
 20c:	bf 90       	pop	r11
 20e:	af 90       	pop	r10
 210:	9f 90       	pop	r9
 212:	8f 90       	pop	r8
 214:	08 95       	ret

00000216 <rand_r>:
 216:	0e 94 c2 00 	call	0x184	; 0x184 <do_rand>
 21a:	08 95       	ret

0000021c <rand>:
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	0e 94 c2 00 	call	0x184	; 0x184 <do_rand>
 224:	08 95       	ret

00000226 <srand>:
 226:	a0 e0       	ldi	r26, 0x00	; 0
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 22e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 232:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 236:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 23a:	08 95       	ret

0000023c <printf>:
 23c:	a0 e0       	ldi	r26, 0x00	; 0
 23e:	b0 e0       	ldi	r27, 0x00	; 0
 240:	e4 e2       	ldi	r30, 0x24	; 36
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	0c 94 37 04 	jmp	0x86e	; 0x86e <__prologue_saves__+0x20>
 248:	ae 01       	movw	r20, r28
 24a:	4b 5f       	subi	r20, 0xFB	; 251
 24c:	5f 4f       	sbci	r21, 0xFF	; 255
 24e:	fa 01       	movw	r30, r20
 250:	61 91       	ld	r22, Z+
 252:	71 91       	ld	r23, Z+
 254:	af 01       	movw	r20, r30
 256:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <__data_end+0x2>
 25a:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <__data_end+0x3>
 25e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <vfprintf>
 262:	e2 e0       	ldi	r30, 0x02	; 2
 264:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__epilogue_restores__+0x20>

00000268 <puts>:
 268:	0f 93       	push	r16
 26a:	1f 93       	push	r17
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <__data_end+0x2>
 274:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <__data_end+0x3>
 278:	23 81       	ldd	r18, Z+3	; 0x03
 27a:	21 ff       	sbrs	r18, 1
 27c:	1b c0       	rjmp	.+54     	; 0x2b4 <puts+0x4c>
 27e:	8c 01       	movw	r16, r24
 280:	d0 e0       	ldi	r29, 0x00	; 0
 282:	c0 e0       	ldi	r28, 0x00	; 0
 284:	f8 01       	movw	r30, r16
 286:	81 91       	ld	r24, Z+
 288:	8f 01       	movw	r16, r30
 28a:	60 91 86 01 	lds	r22, 0x0186	; 0x800186 <__data_end+0x2>
 28e:	70 91 87 01 	lds	r23, 0x0187	; 0x800187 <__data_end+0x3>
 292:	db 01       	movw	r26, r22
 294:	18 96       	adiw	r26, 0x08	; 8
 296:	ed 91       	ld	r30, X+
 298:	fc 91       	ld	r31, X
 29a:	19 97       	sbiw	r26, 0x09	; 9
 29c:	88 23       	and	r24, r24
 29e:	31 f0       	breq	.+12     	; 0x2ac <puts+0x44>
 2a0:	09 95       	icall
 2a2:	89 2b       	or	r24, r25
 2a4:	79 f3       	breq	.-34     	; 0x284 <puts+0x1c>
 2a6:	df ef       	ldi	r29, 0xFF	; 255
 2a8:	cf ef       	ldi	r28, 0xFF	; 255
 2aa:	ec cf       	rjmp	.-40     	; 0x284 <puts+0x1c>
 2ac:	8a e0       	ldi	r24, 0x0A	; 10
 2ae:	09 95       	icall
 2b0:	89 2b       	or	r24, r25
 2b2:	19 f0       	breq	.+6      	; 0x2ba <puts+0x52>
 2b4:	8f ef       	ldi	r24, 0xFF	; 255
 2b6:	9f ef       	ldi	r25, 0xFF	; 255
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <puts+0x56>
 2ba:	8d 2f       	mov	r24, r29
 2bc:	9c 2f       	mov	r25, r28
 2be:	df 91       	pop	r29
 2c0:	cf 91       	pop	r28
 2c2:	1f 91       	pop	r17
 2c4:	0f 91       	pop	r16
 2c6:	08 95       	ret

000002c8 <vfprintf>:
 2c8:	ab e0       	ldi	r26, 0x0B	; 11
 2ca:	b0 e0       	ldi	r27, 0x00	; 0
 2cc:	ea e6       	ldi	r30, 0x6A	; 106
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	0c 94 27 04 	jmp	0x84e	; 0x84e <__prologue_saves__>
 2d4:	6c 01       	movw	r12, r24
 2d6:	7b 01       	movw	r14, r22
 2d8:	8a 01       	movw	r16, r20
 2da:	fc 01       	movw	r30, r24
 2dc:	17 82       	std	Z+7, r1	; 0x07
 2de:	16 82       	std	Z+6, r1	; 0x06
 2e0:	83 81       	ldd	r24, Z+3	; 0x03
 2e2:	81 ff       	sbrs	r24, 1
 2e4:	cc c1       	rjmp	.+920    	; 0x67e <__stack+0x17f>
 2e6:	ce 01       	movw	r24, r28
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	3c 01       	movw	r6, r24
 2ec:	f6 01       	movw	r30, r12
 2ee:	93 81       	ldd	r25, Z+3	; 0x03
 2f0:	f7 01       	movw	r30, r14
 2f2:	93 fd       	sbrc	r25, 3
 2f4:	85 91       	lpm	r24, Z+
 2f6:	93 ff       	sbrs	r25, 3
 2f8:	81 91       	ld	r24, Z+
 2fa:	7f 01       	movw	r14, r30
 2fc:	88 23       	and	r24, r24
 2fe:	09 f4       	brne	.+2      	; 0x302 <vfprintf+0x3a>
 300:	ba c1       	rjmp	.+884    	; 0x676 <__stack+0x177>
 302:	85 32       	cpi	r24, 0x25	; 37
 304:	39 f4       	brne	.+14     	; 0x314 <vfprintf+0x4c>
 306:	93 fd       	sbrc	r25, 3
 308:	85 91       	lpm	r24, Z+
 30a:	93 ff       	sbrs	r25, 3
 30c:	81 91       	ld	r24, Z+
 30e:	7f 01       	movw	r14, r30
 310:	85 32       	cpi	r24, 0x25	; 37
 312:	29 f4       	brne	.+10     	; 0x31e <vfprintf+0x56>
 314:	b6 01       	movw	r22, r12
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 31c:	e7 cf       	rjmp	.-50     	; 0x2ec <vfprintf+0x24>
 31e:	91 2c       	mov	r9, r1
 320:	21 2c       	mov	r2, r1
 322:	31 2c       	mov	r3, r1
 324:	ff e1       	ldi	r31, 0x1F	; 31
 326:	f3 15       	cp	r31, r3
 328:	d8 f0       	brcs	.+54     	; 0x360 <vfprintf+0x98>
 32a:	8b 32       	cpi	r24, 0x2B	; 43
 32c:	79 f0       	breq	.+30     	; 0x34c <vfprintf+0x84>
 32e:	38 f4       	brcc	.+14     	; 0x33e <vfprintf+0x76>
 330:	80 32       	cpi	r24, 0x20	; 32
 332:	79 f0       	breq	.+30     	; 0x352 <vfprintf+0x8a>
 334:	83 32       	cpi	r24, 0x23	; 35
 336:	a1 f4       	brne	.+40     	; 0x360 <vfprintf+0x98>
 338:	23 2d       	mov	r18, r3
 33a:	20 61       	ori	r18, 0x10	; 16
 33c:	1d c0       	rjmp	.+58     	; 0x378 <vfprintf+0xb0>
 33e:	8d 32       	cpi	r24, 0x2D	; 45
 340:	61 f0       	breq	.+24     	; 0x35a <vfprintf+0x92>
 342:	80 33       	cpi	r24, 0x30	; 48
 344:	69 f4       	brne	.+26     	; 0x360 <vfprintf+0x98>
 346:	23 2d       	mov	r18, r3
 348:	21 60       	ori	r18, 0x01	; 1
 34a:	16 c0       	rjmp	.+44     	; 0x378 <vfprintf+0xb0>
 34c:	83 2d       	mov	r24, r3
 34e:	82 60       	ori	r24, 0x02	; 2
 350:	38 2e       	mov	r3, r24
 352:	e3 2d       	mov	r30, r3
 354:	e4 60       	ori	r30, 0x04	; 4
 356:	3e 2e       	mov	r3, r30
 358:	2a c0       	rjmp	.+84     	; 0x3ae <vfprintf+0xe6>
 35a:	f3 2d       	mov	r31, r3
 35c:	f8 60       	ori	r31, 0x08	; 8
 35e:	1d c0       	rjmp	.+58     	; 0x39a <vfprintf+0xd2>
 360:	37 fc       	sbrc	r3, 7
 362:	2d c0       	rjmp	.+90     	; 0x3be <vfprintf+0xf6>
 364:	20 ed       	ldi	r18, 0xD0	; 208
 366:	28 0f       	add	r18, r24
 368:	2a 30       	cpi	r18, 0x0A	; 10
 36a:	40 f0       	brcs	.+16     	; 0x37c <vfprintf+0xb4>
 36c:	8e 32       	cpi	r24, 0x2E	; 46
 36e:	b9 f4       	brne	.+46     	; 0x39e <vfprintf+0xd6>
 370:	36 fc       	sbrc	r3, 6
 372:	81 c1       	rjmp	.+770    	; 0x676 <__stack+0x177>
 374:	23 2d       	mov	r18, r3
 376:	20 64       	ori	r18, 0x40	; 64
 378:	32 2e       	mov	r3, r18
 37a:	19 c0       	rjmp	.+50     	; 0x3ae <vfprintf+0xe6>
 37c:	36 fe       	sbrs	r3, 6
 37e:	06 c0       	rjmp	.+12     	; 0x38c <vfprintf+0xc4>
 380:	8a e0       	ldi	r24, 0x0A	; 10
 382:	98 9e       	mul	r9, r24
 384:	20 0d       	add	r18, r0
 386:	11 24       	eor	r1, r1
 388:	92 2e       	mov	r9, r18
 38a:	11 c0       	rjmp	.+34     	; 0x3ae <vfprintf+0xe6>
 38c:	ea e0       	ldi	r30, 0x0A	; 10
 38e:	2e 9e       	mul	r2, r30
 390:	20 0d       	add	r18, r0
 392:	11 24       	eor	r1, r1
 394:	22 2e       	mov	r2, r18
 396:	f3 2d       	mov	r31, r3
 398:	f0 62       	ori	r31, 0x20	; 32
 39a:	3f 2e       	mov	r3, r31
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <vfprintf+0xe6>
 39e:	8c 36       	cpi	r24, 0x6C	; 108
 3a0:	21 f4       	brne	.+8      	; 0x3aa <vfprintf+0xe2>
 3a2:	83 2d       	mov	r24, r3
 3a4:	80 68       	ori	r24, 0x80	; 128
 3a6:	38 2e       	mov	r3, r24
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <vfprintf+0xe6>
 3aa:	88 36       	cpi	r24, 0x68	; 104
 3ac:	41 f4       	brne	.+16     	; 0x3be <vfprintf+0xf6>
 3ae:	f7 01       	movw	r30, r14
 3b0:	93 fd       	sbrc	r25, 3
 3b2:	85 91       	lpm	r24, Z+
 3b4:	93 ff       	sbrs	r25, 3
 3b6:	81 91       	ld	r24, Z+
 3b8:	7f 01       	movw	r14, r30
 3ba:	81 11       	cpse	r24, r1
 3bc:	b3 cf       	rjmp	.-154    	; 0x324 <vfprintf+0x5c>
 3be:	98 2f       	mov	r25, r24
 3c0:	9f 7d       	andi	r25, 0xDF	; 223
 3c2:	95 54       	subi	r25, 0x45	; 69
 3c4:	93 30       	cpi	r25, 0x03	; 3
 3c6:	28 f4       	brcc	.+10     	; 0x3d2 <vfprintf+0x10a>
 3c8:	0c 5f       	subi	r16, 0xFC	; 252
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	9f e3       	ldi	r25, 0x3F	; 63
 3ce:	99 83       	std	Y+1, r25	; 0x01
 3d0:	0d c0       	rjmp	.+26     	; 0x3ec <vfprintf+0x124>
 3d2:	83 36       	cpi	r24, 0x63	; 99
 3d4:	31 f0       	breq	.+12     	; 0x3e2 <vfprintf+0x11a>
 3d6:	83 37       	cpi	r24, 0x73	; 115
 3d8:	71 f0       	breq	.+28     	; 0x3f6 <vfprintf+0x12e>
 3da:	83 35       	cpi	r24, 0x53	; 83
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <vfprintf+0x118>
 3de:	59 c0       	rjmp	.+178    	; 0x492 <__DATA_REGION_LENGTH__+0x92>
 3e0:	21 c0       	rjmp	.+66     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 3e2:	f8 01       	movw	r30, r16
 3e4:	80 81       	ld	r24, Z
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	0e 5f       	subi	r16, 0xFE	; 254
 3ea:	1f 4f       	sbci	r17, 0xFF	; 255
 3ec:	88 24       	eor	r8, r8
 3ee:	83 94       	inc	r8
 3f0:	91 2c       	mov	r9, r1
 3f2:	53 01       	movw	r10, r6
 3f4:	13 c0       	rjmp	.+38     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3f6:	28 01       	movw	r4, r16
 3f8:	f2 e0       	ldi	r31, 0x02	; 2
 3fa:	4f 0e       	add	r4, r31
 3fc:	51 1c       	adc	r5, r1
 3fe:	f8 01       	movw	r30, r16
 400:	a0 80       	ld	r10, Z
 402:	b1 80       	ldd	r11, Z+1	; 0x01
 404:	36 fe       	sbrs	r3, 6
 406:	03 c0       	rjmp	.+6      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 408:	69 2d       	mov	r22, r9
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 40e:	6f ef       	ldi	r22, 0xFF	; 255
 410:	7f ef       	ldi	r23, 0xFF	; 255
 412:	c5 01       	movw	r24, r10
 414:	0e 94 50 03 	call	0x6a0	; 0x6a0 <strnlen>
 418:	4c 01       	movw	r8, r24
 41a:	82 01       	movw	r16, r4
 41c:	f3 2d       	mov	r31, r3
 41e:	ff 77       	andi	r31, 0x7F	; 127
 420:	3f 2e       	mov	r3, r31
 422:	16 c0       	rjmp	.+44     	; 0x450 <__DATA_REGION_LENGTH__+0x50>
 424:	28 01       	movw	r4, r16
 426:	22 e0       	ldi	r18, 0x02	; 2
 428:	42 0e       	add	r4, r18
 42a:	51 1c       	adc	r5, r1
 42c:	f8 01       	movw	r30, r16
 42e:	a0 80       	ld	r10, Z
 430:	b1 80       	ldd	r11, Z+1	; 0x01
 432:	36 fe       	sbrs	r3, 6
 434:	03 c0       	rjmp	.+6      	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 436:	69 2d       	mov	r22, r9
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 43c:	6f ef       	ldi	r22, 0xFF	; 255
 43e:	7f ef       	ldi	r23, 0xFF	; 255
 440:	c5 01       	movw	r24, r10
 442:	0e 94 45 03 	call	0x68a	; 0x68a <strnlen_P>
 446:	4c 01       	movw	r8, r24
 448:	f3 2d       	mov	r31, r3
 44a:	f0 68       	ori	r31, 0x80	; 128
 44c:	3f 2e       	mov	r3, r31
 44e:	82 01       	movw	r16, r4
 450:	33 fc       	sbrc	r3, 3
 452:	1b c0       	rjmp	.+54     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 454:	82 2d       	mov	r24, r2
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	88 16       	cp	r8, r24
 45a:	99 06       	cpc	r9, r25
 45c:	b0 f4       	brcc	.+44     	; 0x48a <__DATA_REGION_LENGTH__+0x8a>
 45e:	b6 01       	movw	r22, r12
 460:	80 e2       	ldi	r24, 0x20	; 32
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 468:	2a 94       	dec	r2
 46a:	f4 cf       	rjmp	.-24     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 46c:	f5 01       	movw	r30, r10
 46e:	37 fc       	sbrc	r3, 7
 470:	85 91       	lpm	r24, Z+
 472:	37 fe       	sbrs	r3, 7
 474:	81 91       	ld	r24, Z+
 476:	5f 01       	movw	r10, r30
 478:	b6 01       	movw	r22, r12
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 480:	21 10       	cpse	r2, r1
 482:	2a 94       	dec	r2
 484:	21 e0       	ldi	r18, 0x01	; 1
 486:	82 1a       	sub	r8, r18
 488:	91 08       	sbc	r9, r1
 48a:	81 14       	cp	r8, r1
 48c:	91 04       	cpc	r9, r1
 48e:	71 f7       	brne	.-36     	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 490:	e8 c0       	rjmp	.+464    	; 0x662 <__stack+0x163>
 492:	84 36       	cpi	r24, 0x64	; 100
 494:	11 f0       	breq	.+4      	; 0x49a <__DATA_REGION_LENGTH__+0x9a>
 496:	89 36       	cpi	r24, 0x69	; 105
 498:	41 f5       	brne	.+80     	; 0x4ea <__DATA_REGION_LENGTH__+0xea>
 49a:	f8 01       	movw	r30, r16
 49c:	37 fe       	sbrs	r3, 7
 49e:	07 c0       	rjmp	.+14     	; 0x4ae <__DATA_REGION_LENGTH__+0xae>
 4a0:	60 81       	ld	r22, Z
 4a2:	71 81       	ldd	r23, Z+1	; 0x01
 4a4:	82 81       	ldd	r24, Z+2	; 0x02
 4a6:	93 81       	ldd	r25, Z+3	; 0x03
 4a8:	0c 5f       	subi	r16, 0xFC	; 252
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	08 c0       	rjmp	.+16     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 4ae:	60 81       	ld	r22, Z
 4b0:	71 81       	ldd	r23, Z+1	; 0x01
 4b2:	07 2e       	mov	r0, r23
 4b4:	00 0c       	add	r0, r0
 4b6:	88 0b       	sbc	r24, r24
 4b8:	99 0b       	sbc	r25, r25
 4ba:	0e 5f       	subi	r16, 0xFE	; 254
 4bc:	1f 4f       	sbci	r17, 0xFF	; 255
 4be:	f3 2d       	mov	r31, r3
 4c0:	ff 76       	andi	r31, 0x6F	; 111
 4c2:	3f 2e       	mov	r3, r31
 4c4:	97 ff       	sbrs	r25, 7
 4c6:	09 c0       	rjmp	.+18     	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4c8:	90 95       	com	r25
 4ca:	80 95       	com	r24
 4cc:	70 95       	com	r23
 4ce:	61 95       	neg	r22
 4d0:	7f 4f       	sbci	r23, 0xFF	; 255
 4d2:	8f 4f       	sbci	r24, 0xFF	; 255
 4d4:	9f 4f       	sbci	r25, 0xFF	; 255
 4d6:	f0 68       	ori	r31, 0x80	; 128
 4d8:	3f 2e       	mov	r3, r31
 4da:	2a e0       	ldi	r18, 0x0A	; 10
 4dc:	30 e0       	ldi	r19, 0x00	; 0
 4de:	a3 01       	movw	r20, r6
 4e0:	0e 94 97 03 	call	0x72e	; 0x72e <__ultoa_invert>
 4e4:	88 2e       	mov	r8, r24
 4e6:	86 18       	sub	r8, r6
 4e8:	45 c0       	rjmp	.+138    	; 0x574 <__stack+0x75>
 4ea:	85 37       	cpi	r24, 0x75	; 117
 4ec:	31 f4       	brne	.+12     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4ee:	23 2d       	mov	r18, r3
 4f0:	2f 7e       	andi	r18, 0xEF	; 239
 4f2:	b2 2e       	mov	r11, r18
 4f4:	2a e0       	ldi	r18, 0x0A	; 10
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	25 c0       	rjmp	.+74     	; 0x544 <__stack+0x45>
 4fa:	93 2d       	mov	r25, r3
 4fc:	99 7f       	andi	r25, 0xF9	; 249
 4fe:	b9 2e       	mov	r11, r25
 500:	8f 36       	cpi	r24, 0x6F	; 111
 502:	c1 f0       	breq	.+48     	; 0x534 <__stack+0x35>
 504:	18 f4       	brcc	.+6      	; 0x50c <__stack+0xd>
 506:	88 35       	cpi	r24, 0x58	; 88
 508:	79 f0       	breq	.+30     	; 0x528 <__stack+0x29>
 50a:	b5 c0       	rjmp	.+362    	; 0x676 <__stack+0x177>
 50c:	80 37       	cpi	r24, 0x70	; 112
 50e:	19 f0       	breq	.+6      	; 0x516 <__stack+0x17>
 510:	88 37       	cpi	r24, 0x78	; 120
 512:	21 f0       	breq	.+8      	; 0x51c <__stack+0x1d>
 514:	b0 c0       	rjmp	.+352    	; 0x676 <__stack+0x177>
 516:	e9 2f       	mov	r30, r25
 518:	e0 61       	ori	r30, 0x10	; 16
 51a:	be 2e       	mov	r11, r30
 51c:	b4 fe       	sbrs	r11, 4
 51e:	0d c0       	rjmp	.+26     	; 0x53a <__stack+0x3b>
 520:	fb 2d       	mov	r31, r11
 522:	f4 60       	ori	r31, 0x04	; 4
 524:	bf 2e       	mov	r11, r31
 526:	09 c0       	rjmp	.+18     	; 0x53a <__stack+0x3b>
 528:	34 fe       	sbrs	r3, 4
 52a:	0a c0       	rjmp	.+20     	; 0x540 <__stack+0x41>
 52c:	29 2f       	mov	r18, r25
 52e:	26 60       	ori	r18, 0x06	; 6
 530:	b2 2e       	mov	r11, r18
 532:	06 c0       	rjmp	.+12     	; 0x540 <__stack+0x41>
 534:	28 e0       	ldi	r18, 0x08	; 8
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	05 c0       	rjmp	.+10     	; 0x544 <__stack+0x45>
 53a:	20 e1       	ldi	r18, 0x10	; 16
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__stack+0x45>
 540:	20 e1       	ldi	r18, 0x10	; 16
 542:	32 e0       	ldi	r19, 0x02	; 2
 544:	f8 01       	movw	r30, r16
 546:	b7 fe       	sbrs	r11, 7
 548:	07 c0       	rjmp	.+14     	; 0x558 <__stack+0x59>
 54a:	60 81       	ld	r22, Z
 54c:	71 81       	ldd	r23, Z+1	; 0x01
 54e:	82 81       	ldd	r24, Z+2	; 0x02
 550:	93 81       	ldd	r25, Z+3	; 0x03
 552:	0c 5f       	subi	r16, 0xFC	; 252
 554:	1f 4f       	sbci	r17, 0xFF	; 255
 556:	06 c0       	rjmp	.+12     	; 0x564 <__stack+0x65>
 558:	60 81       	ld	r22, Z
 55a:	71 81       	ldd	r23, Z+1	; 0x01
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 5f       	subi	r16, 0xFE	; 254
 562:	1f 4f       	sbci	r17, 0xFF	; 255
 564:	a3 01       	movw	r20, r6
 566:	0e 94 97 03 	call	0x72e	; 0x72e <__ultoa_invert>
 56a:	88 2e       	mov	r8, r24
 56c:	86 18       	sub	r8, r6
 56e:	fb 2d       	mov	r31, r11
 570:	ff 77       	andi	r31, 0x7F	; 127
 572:	3f 2e       	mov	r3, r31
 574:	36 fe       	sbrs	r3, 6
 576:	0d c0       	rjmp	.+26     	; 0x592 <__stack+0x93>
 578:	23 2d       	mov	r18, r3
 57a:	2e 7f       	andi	r18, 0xFE	; 254
 57c:	a2 2e       	mov	r10, r18
 57e:	89 14       	cp	r8, r9
 580:	58 f4       	brcc	.+22     	; 0x598 <__stack+0x99>
 582:	34 fe       	sbrs	r3, 4
 584:	0b c0       	rjmp	.+22     	; 0x59c <__stack+0x9d>
 586:	32 fc       	sbrc	r3, 2
 588:	09 c0       	rjmp	.+18     	; 0x59c <__stack+0x9d>
 58a:	83 2d       	mov	r24, r3
 58c:	8e 7e       	andi	r24, 0xEE	; 238
 58e:	a8 2e       	mov	r10, r24
 590:	05 c0       	rjmp	.+10     	; 0x59c <__stack+0x9d>
 592:	b8 2c       	mov	r11, r8
 594:	a3 2c       	mov	r10, r3
 596:	03 c0       	rjmp	.+6      	; 0x59e <__stack+0x9f>
 598:	b8 2c       	mov	r11, r8
 59a:	01 c0       	rjmp	.+2      	; 0x59e <__stack+0x9f>
 59c:	b9 2c       	mov	r11, r9
 59e:	a4 fe       	sbrs	r10, 4
 5a0:	0f c0       	rjmp	.+30     	; 0x5c0 <__stack+0xc1>
 5a2:	fe 01       	movw	r30, r28
 5a4:	e8 0d       	add	r30, r8
 5a6:	f1 1d       	adc	r31, r1
 5a8:	80 81       	ld	r24, Z
 5aa:	80 33       	cpi	r24, 0x30	; 48
 5ac:	21 f4       	brne	.+8      	; 0x5b6 <__stack+0xb7>
 5ae:	9a 2d       	mov	r25, r10
 5b0:	99 7e       	andi	r25, 0xE9	; 233
 5b2:	a9 2e       	mov	r10, r25
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__stack+0xc9>
 5b6:	a2 fe       	sbrs	r10, 2
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__stack+0xc7>
 5ba:	b3 94       	inc	r11
 5bc:	b3 94       	inc	r11
 5be:	04 c0       	rjmp	.+8      	; 0x5c8 <__stack+0xc9>
 5c0:	8a 2d       	mov	r24, r10
 5c2:	86 78       	andi	r24, 0x86	; 134
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__stack+0xc9>
 5c6:	b3 94       	inc	r11
 5c8:	a3 fc       	sbrc	r10, 3
 5ca:	11 c0       	rjmp	.+34     	; 0x5ee <__stack+0xef>
 5cc:	a0 fe       	sbrs	r10, 0
 5ce:	06 c0       	rjmp	.+12     	; 0x5dc <__stack+0xdd>
 5d0:	b2 14       	cp	r11, r2
 5d2:	88 f4       	brcc	.+34     	; 0x5f6 <__stack+0xf7>
 5d4:	28 0c       	add	r2, r8
 5d6:	92 2c       	mov	r9, r2
 5d8:	9b 18       	sub	r9, r11
 5da:	0e c0       	rjmp	.+28     	; 0x5f8 <__stack+0xf9>
 5dc:	b2 14       	cp	r11, r2
 5de:	60 f4       	brcc	.+24     	; 0x5f8 <__stack+0xf9>
 5e0:	b6 01       	movw	r22, r12
 5e2:	80 e2       	ldi	r24, 0x20	; 32
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 5ea:	b3 94       	inc	r11
 5ec:	f7 cf       	rjmp	.-18     	; 0x5dc <__stack+0xdd>
 5ee:	b2 14       	cp	r11, r2
 5f0:	18 f4       	brcc	.+6      	; 0x5f8 <__stack+0xf9>
 5f2:	2b 18       	sub	r2, r11
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <__stack+0xfb>
 5f6:	98 2c       	mov	r9, r8
 5f8:	21 2c       	mov	r2, r1
 5fa:	a4 fe       	sbrs	r10, 4
 5fc:	10 c0       	rjmp	.+32     	; 0x61e <__stack+0x11f>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e3       	ldi	r24, 0x30	; 48
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 608:	a2 fe       	sbrs	r10, 2
 60a:	17 c0       	rjmp	.+46     	; 0x63a <__stack+0x13b>
 60c:	a1 fc       	sbrc	r10, 1
 60e:	03 c0       	rjmp	.+6      	; 0x616 <__stack+0x117>
 610:	88 e7       	ldi	r24, 0x78	; 120
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <__stack+0x11b>
 616:	88 e5       	ldi	r24, 0x58	; 88
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	b6 01       	movw	r22, r12
 61c:	0c c0       	rjmp	.+24     	; 0x636 <__stack+0x137>
 61e:	8a 2d       	mov	r24, r10
 620:	86 78       	andi	r24, 0x86	; 134
 622:	59 f0       	breq	.+22     	; 0x63a <__stack+0x13b>
 624:	a1 fe       	sbrs	r10, 1
 626:	02 c0       	rjmp	.+4      	; 0x62c <__stack+0x12d>
 628:	8b e2       	ldi	r24, 0x2B	; 43
 62a:	01 c0       	rjmp	.+2      	; 0x62e <__stack+0x12f>
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	a7 fc       	sbrc	r10, 7
 630:	8d e2       	ldi	r24, 0x2D	; 45
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 63a:	89 14       	cp	r8, r9
 63c:	38 f4       	brcc	.+14     	; 0x64c <__stack+0x14d>
 63e:	b6 01       	movw	r22, r12
 640:	80 e3       	ldi	r24, 0x30	; 48
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 648:	9a 94       	dec	r9
 64a:	f7 cf       	rjmp	.-18     	; 0x63a <__stack+0x13b>
 64c:	8a 94       	dec	r8
 64e:	f3 01       	movw	r30, r6
 650:	e8 0d       	add	r30, r8
 652:	f1 1d       	adc	r31, r1
 654:	80 81       	ld	r24, Z
 656:	b6 01       	movw	r22, r12
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 65e:	81 10       	cpse	r8, r1
 660:	f5 cf       	rjmp	.-22     	; 0x64c <__stack+0x14d>
 662:	22 20       	and	r2, r2
 664:	09 f4       	brne	.+2      	; 0x668 <__stack+0x169>
 666:	42 ce       	rjmp	.-892    	; 0x2ec <vfprintf+0x24>
 668:	b6 01       	movw	r22, r12
 66a:	80 e2       	ldi	r24, 0x20	; 32
 66c:	90 e0       	ldi	r25, 0x00	; 0
 66e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <fputc>
 672:	2a 94       	dec	r2
 674:	f6 cf       	rjmp	.-20     	; 0x662 <__stack+0x163>
 676:	f6 01       	movw	r30, r12
 678:	86 81       	ldd	r24, Z+6	; 0x06
 67a:	97 81       	ldd	r25, Z+7	; 0x07
 67c:	02 c0       	rjmp	.+4      	; 0x682 <__stack+0x183>
 67e:	8f ef       	ldi	r24, 0xFF	; 255
 680:	9f ef       	ldi	r25, 0xFF	; 255
 682:	2b 96       	adiw	r28, 0x0b	; 11
 684:	e2 e1       	ldi	r30, 0x12	; 18
 686:	0c 94 43 04 	jmp	0x886	; 0x886 <__epilogue_restores__>

0000068a <strnlen_P>:
 68a:	fc 01       	movw	r30, r24
 68c:	05 90       	lpm	r0, Z+
 68e:	61 50       	subi	r22, 0x01	; 1
 690:	70 40       	sbci	r23, 0x00	; 0
 692:	01 10       	cpse	r0, r1
 694:	d8 f7       	brcc	.-10     	; 0x68c <strnlen_P+0x2>
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	8e 0f       	add	r24, r30
 69c:	9f 1f       	adc	r25, r31
 69e:	08 95       	ret

000006a0 <strnlen>:
 6a0:	fc 01       	movw	r30, r24
 6a2:	61 50       	subi	r22, 0x01	; 1
 6a4:	70 40       	sbci	r23, 0x00	; 0
 6a6:	01 90       	ld	r0, Z+
 6a8:	01 10       	cpse	r0, r1
 6aa:	d8 f7       	brcc	.-10     	; 0x6a2 <strnlen+0x2>
 6ac:	80 95       	com	r24
 6ae:	90 95       	com	r25
 6b0:	8e 0f       	add	r24, r30
 6b2:	9f 1f       	adc	r25, r31
 6b4:	08 95       	ret

000006b6 <fputc>:
 6b6:	0f 93       	push	r16
 6b8:	1f 93       	push	r17
 6ba:	cf 93       	push	r28
 6bc:	df 93       	push	r29
 6be:	fb 01       	movw	r30, r22
 6c0:	23 81       	ldd	r18, Z+3	; 0x03
 6c2:	21 fd       	sbrc	r18, 1
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <fputc+0x16>
 6c6:	8f ef       	ldi	r24, 0xFF	; 255
 6c8:	9f ef       	ldi	r25, 0xFF	; 255
 6ca:	2c c0       	rjmp	.+88     	; 0x724 <fputc+0x6e>
 6cc:	22 ff       	sbrs	r18, 2
 6ce:	16 c0       	rjmp	.+44     	; 0x6fc <fputc+0x46>
 6d0:	46 81       	ldd	r20, Z+6	; 0x06
 6d2:	57 81       	ldd	r21, Z+7	; 0x07
 6d4:	24 81       	ldd	r18, Z+4	; 0x04
 6d6:	35 81       	ldd	r19, Z+5	; 0x05
 6d8:	42 17       	cp	r20, r18
 6da:	53 07       	cpc	r21, r19
 6dc:	44 f4       	brge	.+16     	; 0x6ee <fputc+0x38>
 6de:	a0 81       	ld	r26, Z
 6e0:	b1 81       	ldd	r27, Z+1	; 0x01
 6e2:	9d 01       	movw	r18, r26
 6e4:	2f 5f       	subi	r18, 0xFF	; 255
 6e6:	3f 4f       	sbci	r19, 0xFF	; 255
 6e8:	31 83       	std	Z+1, r19	; 0x01
 6ea:	20 83       	st	Z, r18
 6ec:	8c 93       	st	X, r24
 6ee:	26 81       	ldd	r18, Z+6	; 0x06
 6f0:	37 81       	ldd	r19, Z+7	; 0x07
 6f2:	2f 5f       	subi	r18, 0xFF	; 255
 6f4:	3f 4f       	sbci	r19, 0xFF	; 255
 6f6:	37 83       	std	Z+7, r19	; 0x07
 6f8:	26 83       	std	Z+6, r18	; 0x06
 6fa:	14 c0       	rjmp	.+40     	; 0x724 <fputc+0x6e>
 6fc:	8b 01       	movw	r16, r22
 6fe:	ec 01       	movw	r28, r24
 700:	fb 01       	movw	r30, r22
 702:	00 84       	ldd	r0, Z+8	; 0x08
 704:	f1 85       	ldd	r31, Z+9	; 0x09
 706:	e0 2d       	mov	r30, r0
 708:	09 95       	icall
 70a:	89 2b       	or	r24, r25
 70c:	e1 f6       	brne	.-72     	; 0x6c6 <fputc+0x10>
 70e:	d8 01       	movw	r26, r16
 710:	16 96       	adiw	r26, 0x06	; 6
 712:	8d 91       	ld	r24, X+
 714:	9c 91       	ld	r25, X
 716:	17 97       	sbiw	r26, 0x07	; 7
 718:	01 96       	adiw	r24, 0x01	; 1
 71a:	17 96       	adiw	r26, 0x07	; 7
 71c:	9c 93       	st	X, r25
 71e:	8e 93       	st	-X, r24
 720:	16 97       	sbiw	r26, 0x06	; 6
 722:	ce 01       	movw	r24, r28
 724:	df 91       	pop	r29
 726:	cf 91       	pop	r28
 728:	1f 91       	pop	r17
 72a:	0f 91       	pop	r16
 72c:	08 95       	ret

0000072e <__ultoa_invert>:
 72e:	fa 01       	movw	r30, r20
 730:	aa 27       	eor	r26, r26
 732:	28 30       	cpi	r18, 0x08	; 8
 734:	51 f1       	breq	.+84     	; 0x78a <__ultoa_invert+0x5c>
 736:	20 31       	cpi	r18, 0x10	; 16
 738:	81 f1       	breq	.+96     	; 0x79a <__ultoa_invert+0x6c>
 73a:	e8 94       	clt
 73c:	6f 93       	push	r22
 73e:	6e 7f       	andi	r22, 0xFE	; 254
 740:	6e 5f       	subi	r22, 0xFE	; 254
 742:	7f 4f       	sbci	r23, 0xFF	; 255
 744:	8f 4f       	sbci	r24, 0xFF	; 255
 746:	9f 4f       	sbci	r25, 0xFF	; 255
 748:	af 4f       	sbci	r26, 0xFF	; 255
 74a:	b1 e0       	ldi	r27, 0x01	; 1
 74c:	3e d0       	rcall	.+124    	; 0x7ca <__ultoa_invert+0x9c>
 74e:	b4 e0       	ldi	r27, 0x04	; 4
 750:	3c d0       	rcall	.+120    	; 0x7ca <__ultoa_invert+0x9c>
 752:	67 0f       	add	r22, r23
 754:	78 1f       	adc	r23, r24
 756:	89 1f       	adc	r24, r25
 758:	9a 1f       	adc	r25, r26
 75a:	a1 1d       	adc	r26, r1
 75c:	68 0f       	add	r22, r24
 75e:	79 1f       	adc	r23, r25
 760:	8a 1f       	adc	r24, r26
 762:	91 1d       	adc	r25, r1
 764:	a1 1d       	adc	r26, r1
 766:	6a 0f       	add	r22, r26
 768:	71 1d       	adc	r23, r1
 76a:	81 1d       	adc	r24, r1
 76c:	91 1d       	adc	r25, r1
 76e:	a1 1d       	adc	r26, r1
 770:	20 d0       	rcall	.+64     	; 0x7b2 <__ultoa_invert+0x84>
 772:	09 f4       	brne	.+2      	; 0x776 <__ultoa_invert+0x48>
 774:	68 94       	set
 776:	3f 91       	pop	r19
 778:	2a e0       	ldi	r18, 0x0A	; 10
 77a:	26 9f       	mul	r18, r22
 77c:	11 24       	eor	r1, r1
 77e:	30 19       	sub	r19, r0
 780:	30 5d       	subi	r19, 0xD0	; 208
 782:	31 93       	st	Z+, r19
 784:	de f6       	brtc	.-74     	; 0x73c <__ultoa_invert+0xe>
 786:	cf 01       	movw	r24, r30
 788:	08 95       	ret
 78a:	46 2f       	mov	r20, r22
 78c:	47 70       	andi	r20, 0x07	; 7
 78e:	40 5d       	subi	r20, 0xD0	; 208
 790:	41 93       	st	Z+, r20
 792:	b3 e0       	ldi	r27, 0x03	; 3
 794:	0f d0       	rcall	.+30     	; 0x7b4 <__ultoa_invert+0x86>
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0x5c>
 798:	f6 cf       	rjmp	.-20     	; 0x786 <__ultoa_invert+0x58>
 79a:	46 2f       	mov	r20, r22
 79c:	4f 70       	andi	r20, 0x0F	; 15
 79e:	40 5d       	subi	r20, 0xD0	; 208
 7a0:	4a 33       	cpi	r20, 0x3A	; 58
 7a2:	18 f0       	brcs	.+6      	; 0x7aa <__ultoa_invert+0x7c>
 7a4:	49 5d       	subi	r20, 0xD9	; 217
 7a6:	31 fd       	sbrc	r19, 1
 7a8:	40 52       	subi	r20, 0x20	; 32
 7aa:	41 93       	st	Z+, r20
 7ac:	02 d0       	rcall	.+4      	; 0x7b2 <__ultoa_invert+0x84>
 7ae:	a9 f7       	brne	.-22     	; 0x79a <__ultoa_invert+0x6c>
 7b0:	ea cf       	rjmp	.-44     	; 0x786 <__ultoa_invert+0x58>
 7b2:	b4 e0       	ldi	r27, 0x04	; 4
 7b4:	a6 95       	lsr	r26
 7b6:	97 95       	ror	r25
 7b8:	87 95       	ror	r24
 7ba:	77 95       	ror	r23
 7bc:	67 95       	ror	r22
 7be:	ba 95       	dec	r27
 7c0:	c9 f7       	brne	.-14     	; 0x7b4 <__ultoa_invert+0x86>
 7c2:	00 97       	sbiw	r24, 0x00	; 0
 7c4:	61 05       	cpc	r22, r1
 7c6:	71 05       	cpc	r23, r1
 7c8:	08 95       	ret
 7ca:	9b 01       	movw	r18, r22
 7cc:	ac 01       	movw	r20, r24
 7ce:	0a 2e       	mov	r0, r26
 7d0:	06 94       	lsr	r0
 7d2:	57 95       	ror	r21
 7d4:	47 95       	ror	r20
 7d6:	37 95       	ror	r19
 7d8:	27 95       	ror	r18
 7da:	ba 95       	dec	r27
 7dc:	c9 f7       	brne	.-14     	; 0x7d0 <__ultoa_invert+0xa2>
 7de:	62 0f       	add	r22, r18
 7e0:	73 1f       	adc	r23, r19
 7e2:	84 1f       	adc	r24, r20
 7e4:	95 1f       	adc	r25, r21
 7e6:	a0 1d       	adc	r26, r0
 7e8:	08 95       	ret

000007ea <__divmodsi4>:
 7ea:	05 2e       	mov	r0, r21
 7ec:	97 fb       	bst	r25, 7
 7ee:	1e f4       	brtc	.+6      	; 0x7f6 <__divmodsi4+0xc>
 7f0:	00 94       	com	r0
 7f2:	0e 94 0c 04 	call	0x818	; 0x818 <__negsi2>
 7f6:	57 fd       	sbrc	r21, 7
 7f8:	07 d0       	rcall	.+14     	; 0x808 <__divmodsi4_neg2>
 7fa:	0e 94 5e 04 	call	0x8bc	; 0x8bc <__udivmodsi4>
 7fe:	07 fc       	sbrc	r0, 7
 800:	03 d0       	rcall	.+6      	; 0x808 <__divmodsi4_neg2>
 802:	4e f4       	brtc	.+18     	; 0x816 <__divmodsi4_exit>
 804:	0c 94 0c 04 	jmp	0x818	; 0x818 <__negsi2>

00000808 <__divmodsi4_neg2>:
 808:	50 95       	com	r21
 80a:	40 95       	com	r20
 80c:	30 95       	com	r19
 80e:	21 95       	neg	r18
 810:	3f 4f       	sbci	r19, 0xFF	; 255
 812:	4f 4f       	sbci	r20, 0xFF	; 255
 814:	5f 4f       	sbci	r21, 0xFF	; 255

00000816 <__divmodsi4_exit>:
 816:	08 95       	ret

00000818 <__negsi2>:
 818:	90 95       	com	r25
 81a:	80 95       	com	r24
 81c:	70 95       	com	r23
 81e:	61 95       	neg	r22
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	08 95       	ret

00000828 <__muluhisi3>:
 828:	0e 94 80 04 	call	0x900	; 0x900 <__umulhisi3>
 82c:	a5 9f       	mul	r26, r21
 82e:	90 0d       	add	r25, r0
 830:	b4 9f       	mul	r27, r20
 832:	90 0d       	add	r25, r0
 834:	a4 9f       	mul	r26, r20
 836:	80 0d       	add	r24, r0
 838:	91 1d       	adc	r25, r1
 83a:	11 24       	eor	r1, r1
 83c:	08 95       	ret

0000083e <__mulshisi3>:
 83e:	b7 ff       	sbrs	r27, 7
 840:	0c 94 14 04 	jmp	0x828	; 0x828 <__muluhisi3>

00000844 <__mulohisi3>:
 844:	0e 94 14 04 	call	0x828	; 0x828 <__muluhisi3>
 848:	82 1b       	sub	r24, r18
 84a:	93 0b       	sbc	r25, r19
 84c:	08 95       	ret

0000084e <__prologue_saves__>:
 84e:	2f 92       	push	r2
 850:	3f 92       	push	r3
 852:	4f 92       	push	r4
 854:	5f 92       	push	r5
 856:	6f 92       	push	r6
 858:	7f 92       	push	r7
 85a:	8f 92       	push	r8
 85c:	9f 92       	push	r9
 85e:	af 92       	push	r10
 860:	bf 92       	push	r11
 862:	cf 92       	push	r12
 864:	df 92       	push	r13
 866:	ef 92       	push	r14
 868:	ff 92       	push	r15
 86a:	0f 93       	push	r16
 86c:	1f 93       	push	r17
 86e:	cf 93       	push	r28
 870:	df 93       	push	r29
 872:	cd b7       	in	r28, 0x3d	; 61
 874:	de b7       	in	r29, 0x3e	; 62
 876:	ca 1b       	sub	r28, r26
 878:	db 0b       	sbc	r29, r27
 87a:	0f b6       	in	r0, 0x3f	; 63
 87c:	f8 94       	cli
 87e:	de bf       	out	0x3e, r29	; 62
 880:	0f be       	out	0x3f, r0	; 63
 882:	cd bf       	out	0x3d, r28	; 61
 884:	09 94       	ijmp

00000886 <__epilogue_restores__>:
 886:	2a 88       	ldd	r2, Y+18	; 0x12
 888:	39 88       	ldd	r3, Y+17	; 0x11
 88a:	48 88       	ldd	r4, Y+16	; 0x10
 88c:	5f 84       	ldd	r5, Y+15	; 0x0f
 88e:	6e 84       	ldd	r6, Y+14	; 0x0e
 890:	7d 84       	ldd	r7, Y+13	; 0x0d
 892:	8c 84       	ldd	r8, Y+12	; 0x0c
 894:	9b 84       	ldd	r9, Y+11	; 0x0b
 896:	aa 84       	ldd	r10, Y+10	; 0x0a
 898:	b9 84       	ldd	r11, Y+9	; 0x09
 89a:	c8 84       	ldd	r12, Y+8	; 0x08
 89c:	df 80       	ldd	r13, Y+7	; 0x07
 89e:	ee 80       	ldd	r14, Y+6	; 0x06
 8a0:	fd 80       	ldd	r15, Y+5	; 0x05
 8a2:	0c 81       	ldd	r16, Y+4	; 0x04
 8a4:	1b 81       	ldd	r17, Y+3	; 0x03
 8a6:	aa 81       	ldd	r26, Y+2	; 0x02
 8a8:	b9 81       	ldd	r27, Y+1	; 0x01
 8aa:	ce 0f       	add	r28, r30
 8ac:	d1 1d       	adc	r29, r1
 8ae:	0f b6       	in	r0, 0x3f	; 63
 8b0:	f8 94       	cli
 8b2:	de bf       	out	0x3e, r29	; 62
 8b4:	0f be       	out	0x3f, r0	; 63
 8b6:	cd bf       	out	0x3d, r28	; 61
 8b8:	ed 01       	movw	r28, r26
 8ba:	08 95       	ret

000008bc <__udivmodsi4>:
 8bc:	a1 e2       	ldi	r26, 0x21	; 33
 8be:	1a 2e       	mov	r1, r26
 8c0:	aa 1b       	sub	r26, r26
 8c2:	bb 1b       	sub	r27, r27
 8c4:	fd 01       	movw	r30, r26
 8c6:	0d c0       	rjmp	.+26     	; 0x8e2 <__udivmodsi4_ep>

000008c8 <__udivmodsi4_loop>:
 8c8:	aa 1f       	adc	r26, r26
 8ca:	bb 1f       	adc	r27, r27
 8cc:	ee 1f       	adc	r30, r30
 8ce:	ff 1f       	adc	r31, r31
 8d0:	a2 17       	cp	r26, r18
 8d2:	b3 07       	cpc	r27, r19
 8d4:	e4 07       	cpc	r30, r20
 8d6:	f5 07       	cpc	r31, r21
 8d8:	20 f0       	brcs	.+8      	; 0x8e2 <__udivmodsi4_ep>
 8da:	a2 1b       	sub	r26, r18
 8dc:	b3 0b       	sbc	r27, r19
 8de:	e4 0b       	sbc	r30, r20
 8e0:	f5 0b       	sbc	r31, r21

000008e2 <__udivmodsi4_ep>:
 8e2:	66 1f       	adc	r22, r22
 8e4:	77 1f       	adc	r23, r23
 8e6:	88 1f       	adc	r24, r24
 8e8:	99 1f       	adc	r25, r25
 8ea:	1a 94       	dec	r1
 8ec:	69 f7       	brne	.-38     	; 0x8c8 <__udivmodsi4_loop>
 8ee:	60 95       	com	r22
 8f0:	70 95       	com	r23
 8f2:	80 95       	com	r24
 8f4:	90 95       	com	r25
 8f6:	9b 01       	movw	r18, r22
 8f8:	ac 01       	movw	r20, r24
 8fa:	bd 01       	movw	r22, r26
 8fc:	cf 01       	movw	r24, r30
 8fe:	08 95       	ret

00000900 <__umulhisi3>:
 900:	a2 9f       	mul	r26, r18
 902:	b0 01       	movw	r22, r0
 904:	b3 9f       	mul	r27, r19
 906:	c0 01       	movw	r24, r0
 908:	a3 9f       	mul	r26, r19
 90a:	70 0d       	add	r23, r0
 90c:	81 1d       	adc	r24, r1
 90e:	11 24       	eor	r1, r1
 910:	91 1d       	adc	r25, r1
 912:	b2 9f       	mul	r27, r18
 914:	70 0d       	add	r23, r0
 916:	81 1d       	adc	r24, r1
 918:	11 24       	eor	r1, r1
 91a:	91 1d       	adc	r25, r1
 91c:	08 95       	ret

0000091e <_exit>:
 91e:	f8 94       	cli

00000920 <__stop_program>:
 920:	ff cf       	rjmp	.-2      	; 0x920 <__stop_program>
